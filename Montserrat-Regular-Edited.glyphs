{
.appVersion = "3091";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = "ULA ";
},
{
name = panose;
value = (
0,
0,
5,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
9,
29,
32,
33
);
},
{
name = codePageRanges;
value = (
"1252",
"1250",
"1251",
"1254",
"1257",
"1258",
"bit 29"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
NULL,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
uni00A0,
exclamdown,
cent,
sterling,
currency,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
logicalnot,
uni00AD,
registered,
macron,
degree,
plusminus,
uni00B2,
uni00B3,
acute,
uni00B5,
paragraph,
periodcentered,
cedilla,
uni00B9,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Dcroat,
dcroat,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Gcommaaccent,
gcommaaccent,
Hcircumflex,
hcircumflex,
Hbar,
hbar,
Itilde,
itilde,
Imacron,
imacron,
Ibreve,
ibreve,
Iogonek,
iogonek,
Idotaccent,
dotlessi,
IJ,
ij,
Jcircumflex,
jcircumflex,
Kcommaaccent,
kcommaaccent,
kgreenlandic,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Ldot,
ldot,
Lslash,
lslash,
Nacute,
nacute,
Ncommaaccent,
ncommaaccent,
Ncaron,
ncaron,
napostrophe,
Eng,
eng,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
OE,
oe,
Racute,
racute,
Rcommaaccent,
rcommaaccent,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Scaron,
scaron,
uni0162,
uni0163,
Tcaron,
tcaron,
Tbar,
tbar,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Ydieresis,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
Zcaron,
zcaron,
longs,
uni018F,
florin,
Ohorn,
ohorn,
Uhorn,
uhorn,
uni01B7,
uni01C4,
uni01C5,
uni01C6,
uni01C7,
uni01C8,
uni01C9,
uni01CA,
uni01CB,
uni01CC,
uni01CD,
uni01CE,
uni01CF,
uni01D0,
uni01D1,
uni01D2,
uni01D3,
uni01D4,
uni01D5,
uni01D6,
uni01D7,
uni01D8,
uni01D9,
uni01DA,
uni01DB,
uni01DC,
uni01DE,
uni01DF,
uni01E0,
uni01E1,
uni01E2,
uni01E3,
uni01E4,
uni01E5,
Gcaron,
gcaron,
uni01E8,
uni01E9,
uni01EA,
uni01EB,
uni01EC,
uni01ED,
uni01EE,
uni01EF,
uni01F0,
uni01F4,
uni01F5,
uni01F8,
uni01F9,
Aringacute,
aringacute,
AEacute,
aeacute,
Oslashacute,
oslashacute,
uni0200,
uni0201,
uni0202,
uni0203,
uni0204,
uni0205,
uni0206,
uni0207,
uni0208,
uni0209,
uni020A,
uni020B,
uni020C,
uni020D,
uni020E,
uni020F,
uni0210,
uni0211,
uni0212,
uni0213,
uni0214,
uni0215,
uni0216,
uni0217,
Scommaaccent,
scommaaccent,
uni021A,
uni021B,
uni021E,
uni021F,
uni0226,
uni0227,
uni0228,
uni0229,
uni022A,
uni022B,
uni022C,
uni022D,
uni022E,
uni022F,
uni0230,
uni0231,
uni0232,
uni0233,
uni0237,
uni0259,
uni0292,
uni02B9,
uni02BA,
uni02BB,
uni02BC,
uni02BE,
uni02BF,
circumflex,
caron,
uni02C8,
uni02C9,
uni02CA,
uni02CB,
uni02CC,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
gravecomb,
acutecomb,
uni0302,
tildecomb,
uni0304,
uni0306,
uni0307,
uni0308,
hookabovecomb,
uni030A,
uni030B,
uni030C,
uni030F,
uni0311,
uni0312,
uni031B,
dotbelowcomb,
uni0324,
uni0326,
uni0327,
uni0328,
uni032E,
uni0331,
uni0335,
uni0336,
uni0337,
uni0338,
uni0345,
uni0370,
uni0371,
uni0372,
uni0373,
uni0374,
uni0375,
uni037A,
uni037B,
uni037C,
uni037D,
uni037E,
tonos,
dieresistonos,
Alphatonos,
anoteleia,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
Omegatonos,
iotadieresistonos,
Alpha,
Beta,
Gamma,
uni0394,
Epsilon,
Zeta,
Eta,
Theta,
Iota,
Kappa,
Lambda,
Mu,
Nu,
Xi,
Omicron,
Pi,
Rho,
Sigma,
Tau,
Upsilon,
Phi,
Chi,
Psi,
uni03A9,
Iotadieresis,
Upsilondieresis,
alphatonos,
epsilontonos,
etatonos,
iotatonos,
upsilondieresistonos,
alpha,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
kappa,
lambda,
uni03BC,
nu,
xi,
omicron,
pi,
rho,
sigma1,
sigma,
tau,
upsilon,
phi,
chi,
psi,
omega,
iotadieresis,
upsilondieresis,
omicrontonos,
upsilontonos,
omegatonos,
uni03D0,
theta1,
Upsilon1,
uni03D3,
uni03D4,
phi1,
omega1,
uni03D7,
uni03D8,
uni03D9,
uni03DA,
uni03DB,
uni03DC,
uni03DD,
uni03DE,
uni03DF,
uni03E0,
uni03E1,
uni03F0,
uni03F1,
uni03F2,
uni03F3,
uni03F4,
uni03F5,
uni03F6,
uni03F7,
uni03F8,
uni03F9,
uni03FA,
uni03FB,
uni03FC,
uni03FD,
uni03FE,
uni03FF,
uni0400,
uni0401,
uni0402,
uni0403,
uni0404,
uni0405,
uni0406,
uni0407,
uni0408,
uni0409,
uni040A,
uni040B,
uni040C,
uni040D,
uni040E,
uni040F,
uni0410,
uni0411,
uni0412,
uni0413,
uni0414,
uni0415,
uni0416,
uni0417,
uni0418,
uni0419,
uni041A,
uni041B,
uni041C,
uni041D,
uni041E,
uni041F,
uni0420,
uni0421,
uni0422,
uni0423,
uni0424,
uni0425,
uni0426,
uni0427,
uni0428,
uni0429,
uni042A,
uni042B,
uni042C,
uni042D,
uni042E,
uni042F,
uni0430,
uni0431,
uni0432,
uni0433,
uni0434,
uni0435,
uni0436,
uni0437,
uni0438,
uni0439,
uni043A,
uni043B,
uni043C,
uni043D,
uni043E,
uni043F,
uni0440,
uni0441,
uni0442,
uni0443,
uni0444,
uni0445,
uni0446,
uni0447,
uni0448,
uni0449,
uni044A,
uni044B,
uni044C,
uni044D,
uni044E,
uni044F,
uni0450,
uni0451,
uni0452,
uni0453,
uni0454,
uni0455,
uni0456,
uni0457,
uni0458,
uni0459,
uni045A,
uni045B,
uni045C,
uni045D,
uni045E,
uni045F,
uni0462,
uni0463,
uni046A,
uni046B,
uni0472,
uni0473,
uni0474,
uni0475,
uni0476,
uni0477,
uni048A,
uni048B,
uni048C,
uni048D,
uni048E,
uni048F,
uni0490,
uni0491,
uni0492,
uni0493,
uni0494,
uni0495,
uni0496,
uni0497,
uni0498,
uni0499,
uni049A,
uni049B,
uni049C,
uni049D,
uni049E,
uni049F,
uni04A0,
uni04A1,
uni04A2,
uni04A3,
uni04A4,
uni04A5,
uni04A6,
uni04A7,
uni04A8,
uni04A9,
uni04AA,
uni04AB,
uni04AC,
uni04AD,
uni04AE,
uni04AF,
uni04B0,
uni04B1,
uni04B2,
uni04B3,
uni04B4,
uni04B5,
uni04B6,
uni04B7,
uni04B8,
uni04B9,
uni04BA,
uni04BB,
uni04BC,
uni04BD,
uni04BE,
uni04BF,
uni04C0,
uni04C1,
uni04C2,
uni04C3,
uni04C4,
uni04C6,
uni04C7,
uni04C8,
uni04C9,
uni04CA,
uni04CB,
uni04CC,
uni04CD,
uni04CE,
uni04CF,
uni04D0,
uni04D1,
uni04D2,
uni04D3,
uni04D4,
uni04D5,
uni04D6,
uni04D7,
uni04D8,
uni04D9,
uni04DA,
uni04DB,
uni04DC,
uni04DD,
uni04DE,
uni04DF,
uni04E0,
uni04E1,
uni04E2,
uni04E3,
uni04E4,
uni04E5,
uni04E6,
uni04E7,
uni04E8,
uni04E9,
uni04EA,
uni04EB,
uni04EC,
uni04ED,
uni04EE,
uni04EF,
uni04F0,
uni04F1,
uni04F2,
uni04F3,
uni04F4,
uni04F5,
uni04F6,
uni04F7,
uni04F8,
uni04F9,
uni04FA,
uni04FB,
uni04FC,
uni04FD,
uni04FE,
uni04FF,
uni0510,
uni0511,
uni0512,
uni0513,
uni051A,
uni051B,
uni051C,
uni051D,
uni0524,
uni0525,
uni0526,
uni0527,
uni0528,
uni0529,
uni052E,
uni052F,
uni1E00,
uni1E01,
uni1E02,
uni1E03,
uni1E04,
uni1E05,
uni1E06,
uni1E07,
uni1E08,
uni1E09,
uni1E0A,
uni1E0B,
uni1E0C,
uni1E0D,
uni1E0E,
uni1E0F,
uni1E10,
uni1E11,
uni1E12,
uni1E13,
uni1E14,
uni1E15,
uni1E16,
uni1E17,
uni1E18,
uni1E19,
uni1E1A,
uni1E1B,
uni1E1C,
uni1E1D,
uni1E1E,
uni1E1F,
uni1E20,
uni1E21,
uni1E22,
uni1E23,
uni1E24,
uni1E25,
uni1E26,
uni1E27,
uni1E28,
uni1E29,
uni1E2A,
uni1E2B,
uni1E2C,
uni1E2D,
uni1E2E,
uni1E2F,
uni1E30,
uni1E31,
uni1E32,
uni1E33,
uni1E34,
uni1E35,
uni1E36,
uni1E37,
uni1E38,
uni1E39,
uni1E3A,
uni1E3B,
uni1E3C,
uni1E3D,
uni1E3E,
uni1E3F,
uni1E40,
uni1E41,
uni1E42,
uni1E43,
uni1E44,
uni1E45,
uni1E46,
uni1E47,
uni1E48,
uni1E49,
uni1E4A,
uni1E4B,
uni1E4C,
uni1E4D,
uni1E4E,
uni1E4F,
uni1E50,
uni1E51,
uni1E52,
uni1E53,
uni1E54,
uni1E55,
uni1E56,
uni1E57,
uni1E58,
uni1E59,
uni1E5A,
uni1E5B,
uni1E5C,
uni1E5D,
uni1E5E,
uni1E5F,
uni1E60,
uni1E61,
uni1E62,
uni1E63,
uni1E64,
uni1E65,
uni1E66,
uni1E67,
uni1E68,
uni1E69,
uni1E6A,
uni1E6B,
uni1E6C,
uni1E6D,
uni1E6E,
uni1E6F,
uni1E70,
uni1E71,
uni1E72,
uni1E73,
uni1E74,
uni1E75,
uni1E76,
uni1E77,
uni1E78,
uni1E79,
uni1E7A,
uni1E7B,
uni1E7C,
uni1E7D,
uni1E7E,
uni1E7F,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
uni1E86,
uni1E87,
uni1E88,
uni1E89,
uni1E8A,
uni1E8B,
uni1E8C,
uni1E8D,
uni1E8E,
uni1E8F,
uni1E90,
uni1E91,
uni1E92,
uni1E93,
uni1E94,
uni1E95,
uni1E96,
uni1E97,
uni1E98,
uni1E99,
uni1E9B,
uni1E9E,
uni1EA0,
uni1EA1,
uni1EA2,
uni1EA3,
uni1EA4,
uni1EA5,
uni1EA6,
uni1EA7,
uni1EA8,
uni1EA9,
uni1EAA,
uni1EAB,
uni1EAC,
uni1EAD,
uni1EAE,
uni1EAF,
uni1EB0,
uni1EB1,
uni1EB2,
uni1EB3,
uni1EB4,
uni1EB5,
uni1EB6,
uni1EB7,
uni1EB8,
uni1EB9,
uni1EBA,
uni1EBB,
uni1EBC,
uni1EBD,
uni1EBE,
uni1EBF,
uni1EC0,
uni1EC1,
uni1EC2,
uni1EC3,
uni1EC4,
uni1EC5,
uni1EC6,
uni1EC7,
uni1EC8,
uni1EC9,
uni1ECA,
uni1ECB,
uni1ECC,
uni1ECD,
uni1ECE,
uni1ECF,
uni1ED0,
uni1ED1,
uni1ED2,
uni1ED3,
uni1ED4,
uni1ED5,
uni1ED6,
uni1ED7,
uni1ED8,
uni1ED9,
uni1EDA,
uni1EDB,
uni1EDC,
uni1EDD,
uni1EDE,
uni1EDF,
uni1EE0,
uni1EE1,
uni1EE2,
uni1EE3,
uni1EE4,
uni1EE5,
uni1EE6,
uni1EE7,
uni1EE8,
uni1EE9,
uni1EEA,
uni1EEB,
uni1EEC,
uni1EED,
uni1EEE,
uni1EEF,
uni1EF0,
uni1EF1,
Ygrave,
ygrave,
uni1EF4,
uni1EF5,
uni1EF6,
uni1EF7,
uni1EF8,
uni1EF9,
uni1F00,
uni1F01,
uni1F02,
uni1F03,
uni1F04,
uni1F05,
uni1F06,
uni1F07,
uni1F08,
uni1F09,
uni1F0A,
uni1F0B,
uni1F0C,
uni1F0D,
uni1F0E,
uni1F0F,
uni1F10,
uni1F11,
uni1F12,
uni1F13,
uni1F14,
uni1F15,
uni1F18,
uni1F19,
uni1F1A,
uni1F1B,
uni1F1C,
uni1F1D,
uni1F20,
uni1F21,
uni1F22,
uni1F23,
uni1F24,
uni1F25,
uni1F26,
uni1F27,
uni1F28,
uni1F29,
uni1F2A,
uni1F2B,
uni1F2C,
uni1F2D,
uni1F2E,
uni1F2F,
uni1F30,
uni1F31,
uni1F32,
uni1F33,
uni1F34,
uni1F35,
uni1F36,
uni1F37,
uni1F38,
uni1F39,
uni1F3A,
uni1F3B,
uni1F3C,
uni1F3D,
uni1F3E,
uni1F3F,
uni1F40,
uni1F41,
uni1F42,
uni1F43,
uni1F44,
uni1F45,
uni1F48,
uni1F49,
uni1F4A,
uni1F4B,
uni1F4C,
uni1F4D,
uni1F50,
uni1F51,
uni1F52,
uni1F53,
uni1F54,
uni1F55,
uni1F56,
uni1F57,
uni1F59,
uni1F5B,
uni1F5D,
uni1F5F,
uni1F60,
uni1F61,
uni1F62,
uni1F63,
uni1F64,
uni1F65,
uni1F66,
uni1F67,
uni1F68,
uni1F69,
uni1F6A,
uni1F6B,
uni1F6C,
uni1F6D,
uni1F6E,
uni1F6F,
uni1F70,
uni1F71,
uni1F72,
uni1F73,
uni1F74,
uni1F75,
uni1F76,
uni1F77,
uni1F78,
uni1F79,
uni1F7A,
uni1F7B,
uni1F7C,
uni1F7D,
uni1F80,
uni1F81,
uni1F82,
uni1F83,
uni1F84,
uni1F85,
uni1F86,
uni1F87,
uni1F88,
uni1F89,
uni1F8A,
uni1F8B,
uni1F8C,
uni1F8D,
uni1F8E,
uni1F8F,
uni1F90,
uni1F91,
uni1F92,
uni1F93,
uni1F94,
uni1F95,
uni1F96,
uni1F97,
uni1F98,
uni1F99,
uni1F9A,
uni1F9B,
uni1F9C,
uni1F9D,
uni1F9E,
uni1F9F,
uni1FA0,
uni1FA1,
uni1FA2,
uni1FA3,
uni1FA4,
uni1FA5,
uni1FA6,
uni1FA7,
uni1FA8,
uni1FA9,
uni1FAA,
uni1FAB,
uni1FAC,
uni1FAD,
uni1FAE,
uni1FAF,
uni1FB0,
uni1FB1,
uni1FB2,
uni1FB3,
uni1FB4,
uni1FB6,
uni1FB7,
uni1FB8,
uni1FB9,
uni1FBA,
uni1FBB,
uni1FBC,
uni1FBD,
uni1FBE,
uni1FBF,
uni1FC0,
uni1FC1,
uni1FC2,
uni1FC3,
uni1FC4,
uni1FC6,
uni1FC7,
uni1FC8,
uni1FC9,
uni1FCA,
uni1FCB,
uni1FCC,
uni1FCD,
uni1FCE,
uni1FCF,
uni1FD0,
uni1FD1,
uni1FD2,
uni1FD3,
uni1FD6,
uni1FD7,
uni1FD8,
uni1FD9,
uni1FDA,
uni1FDB,
uni1FDD,
uni1FDE,
uni1FDF,
uni1FE0,
uni1FE1,
uni1FE2,
uni1FE3,
uni1FE4,
uni1FE5,
uni1FE6,
uni1FE7,
uni1FE8,
uni1FE9,
uni1FEA,
uni1FEB,
uni1FEC,
uni1FED,
uni1FEE,
uni1FEF,
uni1FF2,
uni1FF3,
uni1FF4,
uni1FF6,
uni1FF7,
uni1FF8,
uni1FF9,
uni1FFA,
uni1FFB,
uni1FFC,
uni1FFD,
uni1FFE,
uni2007,
uni2008,
uni2009,
uni200A,
uni200B,
uni2010,
figuredash,
endash,
emdash,
uni2015,
quoteleft,
quoteright,
quotesinglbase,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
minute,
second,
guilsinglleft,
guilsinglright,
uni203E,
fraction,
uni2052,
uni2070,
uni2074,
uni2075,
uni2076,
uni2077,
uni2078,
uni2079,
uni2080,
uni2081,
uni2082,
uni2083,
uni2084,
uni2085,
uni2086,
uni2087,
uni2088,
uni2089,
colonmonetary,
franc,
lira,
uni20A6,
peseta,
uni20A9,
dong,
Euro,
uni20AD,
uni20AE,
uni20B1,
uni20B2,
uni20B4,
uni20B5,
uni20B8,
uni20B9,
uni20BA,
uni20BC,
uni20BD,
uni2113,
uni2116,
trademark,
uni2126,
uni212A,
uni212B,
estimated,
uni2153,
uni2154,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
arrowleft,
arrowup,
arrowright,
arrowdown,
arrowboth,
arrowupdn,
uni2196,
uni2197,
uni2198,
uni2199,
uni219A,
uni219B,
uni21AE,
partialdiff,
emptyset,
uni2206,
product,
summation,
minus,
uni2215,
uni2219,
radical,
infinity,
integral,
approxequal,
uni2249,
notequal,
lessequal,
greaterequal,
uni226E,
uni226F,
uni2270,
uni2271,
filledbox,
uni25A1,
triagup,
uni25B3,
uni25B6,
uni25B7,
triagdn,
uni25BD,
uni25C0,
uni25C1,
uni25C6,
uni25C7,
lozenge,
uni27E8,
uni27E9,
uniA78B,
uniA78C,
fi,
fl,
Iacute_J.loclNLD,
A.ss01,
Aacute.ss01,
Abreve.ss01,
uni1EAE.ss01,
uni1EB6.ss01,
uni1EB0.ss01,
uni1EB2.ss01,
uni1EB4.ss01,
uni01CD.ss01,
Acircumflex.ss01,
uni1EA4.ss01,
uni1EAC.ss01,
uni1EA6.ss01,
uni1EA8.ss01,
uni1EAA.ss01,
uni0200.ss01,
Adieresis.ss01,
uni1EA0.ss01,
Agrave.ss01,
uni1EA2.ss01,
uni0202.ss01,
Amacron.ss01,
Aogonek.ss01,
Aring.ss01,
Aringacute.ss01,
Atilde.ss01,
AE.ss01,
AEacute.ss01,
uni01C4.ss01,
uni01C5.ss01,
E.ss01,
Eacute.ss01,
Ebreve.ss01,
Ecaron.ss01,
uni1E1C.ss01,
Ecircumflex.ss01,
uni1EBE.ss01,
uni1EC6.ss01,
uni1EC0.ss01,
uni1EC2.ss01,
uni1EC4.ss01,
uni0204.ss01,
Edieresis.ss01,
Edotaccent.ss01,
uni1EB8.ss01,
Egrave.ss01,
uni1EBA.ss01,
uni0206.ss01,
Emacron.ss01,
uni1E16.ss01,
uni1E14.ss01,
Eogonek.ss01,
uni1EBC.ss01,
F.ss01,
G.ss01,
Gbreve.ss01,
Gcaron.ss01,
Gcircumflex.ss01,
Gcommaaccent.ss01,
Gdotaccent.ss01,
uni1E20.ss01,
uni01E4.ss01,
I.ss01,
IJ.ss01,
Iacute.ss01,
Iacute_J.loclNLD.ss01,
Ibreve.ss01,
Icircumflex.ss01,
uni0208.ss01,
Idieresis.ss01,
uni1E2E.ss01,
Idotaccent.ss01,
uni1ECA.ss01,
Igrave.ss01,
uni1EC8.ss01,
uni020A.ss01,
Imacron.ss01,
Iogonek.ss01,
Itilde.ss01,
J.ss01,
Jcircumflex.ss01,
uni01C7.ss01,
M.ss01,
uni1E42.ss01,
N.ss01,
uni01CA.ss01,
Nacute.ss01,
Ncaron.ss01,
Ncommaaccent.ss01,
uni1E44.ss01,
uni1E46.ss01,
Eng.ss01,
uni01CB.ss01,
uni1E48.ss01,
Ntilde.ss01,
Q.ss01,
uni018F.ss01,
T.ss01,
Tbar.ss01,
Tcaron.ss01,
uni0162.ss01,
uni021A.ss01,
uni1E6C.ss01,
uni1E6E.ss01,
U.ss01,
Uacute.ss01,
Ubreve.ss01,
uni01D3.ss01,
Ucircumflex.ss01,
uni0214.ss01,
Udieresis.ss01,
uni1EE4.ss01,
Ugrave.ss01,
uni1EE6.ss01,
Uhorn.ss01,
uni1EE8.ss01,
uni1EF0.ss01,
uni1EEA.ss01,
uni1EEC.ss01,
uni1EEE.ss01,
Uhungarumlaut.ss01,
uni0216.ss01,
Umacron.ss01,
uni1E7A.ss01,
Uogonek.ss01,
Uring.ss01,
Utilde.ss01,
uni1E78.ss01,
W.ss01,
Wacute.ss01,
Wcircumflex.ss01,
Wdieresis.ss01,
Wgrave.ss01,
Y.ss01,
Yacute.ss01,
Ycircumflex.ss01,
Ydieresis.ss01,
uni1E8E.ss01,
uni1EF4.ss01,
Ygrave.ss01,
uni1EF6.ss01,
uni0232.ss01,
uni1EF8.ss01,
Z.ss01,
Zacute.ss01,
Zcaron.ss01,
Zdotaccent.ss01,
uni1E92.ss01,
i.loclTRK,
iacute_j.loclNLD,
a.ss01,
aacute.ss01,
abreve.ss01,
uni1EAF.ss01,
uni1EB7.ss01,
uni1EB1.ss01,
uni1EB3.ss01,
uni1EB5.ss01,
uni01CE.ss01,
acircumflex.ss01,
uni1EA5.ss01,
uni1EAD.ss01,
uni1EA7.ss01,
uni1EA9.ss01,
uni1EAB.ss01,
uni0201.ss01,
adieresis.ss01,
uni1EA1.ss01,
agrave.ss01,
uni1EA3.ss01,
uni0203.ss01,
amacron.ss01,
aogonek.ss01,
aring.ss01,
aringacute.ss01,
atilde.ss01,
ae.ss01,
aeacute.ss01,
uni01C6.ss01,
e.ss01,
eacute.ss01,
ebreve.ss01,
ecaron.ss01,
uni1E1D.ss01,
ecircumflex.ss01,
uni1EBF.ss01,
uni1EC7.ss01,
uni1EC1.ss01,
uni1EC3.ss01,
uni1EC5.ss01,
uni0205.ss01,
edieresis.ss01,
edotaccent.ss01,
uni1EB9.ss01,
egrave.ss01,
uni1EBB.ss01,
uni0207.ss01,
emacron.ss01,
uni1E17.ss01,
uni1E15.ss01,
eogonek.ss01,
uni1EBD.ss01,
uni0259.ss01,
f.ss01,
l.ss01,
lacute.ss01,
lcaron.ss01,
lcommaaccent.ss01,
ldot.ss01,
uni1E37.ss01,
uni01C9.ss01,
uni1E3B.ss01,
lslash.ss01,
oe.ss01,
t.ss01,
tbar.ss01,
tcaron.ss01,
uni0163.ss01,
uni021B.ss01,
uni1E97.ss01,
uni1E6D.ss01,
uni1E6F.ss01,
w.ss01,
wacute.ss01,
wcircumflex.ss01,
wdieresis.ss01,
wgrave.ss01,
y.ss01,
yacute.ss01,
ycircumflex.ss01,
ydieresis.ss01,
uni1EF5.ss01,
ygrave.ss01,
uni1EF7.ss01,
uni0233.ss01,
uni1EF9.ss01,
z.ss01,
zacute.ss01,
zcaron.ss01,
zdotaccent.ss01,
uni1E93.ss01,
T_h,
fi.ss01,
fl.ss01,
a.sc,
aacute.sc,
abreve.sc,
uni1EAF.sc,
uni1EB7.sc,
uni1EB1.sc,
uni1EB3.sc,
uni1EB5.sc,
uni01CE.sc,
acircumflex.sc,
uni1EA5.sc,
uni1EAD.sc,
uni1EA7.sc,
uni1EA9.sc,
uni1EAB.sc,
uni0201.sc,
adieresis.sc,
uni1EA1.sc,
agrave.sc,
uni1EA3.sc,
uni0203.sc,
amacron.sc,
aogonek.sc,
aring.sc,
aringacute.sc,
atilde.sc,
ae.sc,
aeacute.sc,
b.sc,
c.sc,
cacute.sc,
ccaron.sc,
ccedilla.sc,
uni1E09.sc,
ccircumflex.sc,
cdotaccent.sc,
d.sc,
eth.sc,
dcaron.sc,
dcroat.sc,
uni1E0D.sc,
uni1E0F.sc,
uni01C6.sc,
e.sc,
eacute.sc,
ebreve.sc,
ecaron.sc,
uni1E1D.sc,
ecircumflex.sc,
uni1EBF.sc,
uni1EC7.sc,
uni1EC1.sc,
uni1EC3.sc,
uni1EC5.sc,
uni0205.sc,
edieresis.sc,
edotaccent.sc,
uni1EB9.sc,
egrave.sc,
uni1EBB.sc,
uni0207.sc,
emacron.sc,
uni1E17.sc,
uni1E15.sc,
eogonek.sc,
uni1EBD.sc,
uni0259.sc,
uni0292.sc,
uni01EF.sc,
f.sc,
g.sc,
gbreve.sc,
gcaron.sc,
gcircumflex.sc,
gcommaaccent.sc,
gdotaccent.sc,
uni1E21.sc,
uni01E5.sc,
h.sc,
hbar.sc,
uni1E2B.sc,
uni021F.sc,
hcircumflex.sc,
uni1E25.sc,
i.sc,
dotlessi.sc,
iacute.sc,
iacute_j.loclNLD.sc,
ibreve.sc,
icircumflex.sc,
uni0209.sc,
idieresis.sc,
uni1E2F.sc,
i.sc.loclTRK,
uni1ECB.sc,
igrave.sc,
uni1EC9.sc,
uni020B.sc,
ij.sc,
imacron.sc,
iogonek.sc,
itilde.sc,
j.sc,
jcircumflex.sc,
k.sc,
uni01E9.sc,
kcommaaccent.sc,
kgreenlandic.sc,
l.sc,
lacute.sc,
lcaron.sc,
lcommaaccent.sc,
ldot.sc,
uni1E37.sc,
uni01C9.sc,
uni1E3B.sc,
lslash.sc,
m.sc,
uni1E43.sc,
n.sc,
nacute.sc,
ncaron.sc,
ncommaaccent.sc,
uni1E45.sc,
uni1E47.sc,
eng.sc,
uni01CC.sc,
uni1E49.sc,
ntilde.sc,
o.sc,
oacute.sc,
obreve.sc,
ocircumflex.sc,
uni1ED1.sc,
uni1ED9.sc,
uni1ED3.sc,
uni1ED5.sc,
uni1ED7.sc,
uni020D.sc,
odieresis.sc,
uni022B.sc,
uni0231.sc,
uni1ECD.sc,
ograve.sc,
uni1ECF.sc,
ohorn.sc,
uni1EDB.sc,
uni1EE3.sc,
uni1EDD.sc,
uni1EDF.sc,
uni1EE1.sc,
ohungarumlaut.sc,
uni020F.sc,
omacron.sc,
uni1E53.sc,
uni1E51.sc,
uni01EB.sc,
oslash.sc,
oslashacute.sc,
otilde.sc,
uni1E4D.sc,
uni1E4F.sc,
uni022D.sc,
oe.sc,
p.sc,
thorn.sc,
q.sc,
r.sc,
racute.sc,
rcaron.sc,
rcommaaccent.sc,
uni0211.sc,
uni1E5B.sc,
uni0213.sc,
uni1E5F.sc,
s.sc,
sacute.sc,
uni1E65.sc,
uniA78C.sc,
scaron.sc,
uni1E67.sc,
scedilla.sc,
scircumflex.sc,
scommaaccent.sc,
uni1E61.sc,
uni1E63.sc,
uni1E69.sc,
germandbls.sc,
t.sc,
tbar.sc,
tcaron.sc,
uni0163.sc,
uni021B.sc,
uni1E97.sc,
uni1E6D.sc,
uni1E6F.sc,
u.sc,
uacute.sc,
ubreve.sc,
uni01D4.sc,
ucircumflex.sc,
uni0215.sc,
udieresis.sc,
uni1EE5.sc,
ugrave.sc,
uni1EE7.sc,
uhorn.sc,
uni1EE9.sc,
uni1EF1.sc,
uni1EEB.sc,
uni1EED.sc,
uni1EEF.sc,
uhungarumlaut.sc,
uni0217.sc,
umacron.sc,
uni1E7B.sc,
uogonek.sc,
uring.sc,
utilde.sc,
uni1E79.sc,
v.sc,
w.sc,
wacute.sc,
wcircumflex.sc,
wdieresis.sc,
wgrave.sc,
x.sc,
y.sc,
yacute.sc,
ycircumflex.sc,
ydieresis.sc,
uni1E8F.sc,
uni1EF5.sc,
ygrave.sc,
uni1EF7.sc,
uni0233.sc,
uni1EF9.sc,
z.sc,
zacute.sc,
zcaron.sc,
zdotaccent.sc,
uni1E93.sc,
a.sc.ss01,
aacute.sc.ss01,
abreve.sc.ss01,
uni1EAF.sc.ss01,
uni1EB7.sc.ss01,
uni1EB1.sc.ss01,
uni1EB3.sc.ss01,
uni1EB5.sc.ss01,
uni01CE.sc.ss01,
acircumflex.sc.ss01,
uni1EA5.sc.ss01,
uni1EAD.sc.ss01,
uni1EA7.sc.ss01,
uni1EA9.sc.ss01,
uni1EAB.sc.ss01,
uni0201.sc.ss01,
adieresis.sc.ss01,
uni1EA1.sc.ss01,
agrave.sc.ss01,
uni1EA3.sc.ss01,
uni0203.sc.ss01,
amacron.sc.ss01,
aogonek.sc.ss01,
aring.sc.ss01,
aringacute.sc.ss01,
atilde.sc.ss01,
ae.sc.ss01,
aeacute.sc.ss01,
uni01C6.sc.ss01,
e.sc.ss01,
eacute.sc.ss01,
ebreve.sc.ss01,
ecaron.sc.ss01,
uni1E1D.sc.ss01,
ecircumflex.sc.ss01,
uni1EBF.sc.ss01,
uni1EC7.sc.ss01,
uni1EC1.sc.ss01,
uni1EC3.sc.ss01,
uni1EC5.sc.ss01,
uni0205.sc.ss01,
edieresis.sc.ss01,
edotaccent.sc.ss01,
uni1EB9.sc.ss01,
egrave.sc.ss01,
uni1EBB.sc.ss01,
uni0207.sc.ss01,
emacron.sc.ss01,
uni1E17.sc.ss01,
uni1E15.sc.ss01,
eogonek.sc.ss01,
uni1EBD.sc.ss01,
uni0259.sc.ss01,
f.sc.ss01,
g.sc.ss01,
gbreve.sc.ss01,
gcaron.sc.ss01,
gcircumflex.sc.ss01,
gcommaaccent.sc.ss01,
gdotaccent.sc.ss01,
uni1E21.sc.ss01,
uni01E5.sc.ss01,
i.sc.ss01,
dotlessi.sc.ss01,
iacute.sc.ss01,
iacute_j.loclNLD.sc.ss01,
ibreve.sc.ss01,
icircumflex.sc.ss01,
uni0209.sc.ss01,
idieresis.sc.ss01,
uni1E2F.sc.ss01,
uni1ECB.sc.ss01,
igrave.sc.ss01,
uni1EC9.sc.ss01,
uni020B.sc.ss01,
ij.sc.ss01,
imacron.sc.ss01,
iogonek.sc.ss01,
itilde.sc.ss01,
j.sc.ss01,
jcircumflex.sc.ss01,
uni01C9.sc.ss01,
m.sc.ss01,
uni1E43.sc.ss01,
n.sc.ss01,
nacute.sc.ss01,
ncaron.sc.ss01,
ncommaaccent.sc.ss01,
uni1E45.sc.ss01,
uni1E47.sc.ss01,
eng.sc.ss01,
uni01CC.sc.ss01,
uni1E49.sc.ss01,
ntilde.sc.ss01,
q.sc.ss01,
t.sc.ss01,
tbar.sc.ss01,
tcaron.sc.ss01,
uni0163.sc.ss01,
uni021B.sc.ss01,
uni1E97.sc.ss01,
uni1E6D.sc.ss01,
uni1E6F.sc.ss01,
u.sc.ss01,
uacute.sc.ss01,
ubreve.sc.ss01,
uni01D4.sc.ss01,
ucircumflex.sc.ss01,
uni0215.sc.ss01,
udieresis.sc.ss01,
uni1EE5.sc.ss01,
ugrave.sc.ss01,
uni1EE7.sc.ss01,
uhorn.sc.ss01,
uni1EE9.sc.ss01,
uni1EF1.sc.ss01,
uni1EEB.sc.ss01,
uni1EED.sc.ss01,
uni1EEF.sc.ss01,
uhungarumlaut.sc.ss01,
uni0217.sc.ss01,
umacron.sc.ss01,
uni1E7B.sc.ss01,
uogonek.sc.ss01,
uring.sc.ss01,
utilde.sc.ss01,
uni1E79.sc.ss01,
w.sc.ss01,
wacute.sc.ss01,
wcircumflex.sc.ss01,
wdieresis.sc.ss01,
wgrave.sc.ss01,
y.sc.ss01,
yacute.sc.ss01,
ycircumflex.sc.ss01,
ydieresis.sc.ss01,
uni1E8F.sc.ss01,
uni1EF5.sc.ss01,
ygrave.sc.ss01,
uni1EF7.sc.ss01,
uni0233.sc.ss01,
uni1EF9.sc.ss01,
z.sc.ss01,
zacute.sc.ss01,
zcaron.sc.ss01,
zdotaccent.sc.ss01,
uni1E93.sc.ss01,
uni0414.loclBGR,
uni041B.loclBGR,
uni0424.loclBGR,
uni0492.loclBSH,
uni0498.loclBSH,
uni04AA.loclBSH,
uni04AA.loclCHU,
uni0410.ss01,
uni0414.ss01,
uni0415.ss01,
uni0400.ss01,
uni0401.ss01,
uni0418.ss01,
uni0419.ss01,
uni048A.ss01,
uni040D.ss01,
uni041B.ss01,
uni0420.ss01,
uni0422.ss01,
uni0423.ss01,
uni040E.ss01,
uni0424.ss01,
uni042C.ss01,
uni042A.ss01,
uni042B.ss01,
uni0409.ss01,
uni040A.ss01,
uni0408.ss01,
uni0462.ss01,
uni04AC.ss01,
uni04D0.ss01,
uni04D2.ss01,
uni04D4.ss01,
uni04D6.ss01,
uni04E2.ss01,
uni04E4.ss01,
uni04EE.ss01,
uni04F0.ss01,
uni04F2.ss01,
uni04F8.ss01,
uni051A.ss01,
uni048C.ss01,
uni0432.loclBGR,
uni0433.loclBGR,
uni0434.loclBGR,
uni0436.loclBGR,
uni0437.loclBGR,
uni0438.loclBGR,
uni0439.loclBGR,
uni045D.loclBGR,
uni043A.loclBGR,
uni043B.loclBGR,
uni043D.loclBGR,
uni043F.loclBGR,
uni0442.loclBGR,
uni0447.loclBGR,
uni0446.loclBGR,
uni0448.loclBGR,
uni0449.loclBGR,
uni044C.loclBGR,
uni044A.loclBGR,
uni044E.loclBGR,
uni0493.loclBSH,
uni0499.loclBSH,
uni04AB.loclCHU,
uni0453.loclMKD,
uni0431.loclSRB,
uni0433.loclSRB,
uni0434.loclSRB,
uni043F.loclSRB,
uni0442.loclSRB,
uni0430.ss01,
uni0434.ss01,
uni0435.ss01,
uni0450.ss01,
uni0451.ss01,
uni0438.ss01,
uni0439.ss01,
uni048B.ss01,
uni045D.ss01,
uni0440.ss01,
uni0442.ss01,
uni0443.ss01,
uni045E.ss01,
uni044C.ss01,
uni044A.ss01,
uni044B.ss01,
uni0459.ss01,
uni045A.ss01,
uni0463.ss01,
uni04D1.ss01,
uni04D3.ss01,
uni04D5.ss01,
uni04D7.ss01,
uni04D9.ss01,
uni04DB.ss01,
uni04E3.ss01,
uni04E5.ss01,
uni04EF.ss01,
uni04F1.ss01,
uni04F3.ss01,
uni04F9.ss01,
uni048D.ss01,
zero.osf,
one.osf,
two.osf,
three.osf,
four.osf,
five.osf,
six.osf,
seven.osf,
eight.osf,
nine.osf,
zero.sinf,
one.sinf,
two.sinf,
three.sinf,
four.sinf,
five.sinf,
six.sinf,
seven.sinf,
eight.sinf,
nine.sinf,
zero.tf,
one.tf,
two.tf,
three.tf,
four.tf,
five.tf,
six.tf,
seven.tf,
eight.tf,
nine.tf,
zero.tosf,
one.tosf,
two.tosf,
three.tosf,
four.tosf,
five.tosf,
six.tosf,
seven.tosf,
eight.tosf,
nine.tosf,
zero.dnom,
one.dnom,
two.dnom,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
zero.numr,
one.numr,
two.numr,
three.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
backslash.case,
periodcentered.case,
bullet.case,
periodcentered.loclCAT.case,
slash.case,
periodcentered.loclCAT,
braceleft.case,
braceright.case,
bracketleft.case,
bracketright.case,
parenleft.case,
parenright.case,
emdash.case,
endash.case,
hyphen.case,
guillemotleft.case,
guillemotright.case,
guilsinglleft.case,
guilsinglright.case,
exclam.sc,
exclamdown.sc,
guillemotleft.sc,
guillemotright.sc,
guilsinglleft.sc,
guilsinglright.sc,
period.sc,
question.sc,
questiondown.sc,
quotedbl.sc,
quotedblbase.sc,
quotedblleft.sc,
quotedblright.sc,
quoteleft.sc,
quoteright.sc,
quotesinglbase.sc,
quotesingle.sc,
arrowup.case,
arrowright.case,
arrowdown.case,
arrowleft.case,
at.case,
uni2116.ss01,
ampersand.sc,
uni03080300,
uni03080301,
uni03080304,
uni03070304,
uni03000304,
uni03010307,
uni03010304,
caroncomb.alt,
uni030C0307,
uni030A0301,
uni03030308,
tildecomb_acutecomb,
uni03030304,
uni03040308,
uni03040300,
uni03040301,
uni0308.case,
uni03080300.case,
uni03080301.case,
uni03080304.case,
uni0307.case,
uni03070304.case,
gravecomb.case,
uni03000304.case,
acutecomb.case,
uni03010307.case,
uni03010304.case,
uni030B.case,
uni0302.case,
uni030C.case,
uni030C0307.case,
uni0306.case,
tildecomb.case,
uni03030308.case,
tildecomb_acutecomb.case,
uni03030304.case,
uni0304.case,
uni03040308.case,
uni03040300.case,
uni03040301.case,
hookabovecomb.case,
uni030F.case,
uni0311.case,
uni0335.case,
uni0337.case,
uni0338.case,
uni0304.narrow.case,
uni0307.i,
uni0328.i,
uni0308.loclVIET,
uni0307.loclVIET,
gravecomb.loclVIET,
acutecomb.loclVIET,
uni0302.loclVIET,
uni030C.loclVIET,
uni0306.loclVIET,
tildecomb.loclVIET,
uni0304.loclVIET,
hookabovecomb.loclVIET,
uni0308.narrow,
uni0302.narrow,
uni0306.narrow,
tildecomb.narrow,
uni0304.narrow,
uni0311.narrow,
caroncomb.alt.short,
uni0335.t,
uni0335.sc,
uni0336.sc,
uni0338.sc,
brevecombcy,
brevecombcy.case,
descendercy,
descendercy.case,
descendercy.case.short,
descendercy.short,
uni03060301,
uni03060300,
uni03060309,
uni03060303,
uni03020301,
uni03020300,
uni03020309,
uni03020303,
uni03060301.case,
uni03060300.case,
uni03060309.case,
uni03060303.case,
uni03020301.case,
uni03020300.case,
uni03020309.case,
uni03020303.case,
verticalbarcy.case,
verticalbarcy
);
}
);
date = "2017-10-17 18:36:54 +0000";
familyName = Montserrat;
featurePrefixes = (
{
code = "lookup SUB_43 {
	sub i by dotlessi;
	sub j by uni0237;
	sub periodcentered by periodcentered.loclCAT;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni0302 by uni0302.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0306 by uni0306.case;
	sub uni0307 by uni0307.case;
	sub uni0308 by uni0308.case;
	sub hookabovecomb by hookabovecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C by uni030C.case;
	sub uni030F by uni030F.case;
	sub uni0311 by uni0311.case;
	sub uni0335 by uni0335.case;
	sub uni0337 by uni0337.case;
	sub uni0338 by uni0338.case;
	sub uni03080300 by uni03080300.case;
	sub uni03080301 by uni03080301.case;
	sub uni03080304 by uni03080304.case;
	sub uni03070304 by uni03070304.case;
	sub uni03000304 by uni03000304.case;
	sub uni03010307 by uni03010307.case;
	sub uni03010304 by uni03010304.case;
	sub uni030C0307 by uni030C0307.case;
	sub uni03030308 by uni03030308.case;
	sub tildecomb_acutecomb by tildecomb_acutecomb.case;
	sub uni03030304 by uni03030304.case;
	sub uni03040308 by uni03040308.case;
	sub uni03040300 by uni03040300.case;
	sub uni03040301 by uni03040301.case;
	sub uni03060301 by uni03060301.case;
	sub uni03060300 by uni03060300.case;
	sub uni03060309 by uni03060309.case;
	sub uni03060303 by uni03060303.case;
	sub uni03020301 by uni03020301.case;
	sub uni03020300 by uni03020300.case;
	sub uni03020309 by uni03020309.case;
	sub uni03020303 by uni03020303.case;
} SUB_43;
lookup SUB_44 {
	sub A by ordfeminine;
	sub O by ordmasculine;
	sub a by ordfeminine;
	sub o by ordmasculine;
	sub periodcentered by periodcentered.loclCAT.case;
	sub zero.numr by zero.dnom;
	sub one.numr by one.dnom;
	sub two.numr by two.dnom;
	sub three.numr by three.dnom;
	sub four.numr by four.dnom;
	sub five.numr by five.dnom;
	sub six.numr by six.dnom;
	sub seven.numr by seven.dnom;
	sub eight.numr by eight.dnom;
	sub nine.numr by nine.dnom;
} SUB_44;
";
name = Prefix;
}
);
features = (
{
automatic = 1;
code = "";
tag = aalt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_2 {
	@SUB_2_0_LA_0 = [acutecomb gravecomb hookabovecomb tildecomb uni0302 uni0304 uni0306 uni0307 uni0308 uni030A uni030B uni030C uni030F uni0311 uni0312];
	sub [i j]' lookup SUB_43 @SUB_2_0_LA_0;
	@SUB_2_1_LA_0 = [dotbelowcomb uni031B uni0324 uni0327 uni0328 uni032E uni0331 uni0335 uni0336 uni0337 uni0338];
	@SUB_2_1_LA_1 = [acutecomb gravecomb hookabovecomb tildecomb uni0302 uni0304 uni0306 uni0307 uni0308 uni030A uni030B uni030C uni030F uni0311 uni0312];
	sub [i j]' lookup SUB_43 @SUB_2_1_LA_0 @SUB_2_1_LA_1;
	@SUB_2_2_BT_0 = [acutecomb gravecomb hookabovecomb tildecomb tildecomb_acutecomb uni03000304 uni03010304 uni03010307 uni0302 uni03020300 uni03020301 uni03020303 uni03020309 uni03030304 uni03030308 uni0304 uni03040300 uni03040301 uni03040308 uni0306 uni03060300 uni03060301 uni03060303 uni03060309 uni0307 uni03070304 uni0308 uni03080300 uni03080301 uni03080304 uni030B uni030C uni030C0307 uni030F uni0311 uni0335 uni0337 uni0338];
	@SUB_2_2_IN_1 = [acutecomb gravecomb hookabovecomb tildecomb tildecomb_acutecomb uni03000304 uni03010304 uni03010307 uni0302 uni03020300 uni03020301 uni03020303 uni03020309 uni03030304 uni03030308 uni0304 uni03040300 uni03040301 uni03040308 uni0306 uni03060300 uni03060301 uni03060303 uni03060309 uni0307 uni03070304 uni0308 uni03080300 uni03080301 uni03080304 uni030B uni030C uni030C0307 uni030F uni0311 uni0335 uni0337 uni0338];
	sub @SUB_2_2_BT_0 @SUB_2_2_IN_1' lookup SUB_43;
	@SUB_2_3_BT_0 = [A A.ss01 AE AE.ss01 AEacute AEacute.ss01 Aacute Aacute.ss01 Abreve Abreve.ss01 Acircumflex Acircumflex.ss01 Adieresis Adieresis.ss01 Agrave Agrave.ss01 Amacron Amacron.ss01 Aogonek Aogonek.ss01 Aring Aring.ss01 Aringacute Aringacute.ss01 Atilde Atilde.ss01 B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcroat E E.ss01 Eacute Eacute.ss01 Ebreve Ebreve.ss01 Ecaron Ecaron.ss01 Ecircumflex Ecircumflex.ss01 Edieresis Edieresis.ss01 Edotaccent Edotaccent.ss01 Egrave Egrave.ss01 Emacron Emacron.ss01 Eng Eng.ss01 Eogonek Eogonek.ss01 Eth F F.ss01 G G.ss01 Gbreve Gbreve.ss01 Gcaron Gcaron.ss01 Gcircumflex Gcircumflex.ss01 Gcommaaccent Gcommaaccent.ss01 Gdotaccent Gdotaccent.ss01 H Hbar Hcircumflex I I.ss01 IJ IJ.ss01 Iacute Iacute.ss01 Iacute_J.loclNLD Iacute_J.loclNLD.ss01 Ibreve Ibreve.ss01 Icircumflex Icircumflex.ss01 Idieresis Idieresis.ss01 Idotaccent Idotaccent.ss01 Igrave Igrave.ss01 Imacron Imacron.ss01 Iogonek Iogonek.ss01 Itilde Itilde.ss01 J J.ss01 Jcircumflex Jcircumflex.ss01 K Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M M.ss01 N N.ss01 Nacute Nacute.ss01 Ncaron Ncaron.ss01 Ncommaaccent Ncommaaccent.ss01 Ntilde Ntilde.ss01 O OE Oacute Obreve Ocircumflex Odieresis Ograve Ohorn Ohungarumlaut Omacron Oslash Oslashacute Otilde P Q Q.ss01 R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scircumflex Scommaaccent T T.ss01 Tbar Tbar.ss01 Tcaron Tcaron.ss01 Thorn U U.ss01 Uacute Uacute.ss01 Ubreve Ubreve.ss01 Ucircumflex Ucircumflex.ss01 Udieresis Udieresis.ss01 Ugrave Ugrave.ss01 Uhorn Uhorn.ss01 Uhungarumlaut Uhungarumlaut.ss01 Umacron Umacron.ss01 Uogonek Uogonek.ss01 Uring Uring.ss01 Utilde Utilde.ss01 V W W.ss01 Wacute Wacute.ss01 Wcircumflex Wcircumflex.ss01 Wdieresis Wdieresis.ss01 Wgrave Wgrave.ss01 X Y Y.ss01 Yacute Yacute.ss01 Ycircumflex Ycircumflex.ss01 Ydieresis Ydieresis.ss01 Ygrave Ygrave.ss01 Z Z.ss01 Zacute Zacute.ss01 Zcaron Zcaron.ss01 Zdotaccent Zdotaccent.ss01 uni0162 uni0162.ss01 uni018F uni018F.ss01 uni01B7 uni01C4 uni01C4.ss01 uni01C5 uni01C5.ss01 uni01C7 uni01C7.ss01 uni01C8 uni01CA uni01CA.ss01 uni01CB uni01CB.ss01 uni01CD uni01CD.ss01 uni01D3 uni01D3.ss01 uni01E4 uni01E4.ss01 uni01E8 uni01EA uni01EE uni0200 uni0200.ss01 uni0202 uni0202.ss01 uni0204 uni0204.ss01 uni0206 uni0206.ss01 uni0208 uni0208.ss01 uni020A uni020A.ss01 uni020C uni020E uni0210 uni0212 uni0214 uni0214.ss01 uni0216 uni0216.ss01 uni021A uni021A.ss01 uni021E uni022A uni022C uni0230 uni0232 uni0232.ss01 uni0394 uni03A9 uni0400 uni0400.ss01 uni0401 uni0401.ss01 uni0402 uni0403 uni0404 uni0405 uni0406 uni0407 uni0408 uni0408.ss01 uni0409 uni0409.ss01 uni040A uni040A.ss01 uni040B uni040C uni040D uni040D.ss01 uni040E uni040E.ss01 uni040F uni0410 uni0410.ss01 uni0411 uni0412 uni0413 uni0414 uni0414.loclBGR uni0414.ss01 uni0415 uni0415.ss01 uni0416 uni0417 uni0418 uni0418.ss01 uni0419 uni0419.ss01 uni041A uni041B uni041B.loclBGR uni041B.ss01 uni041C uni041D uni041E uni041F uni0420 uni0420.ss01 uni0421 uni0422 uni0422.ss01 uni0423 uni0423.ss01 uni0424 uni0424.loclBGR uni0424.ss01 uni0425 uni0426 uni0427 uni0428 uni0429 uni042A uni042A.ss01 uni042B uni042B.ss01 uni042C uni042C.ss01 uni042D uni042E uni042F uni0462 uni0462.ss01 uni046A uni0472 uni0474 uni048A uni048A.ss01 uni048C uni048C.ss01 uni048E uni0490 uni0492 uni0492.loclBSH uni0494 uni0496 uni0498 uni0498.loclBSH uni049A uni049C uni049E uni04A0 uni04A2 uni04A4 uni04A6 uni04A8 uni04AA uni04AA.loclBSH uni04AA.loclCHU uni04AC uni04AC.ss01 uni04AE uni04B0 uni04B2 uni04B4 uni04B6 uni04B8 uni04BA uni04BC uni04BE uni04C0 uni04C1 uni04C3 uni04C7 uni04C9 uni04CB uni04CD uni04D0 uni04D0.ss01 uni04D2 uni04D2.ss01 uni04D4 uni04D4.ss01 uni04D6 uni04D6.ss01 uni04D8 uni04DA uni04DC uni04DE uni04E0 uni04E2 uni04E2.ss01 uni04E4 uni04E4.ss01 uni04E6 uni04E8 uni04EA uni04EC uni04EE uni04EE.ss01 uni04F0 uni04F0.ss01 uni04F2 uni04F2.ss01 uni04F4 uni04F6 uni04F8 uni04F8.ss01 uni04FA uni04FC uni04FE uni0510 uni0512 uni051A uni051A.ss01 uni051C uni0524 uni0526 uni0528 uni052E uni1E08 uni1E0C uni1E0E uni1E14 uni1E14.ss01 uni1E16 uni1E16.ss01 uni1E1C uni1E1C.ss01 uni1E20 uni1E20.ss01 uni1E24 uni1E2A uni1E2E uni1E2E.ss01 uni1E36 uni1E3A uni1E42 uni1E42.ss01 uni1E44 uni1E44.ss01 uni1E46 uni1E46.ss01 uni1E48 uni1E48.ss01 uni1E4C uni1E4E uni1E50 uni1E52 uni1E5A uni1E5E uni1E60 uni1E62 uni1E64 uni1E66 uni1E68 uni1E6C uni1E6C.ss01 uni1E6E uni1E6E.ss01 uni1E78 uni1E78.ss01 uni1E7A uni1E7A.ss01 uni1E8E uni1E8E.ss01 uni1E92 uni1E92.ss01 uni1E9E uni1EA0 uni1EA0.ss01 uni1EA2 uni1EA2.ss01 uni1EA4 uni1EA4.ss01 uni1EA6 uni1EA6.ss01 uni1EA8 uni1EA8.ss01 uni1EAA uni1EAA.ss01 uni1EAC uni1EAC.ss01 uni1EAE uni1EAE.ss01 uni1EB0 uni1EB0.ss01 uni1EB2 uni1EB2.ss01 uni1EB4 uni1EB4.ss01 uni1EB6 uni1EB6.ss01 uni1EB8 uni1EB8.ss01 uni1EBA uni1EBA.ss01 uni1EBC uni1EBC.ss01 uni1EBE uni1EBE.ss01 uni1EC0 uni1EC0.ss01 uni1EC2 uni1EC2.ss01 uni1EC4 uni1EC4.ss01 uni1EC6 uni1EC6.ss01 uni1EC8 uni1EC8.ss01 uni1ECA uni1ECA.ss01 uni1ECC uni1ECE uni1ED0 uni1ED2 uni1ED4 uni1ED6 uni1ED8 uni1EDA uni1EDC uni1EDE uni1EE0 uni1EE2 uni1EE4 uni1EE4.ss01 uni1EE6 uni1EE6.ss01 uni1EE8 uni1EE8.ss01 uni1EEA uni1EEA.ss01 uni1EEC uni1EEC.ss01 uni1EEE uni1EEE.ss01 uni1EF0 uni1EF0.ss01 uni1EF4 uni1EF4.ss01 uni1EF6 uni1EF6.ss01 uni1EF8 uni1EF8.ss01 uni212A uni212B uniA78B];
	@SUB_2_3_IN_1 = [acutecomb gravecomb hookabovecomb tildecomb tildecomb_acutecomb uni03000304 uni03010304 uni03010307 uni0302 uni03020300 uni03020301 uni03020303 uni03020309 uni03030304 uni03030308 uni0304 uni03040300 uni03040301 uni03040308 uni0306 uni03060300 uni03060301 uni03060303 uni03060309 uni0307 uni03070304 uni0308 uni03080300 uni03080301 uni03080304 uni030B uni030C uni030C0307 uni030F uni0311 uni0335 uni0337 uni0338];
	sub @SUB_2_3_BT_0 @SUB_2_3_IN_1' lookup SUB_43;
} SUB_2;
lookup SUB_3 {
	@SUB_3_0_IN_0 = [acutecomb gravecomb hookabovecomb tildecomb tildecomb_acutecomb uni03000304 uni03010304 uni03010307 uni0302 uni03020300 uni03020301 uni03020303 uni03020309 uni03030304 uni03030308 uni0304 uni03040300 uni03040301 uni03040308 uni0306 uni03060300 uni03060301 uni03060303 uni03060309 uni0307 uni03070304 uni0308 uni03080300 uni03080301 uni03080304 uni030B uni030C uni030C0307 uni030F uni0311 uni0335 uni0337 uni0338];
	@SUB_3_0_LA_1 = [acutecomb.case gravecomb.case hookabovecomb.case tildecomb.case tildecomb_acutecomb.case uni03000304.case uni03010304.case uni03010307.case uni0302.case uni03020300.case uni03020301.case uni03020303.case uni03020309.case uni03030304.case uni03030308.case uni0304.case uni03040300.case uni03040301.case uni03040308.case uni0306.case uni03060300.case uni03060301.case uni03060303.case uni03060309.case uni0307.case uni03070304.case uni0308.case uni03080300.case uni03080301.case uni03080304.case uni030B.case uni030C.case uni030C0307.case uni030F.case uni0311.case uni0335.case uni0337.case uni0338.case];
	sub @SUB_3_0_IN_0' lookup SUB_43 @SUB_3_0_LA_1;
	@SUB_3_1_BT_0 = [acutecomb.case gravecomb.case hookabovecomb.case tildecomb.case tildecomb_acutecomb.case uni03000304.case uni03010304.case uni03010307.case uni0302.case uni03020300.case uni03020301.case uni03020303.case uni03020309.case uni03030304.case uni03030308.case uni0304.case uni03040300.case uni03040301.case uni03040308.case uni0306.case uni03060300.case uni03060301.case uni03060303.case uni03060309.case uni0307.case uni03070304.case uni0308.case uni03080300.case uni03080301.case uni03080304.case uni030B.case uni030C.case uni030C0307.case uni030F.case uni0311.case uni0335.case uni0337.case uni0338.case];
	@SUB_3_1_IN_1 = [acutecomb gravecomb hookabovecomb tildecomb tildecomb_acutecomb uni03000304 uni03010304 uni03010307 uni0302 uni03020300 uni03020301 uni03020303 uni03020309 uni03030304 uni03030308 uni0304 uni03040300 uni03040301 uni03040308 uni0306 uni03060300 uni03060301 uni03060303 uni03060309 uni0307 uni03070304 uni0308 uni03080300 uni03080301 uni03080304 uni030B uni030C uni030C0307 uni030F uni0311 uni0335 uni0337 uni0338];
	sub @SUB_3_1_BT_0 @SUB_3_1_IN_1' lookup SUB_43;
} SUB_3;
lookup SUB_4 {
	sub gravecomb uni0304 by uni03000304;
	sub acutecomb uni0304 by uni03010304;
	sub acutecomb uni0307 by uni03010307;
	sub tildecomb uni0304 by uni03030304;
	sub tildecomb acutecomb by tildecomb_acutecomb;
	sub tildecomb uni0308 by uni03030308;
	sub uni0304 acutecomb by uni03040301;
	sub uni0304 gravecomb by uni03040300;
	sub uni0304 uni0308 by uni03040308;
	sub uni0307 uni0304 by uni03070304;
	sub uni0308 uni0304 by uni03080304;
	sub uni0308 acutecomb by uni03080301;
	sub uni0308 gravecomb by uni03080300;
	sub uni030A acutecomb by uni030A0301;
	sub uni030C uni0307 by uni030C0307;
	sub uni0308.case uni0304.case by uni03080304.case;
	sub uni0308.case acutecomb.case by uni03080301.case;
	sub uni0308.case gravecomb.case by uni03080300.case;
	sub uni0307.case uni0304.case by uni03070304.case;
	sub gravecomb.case uni0304.case by uni03000304.case;
	sub acutecomb.case uni0304.case by uni03010304.case;
	sub acutecomb.case uni0307.case by uni03010307.case;
	sub uni030C.case uni0307.case by uni030C0307.case;
	sub tildecomb.case uni0304.case by uni03030304.case;
	sub tildecomb.case acutecomb.case by tildecomb_acutecomb.case;
	sub tildecomb.case uni0308.case by uni03030308.case;
	sub uni0304.case acutecomb.case by uni03040301.case;
	sub uni0304.case gravecomb.case by uni03040300.case;
	sub uni0304.case uni0308.case by uni03040308.case;
} SUB_4;
lookup SUB_5 {
	sub gravecomb uni0304 by uni03000304;
	sub acutecomb uni0304 by uni03010304;
	sub acutecomb uni0307 by uni03010307;
	sub tildecomb uni0304 by uni03030304;
	sub tildecomb acutecomb by tildecomb_acutecomb;
	sub tildecomb uni0308 by uni03030308;
	sub uni0304 acutecomb by uni03040301;
	sub uni0304 gravecomb by uni03040300;
	sub uni0304 uni0308 by uni03040308;
	sub uni0307 uni0304 by uni03070304;
	sub uni0308 uni0304 by uni03080304;
	sub uni0308 acutecomb by uni03080301;
	sub uni0308 gravecomb by uni03080300;
	sub uni030A acutecomb by uni030A0301;
	sub uni030C uni0307 by uni030C0307;
	sub uni0308.case uni0304.case by uni03080304.case;
	sub uni0308.case acutecomb.case by uni03080301.case;
	sub uni0308.case gravecomb.case by uni03080300.case;
	sub uni0307.case uni0304.case by uni03070304.case;
	sub gravecomb.case uni0304.case by uni03000304.case;
	sub acutecomb.case uni0304.case by uni03010304.case;
	sub acutecomb.case uni0307.case by uni03010307.case;
	sub uni030C.case uni0307.case by uni030C0307.case;
	sub tildecomb.case uni0304.case by uni03030304.case;
	sub tildecomb.case acutecomb.case by tildecomb_acutecomb.case;
	sub tildecomb.case uni0308.case by uni03030308.case;
	sub uni0304.case acutecomb.case by uni03040301.case;
	sub uni0304.case gravecomb.case by uni03040300.case;
	sub uni0304.case uni0308.case by uni03040308.case;
} SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
script cyrl;
language dflt;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language BGR;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language MKD;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language SRB;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
script latn;
language dflt;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6 {
	sub uni0302 tildecomb by uni03020303;
	sub uni0302 hookabovecomb by uni03020309;
	sub uni0302 gravecomb by uni03020300;
	sub uni0302 acutecomb by uni03020301;
	sub uni0306 tildecomb by uni03060303;
	sub uni0306 hookabovecomb by uni03060309;
	sub uni0306 gravecomb by uni03060300;
	sub uni0306 acutecomb by uni03060301;
	sub uni0302.case tildecomb.case by uni03020303.case;
	sub uni0302.case hookabovecomb.case by uni03020309.case;
	sub uni0302.case gravecomb.case by uni03020300.case;
	sub uni0302.case acutecomb.case by uni03020301.case;
	sub uni0306.case tildecomb.case by uni03060303.case;
	sub uni0306.case hookabovecomb.case by uni03060309.case;
	sub uni0306.case gravecomb.case by uni03060300.case;
	sub uni0306.case acutecomb.case by uni03060301.case;
} SUB_6;
lookup SUB_7 {
	sub uni0302 tildecomb by uni03020303;
	sub uni0302 hookabovecomb by uni03020309;
	sub uni0302 gravecomb by uni03020300;
	sub uni0302 acutecomb by uni03020301;
	sub uni0306 tildecomb by uni03060303;
	sub uni0306 hookabovecomb by uni03060309;
	sub uni0306 gravecomb by uni03060300;
	sub uni0306 acutecomb by uni03060301;
	sub uni0302.case tildecomb.case by uni03020303.case;
	sub uni0302.case hookabovecomb.case by uni03020309.case;
	sub uni0302.case gravecomb.case by uni03020300.case;
	sub uni0302.case acutecomb.case by uni03020301.case;
	sub uni0306.case tildecomb.case by uni03060303.case;
	sub uni0306.case hookabovecomb.case by uni03060309.case;
	sub uni0306.case gravecomb.case by uni03060300.case;
	sub uni0306.case acutecomb.case by uni03060301.case;
} SUB_7;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_6;
lookup SUB_7;
language AZE;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language CAT;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language CRT;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language KAZ;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language MOL;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language NLD;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language ROM;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language TAT;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
language TRK;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
lookup SUB_2;
lookup SUB_3;
lookup SUB_4;
lookup SUB_5;
";
tag = ccmp;
},
{
code = "script latn;
language NLD;
lookup SUB_8 {
	sub Iacute J by Iacute_J.loclNLD;
	sub iacute j by iacute_j.loclNLD;
} SUB_8;
language CAT;
lookup SUB_9 {
	sub l periodcentered' lookup SUB_43 l;
	sub L periodcentered' lookup SUB_44 L;
} SUB_9;
language ROM;
lookup SUB_10 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub uni0162 by uni021A;
	sub uni0163 by uni021B;
} SUB_10;
language MOL;
lookup SUB_11 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub uni0162 by uni021A;
	sub uni0163 by uni021B;
} SUB_11;
language KAZ;
lookup SUB_12 {
	sub i by i.loclTRK;
} SUB_12;
language TAT;
lookup SUB_13 {
	sub i by i.loclTRK;
} SUB_13;
language TRK;
lookup SUB_14 {
	sub i by i.loclTRK;
} SUB_14;
language CRT;
lookup SUB_15 {
	sub i by i.loclTRK;
} SUB_15;
language AZE;
lookup SUB_16 {
	sub i by i.loclTRK;
} SUB_16;
script cyrl;
language BGR;
lookup SUB_17 {
	sub uni0414 by uni0414.loclBGR;
	sub uni041B by uni041B.loclBGR;
	sub uni0424 by uni0424.loclBGR;
	sub uni0432 by uni0432.loclBGR;
	sub uni0433 by uni0433.loclBGR;
	sub uni0434 by uni0434.loclBGR;
	sub uni0436 by uni0436.loclBGR;
	sub uni0437 by uni0437.loclBGR;
	sub uni0438 by uni0438.loclBGR;
	sub uni0439 by uni0439.loclBGR;
	sub uni043A by uni043A.loclBGR;
	sub uni043B by uni043B.loclBGR;
	sub uni043D by uni043D.loclBGR;
	sub uni043F by uni043F.loclBGR;
	sub uni0442 by uni0442.loclBGR;
	sub uni0446 by uni0446.loclBGR;
	sub uni0447 by uni0447.loclBGR;
	sub uni0448 by uni0448.loclBGR;
	sub uni0449 by uni0449.loclBGR;
	sub uni044A by uni044A.loclBGR;
	sub uni044C by uni044C.loclBGR;
	sub uni044E by uni044E.loclBGR;
	sub uni045D by uni045D.loclBGR;
} SUB_17;
language MKD;
lookup SUB_18 {
	sub uni0453 by uni0453.loclMKD;
} SUB_18;
language SRB;
lookup SUB_19 {
	sub uni0431 by uni0431.loclSRB;
	sub uni0433 by uni0433.loclSRB;
	sub uni0434 by uni0434.loclSRB;
	sub uni043F by uni043F.loclSRB;
	sub uni0442 by uni0442.loclSRB;
} SUB_19;
language CHU;
lookup SUB_20 {
	sub uni04AA by uni04AA.loclCHU;
	sub uni04AB by uni04AB.loclCHU;
} SUB_20;
language BSH;
lookup SUB_21 {
	sub uni0492 by uni0492.loclBSH;
	sub uni0493 by uni0493.loclBSH;
	sub uni0498 by uni0498.loclBSH;
	sub uni0499 by uni0499.loclBSH;
	sub uni04AA by uni04AA.loclBSH;
} SUB_21;
";
tag = locl;
},
{
code = "script DFLT;
language dflt;
lookup SUB_22 {
	sub zero by uni2080;
	sub one by uni2081;
	sub two by uni2082;
	sub three by uni2083;
	sub four by uni2084;
	sub five by uni2085;
	sub six by uni2086;
	sub seven by uni2087;
	sub eight by uni2088;
	sub nine by uni2089;
} SUB_22;
script cyrl;
language dflt;
lookup SUB_22;
language BGR;
lookup SUB_22;
language MKD;
lookup SUB_22;
language SRB;
lookup SUB_22;
script latn;
language dflt;
lookup SUB_22;
language AZE;
lookup SUB_22;
language CAT;
lookup SUB_22;
language CRT;
lookup SUB_22;
language KAZ;
lookup SUB_22;
language MOL;
lookup SUB_22;
language NLD;
lookup SUB_22;
language ROM;
lookup SUB_22;
language TAT;
lookup SUB_22;
language TRK;
lookup SUB_22;
";
tag = subs;
},
{
code = "script DFLT;
language dflt;
lookup SUB_23 {
	sub zero by zero.sinf;
	sub one by one.sinf;
	sub two by two.sinf;
	sub three by three.sinf;
	sub four by four.sinf;
	sub five by five.sinf;
	sub six by six.sinf;
	sub seven by seven.sinf;
	sub eight by eight.sinf;
	sub nine by nine.sinf;
} SUB_23;
script cyrl;
language dflt;
lookup SUB_23;
language BGR;
lookup SUB_23;
language MKD;
lookup SUB_23;
language SRB;
lookup SUB_23;
script latn;
language dflt;
lookup SUB_23;
language AZE;
lookup SUB_23;
language CAT;
lookup SUB_23;
language CRT;
lookup SUB_23;
language KAZ;
lookup SUB_23;
language MOL;
lookup SUB_23;
language NLD;
lookup SUB_23;
language ROM;
lookup SUB_23;
language TAT;
lookup SUB_23;
language TRK;
lookup SUB_23;
";
tag = sinf;
},
{
code = "script DFLT;
language dflt;
lookup SUB_24 {
	sub zero by uni2070;
	sub one by uni00B9;
	sub two by uni00B2;
	sub three by uni00B3;
	sub four by uni2074;
	sub five by uni2075;
	sub six by uni2076;
	sub seven by uni2077;
	sub eight by uni2078;
	sub nine by uni2079;
} SUB_24;
script cyrl;
language dflt;
lookup SUB_24;
language BGR;
lookup SUB_24;
language MKD;
lookup SUB_24;
language SRB;
lookup SUB_24;
script latn;
language dflt;
lookup SUB_24;
language AZE;
lookup SUB_24;
language CAT;
lookup SUB_24;
language CRT;
lookup SUB_24;
language KAZ;
lookup SUB_24;
language MOL;
lookup SUB_24;
language NLD;
lookup SUB_24;
language ROM;
lookup SUB_24;
language TAT;
lookup SUB_24;
language TRK;
lookup SUB_24;
";
tag = sups;
},
{
code = "script DFLT;
language dflt;
lookup SUB_25 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_25;
script cyrl;
language dflt;
lookup SUB_25;
language BGR;
lookup SUB_25;
language MKD;
lookup SUB_25;
language SRB;
lookup SUB_25;
script latn;
language dflt;
lookup SUB_25;
language AZE;
lookup SUB_25;
language CAT;
lookup SUB_25;
language CRT;
lookup SUB_25;
language KAZ;
lookup SUB_25;
language MOL;
lookup SUB_25;
language NLD;
lookup SUB_25;
language ROM;
lookup SUB_25;
language TAT;
lookup SUB_25;
language TRK;
lookup SUB_25;
";
tag = numr;
},
{
code = "script DFLT;
language dflt;
lookup SUB_26 {
	sub zero by zero.dnom;
	sub one by one.dnom;
	sub two by two.dnom;
	sub three by three.dnom;
	sub four by four.dnom;
	sub five by five.dnom;
	sub six by six.dnom;
	sub seven by seven.dnom;
	sub eight by eight.dnom;
	sub nine by nine.dnom;
} SUB_26;
script cyrl;
language dflt;
lookup SUB_26;
language BGR;
lookup SUB_26;
language MKD;
lookup SUB_26;
language SRB;
lookup SUB_26;
script latn;
language dflt;
lookup SUB_26;
language AZE;
lookup SUB_26;
language CAT;
lookup SUB_26;
language CRT;
lookup SUB_26;
language KAZ;
lookup SUB_26;
language MOL;
lookup SUB_26;
language NLD;
lookup SUB_26;
language ROM;
lookup SUB_26;
language TAT;
lookup SUB_26;
language TRK;
lookup SUB_26;
";
tag = dnom;
},
{
code = "script DFLT;
language dflt;
lookup SUB_27 {
	sub slash by fraction;
} SUB_27;
lookup SUB_28 {
	sub zero by zero.numr;
	sub one by one.numr;
	sub two by two.numr;
	sub three by three.numr;
	sub four by four.numr;
	sub five by five.numr;
	sub six by six.numr;
	sub seven by seven.numr;
	sub eight by eight.numr;
	sub nine by nine.numr;
} SUB_28;
lookup SUB_29 {
	@SUB_29_0_IN_0 = [eight.numr five.numr four.numr nine.numr one.numr seven.numr six.numr three.numr two.numr zero.numr];
	sub fraction @SUB_29_0_IN_0' lookup SUB_44;
	@SUB_29_1_BT_0 = [eight.dnom five.dnom four.dnom nine.dnom one.dnom seven.dnom six.dnom three.dnom two.dnom zero.dnom];
	@SUB_29_1_IN_1 = [eight.numr five.numr four.numr nine.numr one.numr seven.numr six.numr three.numr two.numr zero.numr];
	sub @SUB_29_1_BT_0 @SUB_29_1_IN_1' lookup SUB_44;
} SUB_29;
script cyrl;
language dflt;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language BGR;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language MKD;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language SRB;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
script latn;
language dflt;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language AZE;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language CAT;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language CRT;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language KAZ;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language MOL;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language NLD;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language ROM;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language TAT;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
language TRK;
lookup SUB_27;
lookup SUB_28;
lookup SUB_29;
";
tag = frac;
},
{
code = "script DFLT;
language dflt;
lookup SUB_30 {
	@SUB_30_0_BT_0 = [eight five four nine one seven six three two zero];
	sub @SUB_30_0_BT_0 [A a]' lookup SUB_44;
	@SUB_30_1_BT_0 = [eight five four nine one seven six three two zero];
	sub @SUB_30_1_BT_0 [O o]' lookup SUB_44;
} SUB_30;
lookup SUB_31 {
	sub N o period by uni2116;
} SUB_31;
script cyrl;
language dflt;
lookup SUB_30;
lookup SUB_31;
language BGR;
lookup SUB_30;
lookup SUB_31;
language MKD;
lookup SUB_30;
lookup SUB_31;
language SRB;
lookup SUB_30;
lookup SUB_31;
script latn;
language dflt;
lookup SUB_30;
lookup SUB_31;
language AZE;
lookup SUB_30;
lookup SUB_31;
language CAT;
lookup SUB_30;
lookup SUB_31;
language CRT;
lookup SUB_30;
lookup SUB_31;
language KAZ;
lookup SUB_30;
lookup SUB_31;
language MOL;
lookup SUB_30;
lookup SUB_31;
language NLD;
lookup SUB_30;
lookup SUB_31;
language ROM;
lookup SUB_30;
lookup SUB_31;
language TAT;
lookup SUB_30;
lookup SUB_31;
language TRK;
lookup SUB_30;
lookup SUB_31;
";
tag = ordn;
},
{
code = "script DFLT;
language dflt;
lookup SUB_32 {
	sub zero.osf by zero;
	sub one.osf by one;
	sub two.osf by two;
	sub three.osf by three;
	sub four.osf by four;
	sub five.osf by five;
	sub six.osf by six;
	sub seven.osf by seven;
	sub eight.osf by eight;
	sub nine.osf by nine;
} SUB_32;
script cyrl;
language dflt;
lookup SUB_32;
language BGR;
lookup SUB_32;
language MKD;
lookup SUB_32;
language SRB;
lookup SUB_32;
script latn;
language dflt;
lookup SUB_32;
language AZE;
lookup SUB_32;
language CAT;
lookup SUB_32;
language CRT;
lookup SUB_32;
language KAZ;
lookup SUB_32;
language MOL;
lookup SUB_32;
language NLD;
lookup SUB_32;
language ROM;
lookup SUB_32;
language TAT;
lookup SUB_32;
language TRK;
lookup SUB_32;
";
tag = lnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_33 {
	sub zero.tf by zero;
	sub one.tf by one;
	sub two.tf by two;
	sub three.tf by three;
	sub four.tf by four;
	sub five.tf by five;
	sub six.tf by six;
	sub seven.tf by seven;
	sub eight.tf by eight;
	sub nine.tf by nine;
	sub zero.tosf by zero.osf;
	sub one.tosf by one.osf;
	sub two.tosf by two.osf;
	sub three.tosf by three.osf;
	sub four.tosf by four.osf;
	sub five.tosf by five.osf;
	sub six.tosf by six.osf;
	sub seven.tosf by seven.osf;
	sub eight.tosf by eight.osf;
	sub nine.tosf by nine.osf;
} SUB_33;
script cyrl;
language dflt;
lookup SUB_33;
language BGR;
lookup SUB_33;
language MKD;
lookup SUB_33;
language SRB;
lookup SUB_33;
script latn;
language dflt;
lookup SUB_33;
language AZE;
lookup SUB_33;
language CAT;
lookup SUB_33;
language CRT;
lookup SUB_33;
language KAZ;
lookup SUB_33;
language MOL;
lookup SUB_33;
language NLD;
lookup SUB_33;
language ROM;
lookup SUB_33;
language TAT;
lookup SUB_33;
language TRK;
lookup SUB_33;
";
tag = pnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_34 {
	sub zero by zero.tf;
	sub one by one.tf;
	sub two by two.tf;
	sub three by three.tf;
	sub four by four.tf;
	sub five by five.tf;
	sub six by six.tf;
	sub seven by seven.tf;
	sub eight by eight.tf;
	sub nine by nine.tf;
	sub zero.osf by zero.tosf;
	sub one.osf by one.tosf;
	sub two.osf by two.tosf;
	sub three.osf by three.tosf;
	sub four.osf by four.tosf;
	sub five.osf by five.tosf;
	sub six.osf by six.tosf;
	sub seven.osf by seven.tosf;
	sub eight.osf by eight.tosf;
	sub nine.osf by nine.tosf;
} SUB_34;
script cyrl;
language dflt;
lookup SUB_34;
language BGR;
lookup SUB_34;
language MKD;
lookup SUB_34;
language SRB;
lookup SUB_34;
script latn;
language dflt;
lookup SUB_34;
language AZE;
lookup SUB_34;
language CAT;
lookup SUB_34;
language CRT;
lookup SUB_34;
language KAZ;
lookup SUB_34;
language MOL;
lookup SUB_34;
language NLD;
lookup SUB_34;
language ROM;
lookup SUB_34;
language TAT;
lookup SUB_34;
language TRK;
lookup SUB_34;
";
tag = tnum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_35 {
	sub zero by zero.osf;
	sub one by one.osf;
	sub two by two.osf;
	sub three by three.osf;
	sub four by four.osf;
	sub five by five.osf;
	sub six by six.osf;
	sub seven by seven.osf;
	sub eight by eight.osf;
	sub nine by nine.osf;
	sub zero.tf by zero.tosf;
	sub one.tf by one.tosf;
	sub two.tf by two.tosf;
	sub three.tf by three.tosf;
	sub four.tf by four.tosf;
	sub five.tf by five.tosf;
	sub six.tf by six.tosf;
	sub seven.tf by seven.tosf;
	sub eight.tf by eight.tosf;
	sub nine.tf by nine.tosf;
} SUB_35;
script cyrl;
language dflt;
lookup SUB_35;
language BGR;
lookup SUB_35;
language MKD;
lookup SUB_35;
language SRB;
lookup SUB_35;
script latn;
language dflt;
lookup SUB_35;
language AZE;
lookup SUB_35;
language CAT;
lookup SUB_35;
language CRT;
lookup SUB_35;
language KAZ;
lookup SUB_35;
language MOL;
lookup SUB_35;
language NLD;
lookup SUB_35;
language ROM;
lookup SUB_35;
language TAT;
lookup SUB_35;
language TRK;
lookup SUB_35;
";
tag = onum;
},
{
code = "script DFLT;
language dflt;
lookup SUB_36 {
	sub exclam by exclam.sc;
	sub quotedbl by quotedbl.sc;
	sub ampersand by ampersand.sc;
	sub quotesingle by quotesingle.sc;
	sub period by period.sc;
	sub question by question.sc;
	sub A by a.sc;
	sub B by b.sc;
	sub C by c.sc;
	sub D by d.sc;
	sub E by e.sc;
	sub F by f.sc;
	sub G by g.sc;
	sub H by h.sc;
	sub I by i.sc;
	sub J by j.sc;
	sub K by k.sc;
	sub L by l.sc;
	sub M by m.sc;
	sub N by n.sc;
	sub O by o.sc;
	sub P by p.sc;
	sub Q by q.sc;
	sub R by r.sc;
	sub S by s.sc;
	sub T by t.sc;
	sub U by u.sc;
	sub V by v.sc;
	sub W by w.sc;
	sub X by x.sc;
	sub Y by y.sc;
	sub Z by z.sc;
	sub exclamdown by exclamdown.sc;
	sub guillemotleft by guillemotleft.sc;
	sub guillemotright by guillemotright.sc;
	sub questiondown by questiondown.sc;
	sub Agrave by agrave.sc;
	sub Aacute by aacute.sc;
	sub Acircumflex by acircumflex.sc;
	sub Atilde by atilde.sc;
	sub Adieresis by adieresis.sc;
	sub Aring by aring.sc;
	sub AE by ae.sc;
	sub Ccedilla by ccedilla.sc;
	sub Egrave by egrave.sc;
	sub Eacute by eacute.sc;
	sub Ecircumflex by ecircumflex.sc;
	sub Edieresis by edieresis.sc;
	sub Igrave by igrave.sc;
	sub Iacute by iacute.sc;
	sub Icircumflex by icircumflex.sc;
	sub Idieresis by idieresis.sc;
	sub Eth by eth.sc;
	sub Ntilde by ntilde.sc;
	sub Ograve by ograve.sc;
	sub Oacute by oacute.sc;
	sub Ocircumflex by ocircumflex.sc;
	sub Otilde by otilde.sc;
	sub Odieresis by odieresis.sc;
	sub Oslash by oslash.sc;
	sub Ugrave by ugrave.sc;
	sub Uacute by uacute.sc;
	sub Ucircumflex by ucircumflex.sc;
	sub Udieresis by udieresis.sc;
	sub Yacute by yacute.sc;
	sub Thorn by thorn.sc;
	sub Amacron by amacron.sc;
	sub Abreve by abreve.sc;
	sub Aogonek by aogonek.sc;
	sub Cacute by cacute.sc;
	sub Ccircumflex by ccircumflex.sc;
	sub Cdotaccent by cdotaccent.sc;
	sub Ccaron by ccaron.sc;
	sub Dcaron by dcaron.sc;
	sub Dcroat by dcroat.sc;
	sub Emacron by emacron.sc;
	sub Ebreve by ebreve.sc;
	sub Edotaccent by edotaccent.sc;
	sub Eogonek by eogonek.sc;
	sub Ecaron by ecaron.sc;
	sub Gcircumflex by gcircumflex.sc;
	sub Gbreve by gbreve.sc;
	sub Gdotaccent by gdotaccent.sc;
	sub Gcommaaccent by gcommaaccent.sc;
	sub Hcircumflex by hcircumflex.sc;
	sub Hbar by hbar.sc;
	sub Itilde by itilde.sc;
	sub Imacron by imacron.sc;
	sub Ibreve by ibreve.sc;
	sub Iogonek by iogonek.sc;
	sub Idotaccent by i.sc.loclTRK;
	sub IJ by ij.sc;
	sub Jcircumflex by jcircumflex.sc;
	sub Kcommaaccent by kcommaaccent.sc;
	sub Lacute by lacute.sc;
	sub Lcommaaccent by lcommaaccent.sc;
	sub Lcaron by lcaron.sc;
	sub Ldot by ldot.sc;
	sub Lslash by lslash.sc;
	sub Nacute by nacute.sc;
	sub Ncommaaccent by ncommaaccent.sc;
	sub Ncaron by ncaron.sc;
	sub Eng by eng.sc;
	sub Omacron by omacron.sc;
	sub Obreve by obreve.sc;
	sub Ohungarumlaut by ohungarumlaut.sc;
	sub OE by oe.sc;
	sub Racute by racute.sc;
	sub Rcommaaccent by rcommaaccent.sc;
	sub Rcaron by rcaron.sc;
	sub Sacute by sacute.sc;
	sub Scircumflex by scircumflex.sc;
	sub Scedilla by scedilla.sc;
	sub Scaron by scaron.sc;
	sub uni0162 by uni0163.sc;
	sub Tcaron by tcaron.sc;
	sub Tbar by tbar.sc;
	sub Utilde by utilde.sc;
	sub Umacron by umacron.sc;
	sub Ubreve by ubreve.sc;
	sub Uring by uring.sc;
	sub Uhungarumlaut by uhungarumlaut.sc;
	sub Uogonek by uogonek.sc;
	sub Wcircumflex by wcircumflex.sc;
	sub Ycircumflex by ycircumflex.sc;
	sub Ydieresis by ydieresis.sc;
	sub Zacute by zacute.sc;
	sub Zdotaccent by zdotaccent.sc;
	sub Zcaron by zcaron.sc;
	sub uni018F by uni0259.sc;
	sub Ohorn by ohorn.sc;
	sub Uhorn by uhorn.sc;
	sub uni01B7 by uni0292.sc;
	sub uni01C4 by uni01C6.sc;
	sub uni01C5 by uni01C6.sc;
	sub uni01C7 by uni01C9.sc;
	sub uni01C8 by uni01C9.sc;
	sub uni01CA by uni01CC.sc;
	sub uni01CB by uni01CC.sc;
	sub uni01CD by uni01CE.sc;
	sub uni01D3 by uni01D4.sc;
	sub uni01E4 by uni01E5.sc;
	sub Gcaron by gcaron.sc;
	sub uni01E8 by uni01E9.sc;
	sub uni01EA by uni01EB.sc;
	sub uni01EE by uni01EF.sc;
	sub Aringacute by aringacute.sc;
	sub AEacute by aeacute.sc;
	sub Oslashacute by oslashacute.sc;
	sub uni0200 by uni0201.sc;
	sub uni0202 by uni0203.sc;
	sub uni0204 by uni0205.sc;
	sub uni0206 by uni0207.sc;
	sub uni0208 by uni0209.sc;
	sub uni020A by uni020B.sc;
	sub uni020C by uni020D.sc;
	sub uni020E by uni020F.sc;
	sub uni0210 by uni0211.sc;
	sub uni0212 by uni0213.sc;
	sub uni0214 by uni0215.sc;
	sub uni0216 by uni0217.sc;
	sub Scommaaccent by scommaaccent.sc;
	sub uni021A by uni021B.sc;
	sub uni021E by uni021F.sc;
	sub uni022A by uni022B.sc;
	sub uni022C by uni022D.sc;
	sub uni0230 by uni0231.sc;
	sub uni0232 by uni0233.sc;
	sub uni0335 by uni0335.sc;
	sub uni0336 by uni0336.sc;
	sub uni0338 by uni0338.sc;
	sub uni1E08 by uni1E09.sc;
	sub uni1E0C by uni1E0D.sc;
	sub uni1E0E by uni1E0F.sc;
	sub uni1E14 by uni1E15.sc;
	sub uni1E16 by uni1E17.sc;
	sub uni1E1C by uni1E1D.sc;
	sub uni1E20 by uni1E21.sc;
	sub uni1E24 by uni1E25.sc;
	sub uni1E2A by uni1E2B.sc;
	sub uni1E2E by uni1E2F.sc;
	sub uni1E36 by uni1E37.sc;
	sub uni1E3A by uni1E3B.sc;
	sub uni1E42 by uni1E43.sc;
	sub uni1E44 by uni1E45.sc;
	sub uni1E46 by uni1E47.sc;
	sub uni1E48 by uni1E49.sc;
	sub uni1E4C by uni1E4D.sc;
	sub uni1E4E by uni1E4F.sc;
	sub uni1E50 by uni1E51.sc;
	sub uni1E52 by uni1E53.sc;
	sub uni1E5A by uni1E5B.sc;
	sub uni1E5E by uni1E5F.sc;
	sub uni1E60 by uni1E61.sc;
	sub uni1E62 by uni1E63.sc;
	sub uni1E64 by uni1E65.sc;
	sub uni1E66 by uni1E67.sc;
	sub uni1E68 by uni1E69.sc;
	sub uni1E6C by uni1E6D.sc;
	sub uni1E6E by uni1E6F.sc;
	sub uni1E78 by uni1E79.sc;
	sub uni1E7A by uni1E7B.sc;
	sub Wgrave by wgrave.sc;
	sub Wacute by wacute.sc;
	sub Wdieresis by wdieresis.sc;
	sub uni1E8E by uni1E8F.sc;
	sub uni1E92 by uni1E93.sc;
	sub uni1E9E by germandbls.sc;
	sub uni1EA0 by uni1EA1.sc;
	sub uni1EA2 by uni1EA3.sc;
	sub uni1EA4 by uni1EA5.sc;
	sub uni1EA6 by uni1EA7.sc;
	sub uni1EA8 by uni1EA9.sc;
	sub uni1EAA by uni1EAB.sc;
	sub uni1EAC by uni1EAD.sc;
	sub uni1EAE by uni1EAF.sc;
	sub uni1EB0 by uni1EB1.sc;
	sub uni1EB2 by uni1EB3.sc;
	sub uni1EB4 by uni1EB5.sc;
	sub uni1EB6 by uni1EB7.sc;
	sub uni1EB8 by uni1EB9.sc;
	sub uni1EBA by uni1EBB.sc;
	sub uni1EBC by uni1EBD.sc;
	sub uni1EBE by uni1EBF.sc;
	sub uni1EC0 by uni1EC1.sc;
	sub uni1EC2 by uni1EC3.sc;
	sub uni1EC4 by uni1EC5.sc;
	sub uni1EC6 by uni1EC7.sc;
	sub uni1EC8 by uni1EC9.sc;
	sub uni1ECA by uni1ECB.sc;
	sub uni1ECC by uni1ECD.sc;
	sub uni1ECE by uni1ECF.sc;
	sub uni1ED0 by uni1ED1.sc;
	sub uni1ED2 by uni1ED3.sc;
	sub uni1ED4 by uni1ED5.sc;
	sub uni1ED6 by uni1ED7.sc;
	sub uni1ED8 by uni1ED9.sc;
	sub uni1EDA by uni1EDB.sc;
	sub uni1EDC by uni1EDD.sc;
	sub uni1EDE by uni1EDF.sc;
	sub uni1EE0 by uni1EE1.sc;
	sub uni1EE2 by uni1EE3.sc;
	sub uni1EE4 by uni1EE5.sc;
	sub uni1EE6 by uni1EE7.sc;
	sub uni1EE8 by uni1EE9.sc;
	sub uni1EEA by uni1EEB.sc;
	sub uni1EEC by uni1EED.sc;
	sub uni1EEE by uni1EEF.sc;
	sub uni1EF0 by uni1EF1.sc;
	sub Ygrave by ygrave.sc;
	sub uni1EF4 by uni1EF5.sc;
	sub uni1EF6 by uni1EF7.sc;
	sub uni1EF8 by uni1EF9.sc;
	sub quoteleft by quoteleft.sc;
	sub quoteright by quoteright.sc;
	sub quotesinglbase by quotesinglbase.sc;
	sub quotedblleft by quotedblleft.sc;
	sub quotedblright by quotedblright.sc;
	sub quotedblbase by quotedblbase.sc;
	sub guilsinglleft by guilsinglleft.sc;
	sub guilsinglright by guilsinglright.sc;
	sub uniA78B by uniA78C.sc;
	sub Iacute_J.loclNLD by iacute_j.loclNLD.sc;
} SUB_36;
script cyrl;
language dflt;
lookup SUB_36;
language BGR;
lookup SUB_36;
language MKD;
lookup SUB_36;
language SRB;
lookup SUB_36;
script latn;
language dflt;
lookup SUB_36;
language AZE;
lookup SUB_36;
language CAT;
lookup SUB_36;
language CRT;
lookup SUB_36;
language KAZ;
lookup SUB_36;
language MOL;
lookup SUB_36;
language NLD;
lookup SUB_36;
language ROM;
lookup SUB_36;
language TAT;
lookup SUB_36;
language TRK;
lookup SUB_36;
";
tag = c2sc;
},
{
code = "script DFLT;
language dflt;
lookup SUB_37 {
	sub exclam by exclam.sc;
	sub quotedbl by quotedbl.sc;
	sub ampersand by ampersand.sc;
	sub quotesingle by quotesingle.sc;
	sub period by period.sc;
	sub question by question.sc;
	sub a by a.sc;
	sub b by b.sc;
	sub c by c.sc;
	sub d by d.sc;
	sub e by e.sc;
	sub f by f.sc;
	sub g by g.sc;
	sub h by h.sc;
	sub i by i.sc;
	sub j by j.sc;
	sub k by k.sc;
	sub l by l.sc;
	sub m by m.sc;
	sub n by n.sc;
	sub o by o.sc;
	sub p by p.sc;
	sub q by q.sc;
	sub r by r.sc;
	sub s by s.sc;
	sub t by t.sc;
	sub u by u.sc;
	sub v by v.sc;
	sub w by w.sc;
	sub x by x.sc;
	sub y by y.sc;
	sub z by z.sc;
	sub exclamdown by exclamdown.sc;
	sub guillemotleft by guillemotleft.sc;
	sub guillemotright by guillemotright.sc;
	sub questiondown by questiondown.sc;
	sub germandbls by germandbls.sc;
	sub agrave by agrave.sc;
	sub aacute by aacute.sc;
	sub acircumflex by acircumflex.sc;
	sub atilde by atilde.sc;
	sub adieresis by adieresis.sc;
	sub aring by aring.sc;
	sub ae by ae.sc;
	sub ccedilla by ccedilla.sc;
	sub egrave by egrave.sc;
	sub eacute by eacute.sc;
	sub ecircumflex by ecircumflex.sc;
	sub edieresis by edieresis.sc;
	sub igrave by igrave.sc;
	sub iacute by iacute.sc;
	sub icircumflex by icircumflex.sc;
	sub idieresis by idieresis.sc;
	sub eth by eth.sc;
	sub ntilde by ntilde.sc;
	sub ograve by ograve.sc;
	sub oacute by oacute.sc;
	sub ocircumflex by ocircumflex.sc;
	sub otilde by otilde.sc;
	sub odieresis by odieresis.sc;
	sub oslash by oslash.sc;
	sub ugrave by ugrave.sc;
	sub uacute by uacute.sc;
	sub ucircumflex by ucircumflex.sc;
	sub udieresis by udieresis.sc;
	sub yacute by yacute.sc;
	sub thorn by thorn.sc;
	sub ydieresis by ydieresis.sc;
	sub amacron by amacron.sc;
	sub abreve by abreve.sc;
	sub aogonek by aogonek.sc;
	sub cacute by cacute.sc;
	sub ccircumflex by ccircumflex.sc;
	sub cdotaccent by cdotaccent.sc;
	sub ccaron by ccaron.sc;
	sub dcaron by dcaron.sc;
	sub dcroat by dcroat.sc;
	sub emacron by emacron.sc;
	sub ebreve by ebreve.sc;
	sub edotaccent by edotaccent.sc;
	sub eogonek by eogonek.sc;
	sub ecaron by ecaron.sc;
	sub gcircumflex by gcircumflex.sc;
	sub gbreve by gbreve.sc;
	sub gdotaccent by gdotaccent.sc;
	sub gcommaaccent by gcommaaccent.sc;
	sub hcircumflex by hcircumflex.sc;
	sub hbar by hbar.sc;
	sub itilde by itilde.sc;
	sub imacron by imacron.sc;
	sub ibreve by ibreve.sc;
	sub iogonek by iogonek.sc;
	sub dotlessi by dotlessi.sc;
	sub ij by ij.sc;
	sub jcircumflex by jcircumflex.sc;
	sub kcommaaccent by kcommaaccent.sc;
	sub kgreenlandic by kgreenlandic.sc;
	sub lacute by lacute.sc;
	sub lcommaaccent by lcommaaccent.sc;
	sub lcaron by lcaron.sc;
	sub ldot by ldot.sc;
	sub lslash by lslash.sc;
	sub nacute by nacute.sc;
	sub ncommaaccent by ncommaaccent.sc;
	sub ncaron by ncaron.sc;
	sub eng by eng.sc;
	sub omacron by omacron.sc;
	sub obreve by obreve.sc;
	sub ohungarumlaut by ohungarumlaut.sc;
	sub oe by oe.sc;
	sub racute by racute.sc;
	sub rcommaaccent by rcommaaccent.sc;
	sub rcaron by rcaron.sc;
	sub sacute by sacute.sc;
	sub scircumflex by scircumflex.sc;
	sub scedilla by scedilla.sc;
	sub scaron by scaron.sc;
	sub uni0163 by uni0163.sc;
	sub tcaron by tcaron.sc;
	sub tbar by tbar.sc;
	sub utilde by utilde.sc;
	sub umacron by umacron.sc;
	sub ubreve by ubreve.sc;
	sub uring by uring.sc;
	sub uhungarumlaut by uhungarumlaut.sc;
	sub uogonek by uogonek.sc;
	sub wcircumflex by wcircumflex.sc;
	sub ycircumflex by ycircumflex.sc;
	sub zacute by zacute.sc;
	sub zdotaccent by zdotaccent.sc;
	sub zcaron by zcaron.sc;
	sub ohorn by ohorn.sc;
	sub uhorn by uhorn.sc;
	sub uni01C6 by uni01C6.sc;
	sub uni01C9 by uni01C9.sc;
	sub uni01CC by uni01CC.sc;
	sub uni01CE by uni01CE.sc;
	sub uni01D4 by uni01D4.sc;
	sub uni01E5 by uni01E5.sc;
	sub gcaron by gcaron.sc;
	sub uni01E9 by uni01E9.sc;
	sub uni01EB by uni01EB.sc;
	sub uni01EF by uni01EF.sc;
	sub aringacute by aringacute.sc;
	sub aeacute by aeacute.sc;
	sub oslashacute by oslashacute.sc;
	sub uni0201 by uni0201.sc;
	sub uni0203 by uni0203.sc;
	sub uni0205 by uni0205.sc;
	sub uni0207 by uni0207.sc;
	sub uni0209 by uni0209.sc;
	sub uni020B by uni020B.sc;
	sub uni020D by uni020D.sc;
	sub uni020F by uni020F.sc;
	sub uni0211 by uni0211.sc;
	sub uni0213 by uni0213.sc;
	sub uni0215 by uni0215.sc;
	sub uni0217 by uni0217.sc;
	sub scommaaccent by scommaaccent.sc;
	sub uni021B by uni021B.sc;
	sub uni021F by uni021F.sc;
	sub uni022B by uni022B.sc;
	sub uni022D by uni022D.sc;
	sub uni0231 by uni0231.sc;
	sub uni0233 by uni0233.sc;
	sub uni0259 by uni0259.sc;
	sub uni0292 by uni0292.sc;
	sub uni0335 by uni0335.sc;
	sub uni0336 by uni0336.sc;
	sub uni0338 by uni0338.sc;
	sub uni1E09 by uni1E09.sc;
	sub uni1E0D by uni1E0D.sc;
	sub uni1E0F by uni1E0F.sc;
	sub uni1E15 by uni1E15.sc;
	sub uni1E17 by uni1E17.sc;
	sub uni1E1D by uni1E1D.sc;
	sub uni1E21 by uni1E21.sc;
	sub uni1E25 by uni1E25.sc;
	sub uni1E2B by uni1E2B.sc;
	sub uni1E2F by uni1E2F.sc;
	sub uni1E37 by uni1E37.sc;
	sub uni1E3B by uni1E3B.sc;
	sub uni1E43 by uni1E43.sc;
	sub uni1E45 by uni1E45.sc;
	sub uni1E47 by uni1E47.sc;
	sub uni1E49 by uni1E49.sc;
	sub uni1E4D by uni1E4D.sc;
	sub uni1E4F by uni1E4F.sc;
	sub uni1E51 by uni1E51.sc;
	sub uni1E53 by uni1E53.sc;
	sub uni1E5B by uni1E5B.sc;
	sub uni1E5F by uni1E5F.sc;
	sub uni1E61 by uni1E61.sc;
	sub uni1E63 by uni1E63.sc;
	sub uni1E65 by uni1E65.sc;
	sub uni1E67 by uni1E67.sc;
	sub uni1E69 by uni1E69.sc;
	sub uni1E6D by uni1E6D.sc;
	sub uni1E6F by uni1E6F.sc;
	sub uni1E79 by uni1E79.sc;
	sub uni1E7B by uni1E7B.sc;
	sub wgrave by wgrave.sc;
	sub wacute by wacute.sc;
	sub wdieresis by wdieresis.sc;
	sub uni1E8F by uni1E8F.sc;
	sub uni1E93 by uni1E93.sc;
	sub uni1E97 by uni1E97.sc;
	sub uni1EA1 by uni1EA1.sc;
	sub uni1EA3 by uni1EA3.sc;
	sub uni1EA5 by uni1EA5.sc;
	sub uni1EA7 by uni1EA7.sc;
	sub uni1EA9 by uni1EA9.sc;
	sub uni1EAB by uni1EAB.sc;
	sub uni1EAD by uni1EAD.sc;
	sub uni1EAF by uni1EAF.sc;
	sub uni1EB1 by uni1EB1.sc;
	sub uni1EB3 by uni1EB3.sc;
	sub uni1EB5 by uni1EB5.sc;
	sub uni1EB7 by uni1EB7.sc;
	sub uni1EB9 by uni1EB9.sc;
	sub uni1EBB by uni1EBB.sc;
	sub uni1EBD by uni1EBD.sc;
	sub uni1EBF by uni1EBF.sc;
	sub uni1EC1 by uni1EC1.sc;
	sub uni1EC3 by uni1EC3.sc;
	sub uni1EC5 by uni1EC5.sc;
	sub uni1EC7 by uni1EC7.sc;
	sub uni1EC9 by uni1EC9.sc;
	sub uni1ECB by uni1ECB.sc;
	sub uni1ECD by uni1ECD.sc;
	sub uni1ECF by uni1ECF.sc;
	sub uni1ED1 by uni1ED1.sc;
	sub uni1ED3 by uni1ED3.sc;
	sub uni1ED5 by uni1ED5.sc;
	sub uni1ED7 by uni1ED7.sc;
	sub uni1ED9 by uni1ED9.sc;
	sub uni1EDB by uni1EDB.sc;
	sub uni1EDD by uni1EDD.sc;
	sub uni1EDF by uni1EDF.sc;
	sub uni1EE1 by uni1EE1.sc;
	sub uni1EE3 by uni1EE3.sc;
	sub uni1EE5 by uni1EE5.sc;
	sub uni1EE7 by uni1EE7.sc;
	sub uni1EE9 by uni1EE9.sc;
	sub uni1EEB by uni1EEB.sc;
	sub uni1EED by uni1EED.sc;
	sub uni1EEF by uni1EEF.sc;
	sub uni1EF1 by uni1EF1.sc;
	sub ygrave by ygrave.sc;
	sub uni1EF5 by uni1EF5.sc;
	sub uni1EF7 by uni1EF7.sc;
	sub uni1EF9 by uni1EF9.sc;
	sub quoteleft by quoteleft.sc;
	sub quoteright by quoteright.sc;
	sub quotesinglbase by quotesinglbase.sc;
	sub quotedblleft by quotedblleft.sc;
	sub quotedblright by quotedblright.sc;
	sub quotedblbase by quotedblbase.sc;
	sub guilsinglleft by guilsinglleft.sc;
	sub guilsinglright by guilsinglright.sc;
	sub uniA78C by uniA78C.sc;
	sub i.loclTRK by i.sc.loclTRK;
	sub iacute_j.loclNLD by iacute_j.loclNLD.sc;
} SUB_37;
script cyrl;
language dflt;
lookup SUB_37;
language BGR;
lookup SUB_37;
language MKD;
lookup SUB_37;
language SRB;
lookup SUB_37;
script latn;
language dflt;
lookup SUB_37;
language AZE;
lookup SUB_37;
language CAT;
lookup SUB_37;
language CRT;
lookup SUB_37;
language KAZ;
lookup SUB_37;
language MOL;
lookup SUB_37;
language NLD;
lookup SUB_37;
language ROM;
lookup SUB_37;
language TAT;
lookup SUB_37;
language TRK;
lookup SUB_37;
";
tag = smcp;
},
{
code = "script DFLT;
language dflt;
lookup SUB_38 {
	sub parenleft by parenleft.case;
	sub parenright by parenright.case;
	sub hyphen by hyphen.case;
	sub slash by slash.case;
	sub at by at.case;
	sub bracketleft by bracketleft.case;
	sub backslash by backslash.case;
	sub bracketright by bracketright.case;
	sub braceleft by braceleft.case;
	sub braceright by braceright.case;
	sub guillemotleft by guillemotleft.case;
	sub periodcentered by periodcentered.case;
	sub guillemotright by guillemotright.case;
	sub gravecomb by gravecomb.case;
	sub acutecomb by acutecomb.case;
	sub uni0302 by uni0302.case;
	sub tildecomb by tildecomb.case;
	sub uni0304 by uni0304.case;
	sub uni0306 by uni0306.case;
	sub uni0307 by uni0307.case;
	sub uni0308 by uni0308.case;
	sub hookabovecomb by hookabovecomb.case;
	sub uni030B by uni030B.case;
	sub uni030C by uni030C.case;
	sub uni030F by uni030F.case;
	sub uni0311 by uni0311.case;
	sub uni0335 by uni0335.case;
	sub uni0337 by uni0337.case;
	sub uni0338 by uni0338.case;
	sub endash by endash.case;
	sub emdash by emdash.case;
	sub bullet by bullet.case;
	sub guilsinglleft by guilsinglleft.case;
	sub guilsinglright by guilsinglright.case;
	sub arrowleft by arrowleft.case;
	sub arrowup by arrowup.case;
	sub arrowright by arrowright.case;
	sub arrowdown by arrowdown.case;
	sub periodcentered.loclCAT by periodcentered.loclCAT.case;
	sub uni03080300 by uni03080300.case;
	sub uni03080301 by uni03080301.case;
	sub uni03080304 by uni03080304.case;
	sub uni03070304 by uni03070304.case;
	sub uni03000304 by uni03000304.case;
	sub uni03010307 by uni03010307.case;
	sub uni03010304 by uni03010304.case;
	sub uni030C0307 by uni030C0307.case;
	sub uni03030308 by uni03030308.case;
	sub tildecomb_acutecomb by tildecomb_acutecomb.case;
	sub uni03030304 by uni03030304.case;
	sub uni03040308 by uni03040308.case;
	sub uni03040300 by uni03040300.case;
	sub uni03040301 by uni03040301.case;
	sub uni03060301 by uni03060301.case;
	sub uni03060300 by uni03060300.case;
	sub uni03060309 by uni03060309.case;
	sub uni03060303 by uni03060303.case;
	sub uni03020301 by uni03020301.case;
	sub uni03020300 by uni03020300.case;
	sub uni03020309 by uni03020309.case;
	sub uni03020303 by uni03020303.case;
} SUB_38;
script cyrl;
language dflt;
lookup SUB_38;
language BGR;
lookup SUB_38;
language MKD;
lookup SUB_38;
language SRB;
lookup SUB_38;
script latn;
language dflt;
lookup SUB_38;
language AZE;
lookup SUB_38;
language CAT;
lookup SUB_38;
language CRT;
lookup SUB_38;
language KAZ;
lookup SUB_38;
language MOL;
lookup SUB_38;
language NLD;
lookup SUB_38;
language ROM;
lookup SUB_38;
language TAT;
lookup SUB_38;
language TRK;
lookup SUB_38;
";
tag = case;
},
{
code = "script DFLT;
language dflt;
lookup SUB_39 {
	sub T h by T_h;
} SUB_39;
script cyrl;
language dflt;
lookup SUB_39;
language BGR;
lookup SUB_39;
language MKD;
lookup SUB_39;
language SRB;
lookup SUB_39;
script latn;
language dflt;
lookup SUB_39;
language AZE;
lookup SUB_39;
language CAT;
lookup SUB_39;
language CRT;
lookup SUB_39;
language KAZ;
lookup SUB_39;
language MOL;
lookup SUB_39;
language NLD;
lookup SUB_39;
language ROM;
lookup SUB_39;
language TAT;
lookup SUB_39;
language TRK;
lookup SUB_39;
";
tag = dlig;
},
{
code = "script DFLT;
language dflt;
lookup SUB_40 {
	sub f l by fl;
	sub f i by fi;
} SUB_40;
script cyrl;
language dflt;
lookup SUB_40;
language BGR;
lookup SUB_40;
language MKD;
lookup SUB_40;
language SRB;
lookup SUB_40;
script latn;
language dflt;
lookup SUB_40;
language AZE;
lookup SUB_40;
language CAT;
lookup SUB_40;
language CRT;
lookup SUB_40;
language KAZ;
lookup SUB_40;
language MOL;
lookup SUB_40;
language NLD;
lookup SUB_40;
language ROM;
lookup SUB_40;
language TAT;
lookup SUB_40;
language TRK;
lookup SUB_40;
";
tag = liga;
},
{
code = "script DFLT;
language dflt;
lookup SUB_41 {
	sub A by A.ss01;
	sub E by E.ss01;
	sub F by F.ss01;
	sub G by G.ss01;
	sub I by I.ss01;
	sub J by J.ss01;
	sub M by M.ss01;
	sub N by N.ss01;
	sub Q by Q.ss01;
	sub T by T.ss01;
	sub U by U.ss01;
	sub W by W.ss01;
	sub Y by Y.ss01;
	sub Z by Z.ss01;
	sub a by a.ss01;
	sub e by e.ss01;
	sub f by f.ss01;
	sub l by l.ss01;
	sub t by t.ss01;
	sub w by w.ss01;
	sub y by y.ss01;
	sub z by z.ss01;
	sub Agrave by Agrave.ss01;
	sub Aacute by Aacute.ss01;
	sub Acircumflex by Acircumflex.ss01;
	sub Atilde by Atilde.ss01;
	sub Adieresis by Adieresis.ss01;
	sub Aring by Aring.ss01;
	sub AE by AE.ss01;
	sub Egrave by Egrave.ss01;
	sub Eacute by Eacute.ss01;
	sub Ecircumflex by Ecircumflex.ss01;
	sub Edieresis by Edieresis.ss01;
	sub Igrave by Igrave.ss01;
	sub Iacute by Iacute.ss01;
	sub Icircumflex by Icircumflex.ss01;
	sub Idieresis by Idieresis.ss01;
	sub Ntilde by Ntilde.ss01;
	sub Ugrave by Ugrave.ss01;
	sub Uacute by Uacute.ss01;
	sub Ucircumflex by Ucircumflex.ss01;
	sub Udieresis by Udieresis.ss01;
	sub Yacute by Yacute.ss01;
	sub agrave by agrave.ss01;
	sub aacute by aacute.ss01;
	sub acircumflex by acircumflex.ss01;
	sub atilde by atilde.ss01;
	sub adieresis by adieresis.ss01;
	sub aring by aring.ss01;
	sub ae by ae.ss01;
	sub egrave by egrave.ss01;
	sub eacute by eacute.ss01;
	sub ecircumflex by ecircumflex.ss01;
	sub edieresis by edieresis.ss01;
	sub yacute by yacute.ss01;
	sub ydieresis by ydieresis.ss01;
	sub Amacron by Amacron.ss01;
	sub amacron by amacron.ss01;
	sub Abreve by Abreve.ss01;
	sub abreve by abreve.ss01;
	sub Aogonek by Aogonek.ss01;
	sub aogonek by aogonek.ss01;
	sub Emacron by Emacron.ss01;
	sub emacron by emacron.ss01;
	sub Ebreve by Ebreve.ss01;
	sub ebreve by ebreve.ss01;
	sub Edotaccent by Edotaccent.ss01;
	sub edotaccent by edotaccent.ss01;
	sub Eogonek by Eogonek.ss01;
	sub eogonek by eogonek.ss01;
	sub Ecaron by Ecaron.ss01;
	sub ecaron by ecaron.ss01;
	sub Gcircumflex by Gcircumflex.ss01;
	sub Gbreve by Gbreve.ss01;
	sub Gdotaccent by Gdotaccent.ss01;
	sub Gcommaaccent by Gcommaaccent.ss01;
	sub Itilde by Itilde.ss01;
	sub Imacron by Imacron.ss01;
	sub Ibreve by Ibreve.ss01;
	sub Iogonek by Iogonek.ss01;
	sub Idotaccent by Idotaccent.ss01;
	sub IJ by IJ.ss01;
	sub Jcircumflex by Jcircumflex.ss01;
	sub lacute by lacute.ss01;
	sub lcommaaccent by lcommaaccent.ss01;
	sub lcaron by lcaron.ss01;
	sub ldot by ldot.ss01;
	sub lslash by lslash.ss01;
	sub Nacute by Nacute.ss01;
	sub Ncommaaccent by Ncommaaccent.ss01;
	sub Ncaron by Ncaron.ss01;
	sub Eng by Eng.ss01;
	sub oe by oe.ss01;
	sub uni0162 by uni0162.ss01;
	sub uni0163 by uni0163.ss01;
	sub Tcaron by Tcaron.ss01;
	sub tcaron by tcaron.ss01;
	sub Tbar by Tbar.ss01;
	sub tbar by tbar.ss01;
	sub Utilde by Utilde.ss01;
	sub Umacron by Umacron.ss01;
	sub Ubreve by Ubreve.ss01;
	sub Uring by Uring.ss01;
	sub Uhungarumlaut by Uhungarumlaut.ss01;
	sub Uogonek by Uogonek.ss01;
	sub Wcircumflex by Wcircumflex.ss01;
	sub wcircumflex by wcircumflex.ss01;
	sub Ycircumflex by Ycircumflex.ss01;
	sub ycircumflex by ycircumflex.ss01;
	sub Ydieresis by Ydieresis.ss01;
	sub Zacute by Zacute.ss01;
	sub zacute by zacute.ss01;
	sub Zdotaccent by Zdotaccent.ss01;
	sub zdotaccent by zdotaccent.ss01;
	sub Zcaron by Zcaron.ss01;
	sub zcaron by zcaron.ss01;
	sub uni018F by uni018F.ss01;
	sub Uhorn by Uhorn.ss01;
	sub uni01C4 by uni01C4.ss01;
	sub uni01C5 by uni01C5.ss01;
	sub uni01C6 by uni01C6.ss01;
	sub uni01C7 by uni01C7.ss01;
	sub uni01C9 by uni01C9.ss01;
	sub uni01CA by uni01CA.ss01;
	sub uni01CB by uni01CB.ss01;
	sub uni01CD by uni01CD.ss01;
	sub uni01CE by uni01CE.ss01;
	sub uni01D3 by uni01D3.ss01;
	sub uni01E4 by uni01E4.ss01;
	sub Gcaron by Gcaron.ss01;
	sub Aringacute by Aringacute.ss01;
	sub aringacute by aringacute.ss01;
	sub AEacute by AEacute.ss01;
	sub aeacute by aeacute.ss01;
	sub uni0200 by uni0200.ss01;
	sub uni0201 by uni0201.ss01;
	sub uni0202 by uni0202.ss01;
	sub uni0203 by uni0203.ss01;
	sub uni0204 by uni0204.ss01;
	sub uni0205 by uni0205.ss01;
	sub uni0206 by uni0206.ss01;
	sub uni0207 by uni0207.ss01;
	sub uni0208 by uni0208.ss01;
	sub uni020A by uni020A.ss01;
	sub uni0214 by uni0214.ss01;
	sub uni0216 by uni0216.ss01;
	sub uni021A by uni021A.ss01;
	sub uni021B by uni021B.ss01;
	sub uni0232 by uni0232.ss01;
	sub uni0233 by uni0233.ss01;
	sub uni0259 by uni0259.ss01;
	sub uni0400 by uni0400.ss01;
	sub uni0401 by uni0401.ss01;
	sub uni0408 by uni0408.ss01;
	sub uni0409 by uni0409.ss01;
	sub uni040A by uni040A.ss01;
	sub uni040D by uni040D.ss01;
	sub uni040E by uni040E.ss01;
	sub uni0410 by uni0410.ss01;
	sub uni0414 by uni0414.ss01;
	sub uni0415 by uni0415.ss01;
	sub uni0418 by uni0418.ss01;
	sub uni0419 by uni0419.ss01;
	sub uni041B by uni041B.ss01;
	sub uni0420 by uni0420.ss01;
	sub uni0422 by uni0422.ss01;
	sub uni0423 by uni0423.ss01;
	sub uni0424 by uni0424.ss01;
	sub uni042A by uni042A.ss01;
	sub uni042B by uni042B.ss01;
	sub uni042C by uni042C.ss01;
	sub uni0430 by uni0430.ss01;
	sub uni0434 by uni0434.ss01;
	sub uni0435 by uni0435.ss01;
	sub uni0438 by uni0438.ss01;
	sub uni0439 by uni0439.ss01;
	sub uni0440 by uni0440.ss01;
	sub uni0442 by uni0442.ss01;
	sub uni0443 by uni0443.ss01;
	sub uni044A by uni044A.ss01;
	sub uni044B by uni044B.ss01;
	sub uni044C by uni044C.ss01;
	sub uni0450 by uni0450.ss01;
	sub uni0451 by uni0451.ss01;
	sub uni0459 by uni0459.ss01;
	sub uni045A by uni045A.ss01;
	sub uni045D by uni045D.ss01;
	sub uni045E by uni045E.ss01;
	sub uni0462 by uni0462.ss01;
	sub uni0463 by uni0463.ss01;
	sub uni048A by uni048A.ss01;
	sub uni048B by uni048B.ss01;
	sub uni048C by uni048C.ss01;
	sub uni048D by uni048D.ss01;
	sub uni04AC by uni04AC.ss01;
	sub uni04D0 by uni04D0.ss01;
	sub uni04D1 by uni04D1.ss01;
	sub uni04D2 by uni04D2.ss01;
	sub uni04D3 by uni04D3.ss01;
	sub uni04D4 by uni04D4.ss01;
	sub uni04D5 by uni04D5.ss01;
	sub uni04D6 by uni04D6.ss01;
	sub uni04D7 by uni04D7.ss01;
	sub uni04D9 by uni04D9.ss01;
	sub uni04DB by uni04DB.ss01;
	sub uni04E2 by uni04E2.ss01;
	sub uni04E3 by uni04E3.ss01;
	sub uni04E4 by uni04E4.ss01;
	sub uni04E5 by uni04E5.ss01;
	sub uni04EE by uni04EE.ss01;
	sub uni04EF by uni04EF.ss01;
	sub uni04F0 by uni04F0.ss01;
	sub uni04F1 by uni04F1.ss01;
	sub uni04F2 by uni04F2.ss01;
	sub uni04F3 by uni04F3.ss01;
	sub uni04F8 by uni04F8.ss01;
	sub uni04F9 by uni04F9.ss01;
	sub uni051A by uni051A.ss01;
	sub uni1E14 by uni1E14.ss01;
	sub uni1E15 by uni1E15.ss01;
	sub uni1E16 by uni1E16.ss01;
	sub uni1E17 by uni1E17.ss01;
	sub uni1E1C by uni1E1C.ss01;
	sub uni1E1D by uni1E1D.ss01;
	sub uni1E20 by uni1E20.ss01;
	sub uni1E2E by uni1E2E.ss01;
	sub uni1E37 by uni1E37.ss01;
	sub uni1E3B by uni1E3B.ss01;
	sub uni1E42 by uni1E42.ss01;
	sub uni1E44 by uni1E44.ss01;
	sub uni1E46 by uni1E46.ss01;
	sub uni1E48 by uni1E48.ss01;
	sub uni1E6C by uni1E6C.ss01;
	sub uni1E6D by uni1E6D.ss01;
	sub uni1E6E by uni1E6E.ss01;
	sub uni1E6F by uni1E6F.ss01;
	sub uni1E78 by uni1E78.ss01;
	sub uni1E7A by uni1E7A.ss01;
	sub Wgrave by Wgrave.ss01;
	sub wgrave by wgrave.ss01;
	sub Wacute by Wacute.ss01;
	sub wacute by wacute.ss01;
	sub Wdieresis by Wdieresis.ss01;
	sub wdieresis by wdieresis.ss01;
	sub uni1E8E by uni1E8E.ss01;
	sub uni1E92 by uni1E92.ss01;
	sub uni1E93 by uni1E93.ss01;
	sub uni1E97 by uni1E97.ss01;
	sub uni1EA0 by uni1EA0.ss01;
	sub uni1EA1 by uni1EA1.ss01;
	sub uni1EA2 by uni1EA2.ss01;
	sub uni1EA3 by uni1EA3.ss01;
	sub uni1EA4 by uni1EA4.ss01;
	sub uni1EA5 by uni1EA5.ss01;
	sub uni1EA6 by uni1EA6.ss01;
	sub uni1EA7 by uni1EA7.ss01;
	sub uni1EA8 by uni1EA8.ss01;
	sub uni1EA9 by uni1EA9.ss01;
	sub uni1EAA by uni1EAA.ss01;
	sub uni1EAB by uni1EAB.ss01;
	sub uni1EAC by uni1EAC.ss01;
	sub uni1EAD by uni1EAD.ss01;
	sub uni1EAE by uni1EAE.ss01;
	sub uni1EAF by uni1EAF.ss01;
	sub uni1EB0 by uni1EB0.ss01;
	sub uni1EB1 by uni1EB1.ss01;
	sub uni1EB2 by uni1EB2.ss01;
	sub uni1EB3 by uni1EB3.ss01;
	sub uni1EB4 by uni1EB4.ss01;
	sub uni1EB5 by uni1EB5.ss01;
	sub uni1EB6 by uni1EB6.ss01;
	sub uni1EB7 by uni1EB7.ss01;
	sub uni1EB8 by uni1EB8.ss01;
	sub uni1EB9 by uni1EB9.ss01;
	sub uni1EBA by uni1EBA.ss01;
	sub uni1EBB by uni1EBB.ss01;
	sub uni1EBC by uni1EBC.ss01;
	sub uni1EBD by uni1EBD.ss01;
	sub uni1EBE by uni1EBE.ss01;
	sub uni1EBF by uni1EBF.ss01;
	sub uni1EC0 by uni1EC0.ss01;
	sub uni1EC1 by uni1EC1.ss01;
	sub uni1EC2 by uni1EC2.ss01;
	sub uni1EC3 by uni1EC3.ss01;
	sub uni1EC4 by uni1EC4.ss01;
	sub uni1EC5 by uni1EC5.ss01;
	sub uni1EC6 by uni1EC6.ss01;
	sub uni1EC7 by uni1EC7.ss01;
	sub uni1EC8 by uni1EC8.ss01;
	sub uni1ECA by uni1ECA.ss01;
	sub uni1EE4 by uni1EE4.ss01;
	sub uni1EE6 by uni1EE6.ss01;
	sub uni1EE8 by uni1EE8.ss01;
	sub uni1EEA by uni1EEA.ss01;
	sub uni1EEC by uni1EEC.ss01;
	sub uni1EEE by uni1EEE.ss01;
	sub uni1EF0 by uni1EF0.ss01;
	sub Ygrave by Ygrave.ss01;
	sub ygrave by ygrave.ss01;
	sub uni1EF4 by uni1EF4.ss01;
	sub uni1EF5 by uni1EF5.ss01;
	sub uni1EF6 by uni1EF6.ss01;
	sub uni1EF7 by uni1EF7.ss01;
	sub uni1EF8 by uni1EF8.ss01;
	sub uni1EF9 by uni1EF9.ss01;
	sub uni2116 by uni2116.ss01;
	sub fi by fi.ss01;
	sub fl by fl.ss01;
	sub Iacute_J.loclNLD by Iacute_J.loclNLD.ss01;
	sub a.sc by a.sc.ss01;
	sub aacute.sc by aacute.sc.ss01;
	sub abreve.sc by abreve.sc.ss01;
	sub uni1EAF.sc by uni1EAF.sc.ss01;
	sub uni1EB7.sc by uni1EB7.sc.ss01;
	sub uni1EB1.sc by uni1EB1.sc.ss01;
	sub uni1EB3.sc by uni1EB3.sc.ss01;
	sub uni1EB5.sc by uni1EB5.sc.ss01;
	sub uni01CE.sc by uni01CE.sc.ss01;
	sub acircumflex.sc by acircumflex.sc.ss01;
	sub uni1EA5.sc by uni1EA5.sc.ss01;
	sub uni1EAD.sc by uni1EAD.sc.ss01;
	sub uni1EA7.sc by uni1EA7.sc.ss01;
	sub uni1EA9.sc by uni1EA9.sc.ss01;
	sub uni1EAB.sc by uni1EAB.sc.ss01;
	sub uni0201.sc by uni0201.sc.ss01;
	sub adieresis.sc by adieresis.sc.ss01;
	sub uni1EA1.sc by uni1EA1.sc.ss01;
	sub agrave.sc by agrave.sc.ss01;
	sub uni1EA3.sc by uni1EA3.sc.ss01;
	sub uni0203.sc by uni0203.sc.ss01;
	sub amacron.sc by amacron.sc.ss01;
	sub aogonek.sc by aogonek.sc.ss01;
	sub aring.sc by aring.sc.ss01;
	sub aringacute.sc by aringacute.sc.ss01;
	sub atilde.sc by atilde.sc.ss01;
	sub ae.sc by ae.sc.ss01;
	sub aeacute.sc by aeacute.sc.ss01;
	sub uni01C6.sc by uni01C6.sc.ss01;
	sub e.sc by e.sc.ss01;
	sub eacute.sc by eacute.sc.ss01;
	sub ebreve.sc by ebreve.sc.ss01;
	sub ecaron.sc by ecaron.sc.ss01;
	sub uni1E1D.sc by uni1E1D.sc.ss01;
	sub ecircumflex.sc by ecircumflex.sc.ss01;
	sub uni1EBF.sc by uni1EBF.sc.ss01;
	sub uni1EC7.sc by uni1EC7.sc.ss01;
	sub uni1EC1.sc by uni1EC1.sc.ss01;
	sub uni1EC3.sc by uni1EC3.sc.ss01;
	sub uni1EC5.sc by uni1EC5.sc.ss01;
	sub uni0205.sc by uni0205.sc.ss01;
	sub edieresis.sc by edieresis.sc.ss01;
	sub edotaccent.sc by edotaccent.sc.ss01;
	sub uni1EB9.sc by uni1EB9.sc.ss01;
	sub egrave.sc by egrave.sc.ss01;
	sub uni1EBB.sc by uni1EBB.sc.ss01;
	sub uni0207.sc by uni0207.sc.ss01;
	sub emacron.sc by emacron.sc.ss01;
	sub uni1E17.sc by uni1E17.sc.ss01;
	sub uni1E15.sc by uni1E15.sc.ss01;
	sub eogonek.sc by eogonek.sc.ss01;
	sub uni1EBD.sc by uni1EBD.sc.ss01;
	sub uni0259.sc by uni0259.sc.ss01;
	sub f.sc by f.sc.ss01;
	sub g.sc by g.sc.ss01;
	sub gbreve.sc by gbreve.sc.ss01;
	sub gcaron.sc by gcaron.sc.ss01;
	sub gcircumflex.sc by gcircumflex.sc.ss01;
	sub gcommaaccent.sc by gcommaaccent.sc.ss01;
	sub gdotaccent.sc by gdotaccent.sc.ss01;
	sub uni1E21.sc by uni1E21.sc.ss01;
	sub uni01E5.sc by uni01E5.sc.ss01;
	sub i.sc by i.sc.ss01;
	sub dotlessi.sc by dotlessi.sc.ss01;
	sub iacute.sc by iacute.sc.ss01;
	sub iacute_j.loclNLD.sc by iacute_j.loclNLD.sc.ss01;
	sub ibreve.sc by ibreve.sc.ss01;
	sub icircumflex.sc by icircumflex.sc.ss01;
	sub uni0209.sc by uni0209.sc.ss01;
	sub idieresis.sc by idieresis.sc.ss01;
	sub uni1E2F.sc by uni1E2F.sc.ss01;
	sub uni1ECB.sc by uni1ECB.sc.ss01;
	sub igrave.sc by igrave.sc.ss01;
	sub uni1EC9.sc by uni1EC9.sc.ss01;
	sub uni020B.sc by uni020B.sc.ss01;
	sub ij.sc by ij.sc.ss01;
	sub imacron.sc by imacron.sc.ss01;
	sub iogonek.sc by iogonek.sc.ss01;
	sub itilde.sc by itilde.sc.ss01;
	sub j.sc by j.sc.ss01;
	sub jcircumflex.sc by jcircumflex.sc.ss01;
	sub uni01C9.sc by uni01C9.sc.ss01;
	sub m.sc by m.sc.ss01;
	sub uni1E43.sc by uni1E43.sc.ss01;
	sub n.sc by n.sc.ss01;
	sub nacute.sc by nacute.sc.ss01;
	sub ncaron.sc by ncaron.sc.ss01;
	sub ncommaaccent.sc by ncommaaccent.sc.ss01;
	sub uni1E45.sc by uni1E45.sc.ss01;
	sub uni1E47.sc by uni1E47.sc.ss01;
	sub eng.sc by eng.sc.ss01;
	sub uni01CC.sc by uni01CC.sc.ss01;
	sub uni1E49.sc by uni1E49.sc.ss01;
	sub ntilde.sc by ntilde.sc.ss01;
	sub q.sc by q.sc.ss01;
	sub t.sc by t.sc.ss01;
	sub tbar.sc by tbar.sc.ss01;
	sub tcaron.sc by tcaron.sc.ss01;
	sub uni0163.sc by uni0163.sc.ss01;
	sub uni021B.sc by uni021B.sc.ss01;
	sub uni1E97.sc by uni1E97.sc.ss01;
	sub uni1E6D.sc by uni1E6D.sc.ss01;
	sub uni1E6F.sc by uni1E6F.sc.ss01;
	sub u.sc by u.sc.ss01;
	sub uacute.sc by uacute.sc.ss01;
	sub ubreve.sc by ubreve.sc.ss01;
	sub uni01D4.sc by uni01D4.sc.ss01;
	sub ucircumflex.sc by ucircumflex.sc.ss01;
	sub uni0215.sc by uni0215.sc.ss01;
	sub udieresis.sc by udieresis.sc.ss01;
	sub uni1EE5.sc by uni1EE5.sc.ss01;
	sub ugrave.sc by ugrave.sc.ss01;
	sub uni1EE7.sc by uni1EE7.sc.ss01;
	sub uhorn.sc by uhorn.sc.ss01;
	sub uni1EE9.sc by uni1EE9.sc.ss01;
	sub uni1EF1.sc by uni1EF1.sc.ss01;
	sub uni1EEB.sc by uni1EEB.sc.ss01;
	sub uni1EED.sc by uni1EED.sc.ss01;
	sub uni1EEF.sc by uni1EEF.sc.ss01;
	sub uhungarumlaut.sc by uhungarumlaut.sc.ss01;
	sub uni0217.sc by uni0217.sc.ss01;
	sub umacron.sc by umacron.sc.ss01;
	sub uni1E7B.sc by uni1E7B.sc.ss01;
	sub uogonek.sc by uogonek.sc.ss01;
	sub uring.sc by uring.sc.ss01;
	sub utilde.sc by utilde.sc.ss01;
	sub uni1E79.sc by uni1E79.sc.ss01;
	sub w.sc by w.sc.ss01;
	sub wacute.sc by wacute.sc.ss01;
	sub wcircumflex.sc by wcircumflex.sc.ss01;
	sub wdieresis.sc by wdieresis.sc.ss01;
	sub wgrave.sc by wgrave.sc.ss01;
	sub y.sc by y.sc.ss01;
	sub yacute.sc by yacute.sc.ss01;
	sub ycircumflex.sc by ycircumflex.sc.ss01;
	sub ydieresis.sc by ydieresis.sc.ss01;
	sub uni1E8F.sc by uni1E8F.sc.ss01;
	sub uni1EF5.sc by uni1EF5.sc.ss01;
	sub ygrave.sc by ygrave.sc.ss01;
	sub uni1EF7.sc by uni1EF7.sc.ss01;
	sub uni0233.sc by uni0233.sc.ss01;
	sub uni1EF9.sc by uni1EF9.sc.ss01;
	sub z.sc by z.sc.ss01;
	sub zacute.sc by zacute.sc.ss01;
	sub zcaron.sc by zcaron.sc.ss01;
	sub zdotaccent.sc by zdotaccent.sc.ss01;
	sub uni1E93.sc by uni1E93.sc.ss01;
} SUB_41;
script cyrl;
language dflt;
lookup SUB_41;
language BGR;
lookup SUB_41;
language MKD;
lookup SUB_41;
language SRB;
lookup SUB_41;
script latn;
language dflt;
lookup SUB_41;
language AZE;
lookup SUB_41;
language CAT;
lookup SUB_41;
language CRT;
lookup SUB_41;
language KAZ;
lookup SUB_41;
language MOL;
lookup SUB_41;
language NLD;
lookup SUB_41;
language ROM;
lookup SUB_41;
language TAT;
lookup SUB_41;
language TRK;
lookup SUB_41;
";
tag = salt;
},
{
code = "script DFLT;
language dflt;
lookup SUB_42 {
	sub A by A.ss01;
	sub E by E.ss01;
	sub F by F.ss01;
	sub G by G.ss01;
	sub I by I.ss01;
	sub J by J.ss01;
	sub M by M.ss01;
	sub N by N.ss01;
	sub Q by Q.ss01;
	sub T by T.ss01;
	sub U by U.ss01;
	sub W by W.ss01;
	sub Y by Y.ss01;
	sub Z by Z.ss01;
	sub a by a.ss01;
	sub e by e.ss01;
	sub f by f.ss01;
	sub l by l.ss01;
	sub t by t.ss01;
	sub w by w.ss01;
	sub y by y.ss01;
	sub z by z.ss01;
	sub Agrave by Agrave.ss01;
	sub Aacute by Aacute.ss01;
	sub Acircumflex by Acircumflex.ss01;
	sub Atilde by Atilde.ss01;
	sub Adieresis by Adieresis.ss01;
	sub Aring by Aring.ss01;
	sub AE by AE.ss01;
	sub Egrave by Egrave.ss01;
	sub Eacute by Eacute.ss01;
	sub Ecircumflex by Ecircumflex.ss01;
	sub Edieresis by Edieresis.ss01;
	sub Igrave by Igrave.ss01;
	sub Iacute by Iacute.ss01;
	sub Icircumflex by Icircumflex.ss01;
	sub Idieresis by Idieresis.ss01;
	sub Ntilde by Ntilde.ss01;
	sub Ugrave by Ugrave.ss01;
	sub Uacute by Uacute.ss01;
	sub Ucircumflex by Ucircumflex.ss01;
	sub Udieresis by Udieresis.ss01;
	sub Yacute by Yacute.ss01;
	sub agrave by agrave.ss01;
	sub aacute by aacute.ss01;
	sub acircumflex by acircumflex.ss01;
	sub atilde by atilde.ss01;
	sub adieresis by adieresis.ss01;
	sub aring by aring.ss01;
	sub ae by ae.ss01;
	sub egrave by egrave.ss01;
	sub eacute by eacute.ss01;
	sub ecircumflex by ecircumflex.ss01;
	sub edieresis by edieresis.ss01;
	sub yacute by yacute.ss01;
	sub ydieresis by ydieresis.ss01;
	sub Amacron by Amacron.ss01;
	sub amacron by amacron.ss01;
	sub Abreve by Abreve.ss01;
	sub abreve by abreve.ss01;
	sub Aogonek by Aogonek.ss01;
	sub aogonek by aogonek.ss01;
	sub Emacron by Emacron.ss01;
	sub emacron by emacron.ss01;
	sub Ebreve by Ebreve.ss01;
	sub ebreve by ebreve.ss01;
	sub Edotaccent by Edotaccent.ss01;
	sub edotaccent by edotaccent.ss01;
	sub Eogonek by Eogonek.ss01;
	sub eogonek by eogonek.ss01;
	sub Ecaron by Ecaron.ss01;
	sub ecaron by ecaron.ss01;
	sub Gcircumflex by Gcircumflex.ss01;
	sub Gbreve by Gbreve.ss01;
	sub Gdotaccent by Gdotaccent.ss01;
	sub Gcommaaccent by Gcommaaccent.ss01;
	sub Itilde by Itilde.ss01;
	sub Imacron by Imacron.ss01;
	sub Ibreve by Ibreve.ss01;
	sub Iogonek by Iogonek.ss01;
	sub Idotaccent by Idotaccent.ss01;
	sub IJ by IJ.ss01;
	sub Jcircumflex by Jcircumflex.ss01;
	sub lacute by lacute.ss01;
	sub lcommaaccent by lcommaaccent.ss01;
	sub lcaron by lcaron.ss01;
	sub ldot by ldot.ss01;
	sub lslash by lslash.ss01;
	sub Nacute by Nacute.ss01;
	sub Ncommaaccent by Ncommaaccent.ss01;
	sub Ncaron by Ncaron.ss01;
	sub Eng by Eng.ss01;
	sub oe by oe.ss01;
	sub uni0162 by uni0162.ss01;
	sub uni0163 by uni0163.ss01;
	sub Tcaron by Tcaron.ss01;
	sub tcaron by tcaron.ss01;
	sub Tbar by Tbar.ss01;
	sub tbar by tbar.ss01;
	sub Utilde by Utilde.ss01;
	sub Umacron by Umacron.ss01;
	sub Ubreve by Ubreve.ss01;
	sub Uring by Uring.ss01;
	sub Uhungarumlaut by Uhungarumlaut.ss01;
	sub Uogonek by Uogonek.ss01;
	sub Wcircumflex by Wcircumflex.ss01;
	sub wcircumflex by wcircumflex.ss01;
	sub Ycircumflex by Ycircumflex.ss01;
	sub ycircumflex by ycircumflex.ss01;
	sub Ydieresis by Ydieresis.ss01;
	sub Zacute by Zacute.ss01;
	sub zacute by zacute.ss01;
	sub Zdotaccent by Zdotaccent.ss01;
	sub zdotaccent by zdotaccent.ss01;
	sub Zcaron by Zcaron.ss01;
	sub zcaron by zcaron.ss01;
	sub uni018F by uni018F.ss01;
	sub Uhorn by Uhorn.ss01;
	sub uni01C4 by uni01C4.ss01;
	sub uni01C5 by uni01C5.ss01;
	sub uni01C6 by uni01C6.ss01;
	sub uni01C7 by uni01C7.ss01;
	sub uni01C9 by uni01C9.ss01;
	sub uni01CA by uni01CA.ss01;
	sub uni01CB by uni01CB.ss01;
	sub uni01CD by uni01CD.ss01;
	sub uni01CE by uni01CE.ss01;
	sub uni01D3 by uni01D3.ss01;
	sub uni01E4 by uni01E4.ss01;
	sub Gcaron by Gcaron.ss01;
	sub Aringacute by Aringacute.ss01;
	sub aringacute by aringacute.ss01;
	sub AEacute by AEacute.ss01;
	sub aeacute by aeacute.ss01;
	sub uni0200 by uni0200.ss01;
	sub uni0201 by uni0201.ss01;
	sub uni0202 by uni0202.ss01;
	sub uni0203 by uni0203.ss01;
	sub uni0204 by uni0204.ss01;
	sub uni0205 by uni0205.ss01;
	sub uni0206 by uni0206.ss01;
	sub uni0207 by uni0207.ss01;
	sub uni0208 by uni0208.ss01;
	sub uni020A by uni020A.ss01;
	sub uni0214 by uni0214.ss01;
	sub uni0216 by uni0216.ss01;
	sub uni021A by uni021A.ss01;
	sub uni021B by uni021B.ss01;
	sub uni0232 by uni0232.ss01;
	sub uni0233 by uni0233.ss01;
	sub uni0259 by uni0259.ss01;
	sub uni0400 by uni0400.ss01;
	sub uni0401 by uni0401.ss01;
	sub uni0408 by uni0408.ss01;
	sub uni0409 by uni0409.ss01;
	sub uni040A by uni040A.ss01;
	sub uni040D by uni040D.ss01;
	sub uni040E by uni040E.ss01;
	sub uni0410 by uni0410.ss01;
	sub uni0414 by uni0414.ss01;
	sub uni0415 by uni0415.ss01;
	sub uni0418 by uni0418.ss01;
	sub uni0419 by uni0419.ss01;
	sub uni041B by uni041B.ss01;
	sub uni0420 by uni0420.ss01;
	sub uni0422 by uni0422.ss01;
	sub uni0423 by uni0423.ss01;
	sub uni0424 by uni0424.ss01;
	sub uni042A by uni042A.ss01;
	sub uni042B by uni042B.ss01;
	sub uni042C by uni042C.ss01;
	sub uni0430 by uni0430.ss01;
	sub uni0434 by uni0434.ss01;
	sub uni0435 by uni0435.ss01;
	sub uni0438 by uni0438.ss01;
	sub uni0439 by uni0439.ss01;
	sub uni0440 by uni0440.ss01;
	sub uni0442 by uni0442.ss01;
	sub uni0443 by uni0443.ss01;
	sub uni044A by uni044A.ss01;
	sub uni044B by uni044B.ss01;
	sub uni044C by uni044C.ss01;
	sub uni0450 by uni0450.ss01;
	sub uni0451 by uni0451.ss01;
	sub uni0459 by uni0459.ss01;
	sub uni045A by uni045A.ss01;
	sub uni045D by uni045D.ss01;
	sub uni045E by uni045E.ss01;
	sub uni0462 by uni0462.ss01;
	sub uni0463 by uni0463.ss01;
	sub uni048A by uni048A.ss01;
	sub uni048B by uni048B.ss01;
	sub uni048C by uni048C.ss01;
	sub uni048D by uni048D.ss01;
	sub uni04AC by uni04AC.ss01;
	sub uni04D0 by uni04D0.ss01;
	sub uni04D1 by uni04D1.ss01;
	sub uni04D2 by uni04D2.ss01;
	sub uni04D3 by uni04D3.ss01;
	sub uni04D4 by uni04D4.ss01;
	sub uni04D5 by uni04D5.ss01;
	sub uni04D6 by uni04D6.ss01;
	sub uni04D7 by uni04D7.ss01;
	sub uni04D9 by uni04D9.ss01;
	sub uni04DB by uni04DB.ss01;
	sub uni04E2 by uni04E2.ss01;
	sub uni04E3 by uni04E3.ss01;
	sub uni04E4 by uni04E4.ss01;
	sub uni04E5 by uni04E5.ss01;
	sub uni04EE by uni04EE.ss01;
	sub uni04EF by uni04EF.ss01;
	sub uni04F0 by uni04F0.ss01;
	sub uni04F1 by uni04F1.ss01;
	sub uni04F2 by uni04F2.ss01;
	sub uni04F3 by uni04F3.ss01;
	sub uni04F8 by uni04F8.ss01;
	sub uni04F9 by uni04F9.ss01;
	sub uni051A by uni051A.ss01;
	sub uni1E14 by uni1E14.ss01;
	sub uni1E15 by uni1E15.ss01;
	sub uni1E16 by uni1E16.ss01;
	sub uni1E17 by uni1E17.ss01;
	sub uni1E1C by uni1E1C.ss01;
	sub uni1E1D by uni1E1D.ss01;
	sub uni1E20 by uni1E20.ss01;
	sub uni1E2E by uni1E2E.ss01;
	sub uni1E37 by uni1E37.ss01;
	sub uni1E3B by uni1E3B.ss01;
	sub uni1E42 by uni1E42.ss01;
	sub uni1E44 by uni1E44.ss01;
	sub uni1E46 by uni1E46.ss01;
	sub uni1E48 by uni1E48.ss01;
	sub uni1E6C by uni1E6C.ss01;
	sub uni1E6D by uni1E6D.ss01;
	sub uni1E6E by uni1E6E.ss01;
	sub uni1E6F by uni1E6F.ss01;
	sub uni1E78 by uni1E78.ss01;
	sub uni1E7A by uni1E7A.ss01;
	sub Wgrave by Wgrave.ss01;
	sub wgrave by wgrave.ss01;
	sub Wacute by Wacute.ss01;
	sub wacute by wacute.ss01;
	sub Wdieresis by Wdieresis.ss01;
	sub wdieresis by wdieresis.ss01;
	sub uni1E8E by uni1E8E.ss01;
	sub uni1E92 by uni1E92.ss01;
	sub uni1E93 by uni1E93.ss01;
	sub uni1E97 by uni1E97.ss01;
	sub uni1EA0 by uni1EA0.ss01;
	sub uni1EA1 by uni1EA1.ss01;
	sub uni1EA2 by uni1EA2.ss01;
	sub uni1EA3 by uni1EA3.ss01;
	sub uni1EA4 by uni1EA4.ss01;
	sub uni1EA5 by uni1EA5.ss01;
	sub uni1EA6 by uni1EA6.ss01;
	sub uni1EA7 by uni1EA7.ss01;
	sub uni1EA8 by uni1EA8.ss01;
	sub uni1EA9 by uni1EA9.ss01;
	sub uni1EAA by uni1EAA.ss01;
	sub uni1EAB by uni1EAB.ss01;
	sub uni1EAC by uni1EAC.ss01;
	sub uni1EAD by uni1EAD.ss01;
	sub uni1EAE by uni1EAE.ss01;
	sub uni1EAF by uni1EAF.ss01;
	sub uni1EB0 by uni1EB0.ss01;
	sub uni1EB1 by uni1EB1.ss01;
	sub uni1EB2 by uni1EB2.ss01;
	sub uni1EB3 by uni1EB3.ss01;
	sub uni1EB4 by uni1EB4.ss01;
	sub uni1EB5 by uni1EB5.ss01;
	sub uni1EB6 by uni1EB6.ss01;
	sub uni1EB7 by uni1EB7.ss01;
	sub uni1EB8 by uni1EB8.ss01;
	sub uni1EB9 by uni1EB9.ss01;
	sub uni1EBA by uni1EBA.ss01;
	sub uni1EBB by uni1EBB.ss01;
	sub uni1EBC by uni1EBC.ss01;
	sub uni1EBD by uni1EBD.ss01;
	sub uni1EBE by uni1EBE.ss01;
	sub uni1EBF by uni1EBF.ss01;
	sub uni1EC0 by uni1EC0.ss01;
	sub uni1EC1 by uni1EC1.ss01;
	sub uni1EC2 by uni1EC2.ss01;
	sub uni1EC3 by uni1EC3.ss01;
	sub uni1EC4 by uni1EC4.ss01;
	sub uni1EC5 by uni1EC5.ss01;
	sub uni1EC6 by uni1EC6.ss01;
	sub uni1EC7 by uni1EC7.ss01;
	sub uni1EC8 by uni1EC8.ss01;
	sub uni1ECA by uni1ECA.ss01;
	sub uni1EE4 by uni1EE4.ss01;
	sub uni1EE6 by uni1EE6.ss01;
	sub uni1EE8 by uni1EE8.ss01;
	sub uni1EEA by uni1EEA.ss01;
	sub uni1EEC by uni1EEC.ss01;
	sub uni1EEE by uni1EEE.ss01;
	sub uni1EF0 by uni1EF0.ss01;
	sub Ygrave by Ygrave.ss01;
	sub ygrave by ygrave.ss01;
	sub uni1EF4 by uni1EF4.ss01;
	sub uni1EF5 by uni1EF5.ss01;
	sub uni1EF6 by uni1EF6.ss01;
	sub uni1EF7 by uni1EF7.ss01;
	sub uni1EF8 by uni1EF8.ss01;
	sub uni1EF9 by uni1EF9.ss01;
	sub uni2116 by uni2116.ss01;
	sub fi by fi.ss01;
	sub fl by fl.ss01;
	sub Iacute_J.loclNLD by Iacute_J.loclNLD.ss01;
	sub a.sc by a.sc.ss01;
	sub aacute.sc by aacute.sc.ss01;
	sub abreve.sc by abreve.sc.ss01;
	sub uni1EAF.sc by uni1EAF.sc.ss01;
	sub uni1EB7.sc by uni1EB7.sc.ss01;
	sub uni1EB1.sc by uni1EB1.sc.ss01;
	sub uni1EB3.sc by uni1EB3.sc.ss01;
	sub uni1EB5.sc by uni1EB5.sc.ss01;
	sub uni01CE.sc by uni01CE.sc.ss01;
	sub acircumflex.sc by acircumflex.sc.ss01;
	sub uni1EA5.sc by uni1EA5.sc.ss01;
	sub uni1EAD.sc by uni1EAD.sc.ss01;
	sub uni1EA7.sc by uni1EA7.sc.ss01;
	sub uni1EA9.sc by uni1EA9.sc.ss01;
	sub uni1EAB.sc by uni1EAB.sc.ss01;
	sub uni0201.sc by uni0201.sc.ss01;
	sub adieresis.sc by adieresis.sc.ss01;
	sub uni1EA1.sc by uni1EA1.sc.ss01;
	sub agrave.sc by agrave.sc.ss01;
	sub uni1EA3.sc by uni1EA3.sc.ss01;
	sub uni0203.sc by uni0203.sc.ss01;
	sub amacron.sc by amacron.sc.ss01;
	sub aogonek.sc by aogonek.sc.ss01;
	sub aring.sc by aring.sc.ss01;
	sub aringacute.sc by aringacute.sc.ss01;
	sub atilde.sc by atilde.sc.ss01;
	sub ae.sc by ae.sc.ss01;
	sub aeacute.sc by aeacute.sc.ss01;
	sub uni01C6.sc by uni01C6.sc.ss01;
	sub e.sc by e.sc.ss01;
	sub eacute.sc by eacute.sc.ss01;
	sub ebreve.sc by ebreve.sc.ss01;
	sub ecaron.sc by ecaron.sc.ss01;
	sub uni1E1D.sc by uni1E1D.sc.ss01;
	sub ecircumflex.sc by ecircumflex.sc.ss01;
	sub uni1EBF.sc by uni1EBF.sc.ss01;
	sub uni1EC7.sc by uni1EC7.sc.ss01;
	sub uni1EC1.sc by uni1EC1.sc.ss01;
	sub uni1EC3.sc by uni1EC3.sc.ss01;
	sub uni1EC5.sc by uni1EC5.sc.ss01;
	sub uni0205.sc by uni0205.sc.ss01;
	sub edieresis.sc by edieresis.sc.ss01;
	sub edotaccent.sc by edotaccent.sc.ss01;
	sub uni1EB9.sc by uni1EB9.sc.ss01;
	sub egrave.sc by egrave.sc.ss01;
	sub uni1EBB.sc by uni1EBB.sc.ss01;
	sub uni0207.sc by uni0207.sc.ss01;
	sub emacron.sc by emacron.sc.ss01;
	sub uni1E17.sc by uni1E17.sc.ss01;
	sub uni1E15.sc by uni1E15.sc.ss01;
	sub eogonek.sc by eogonek.sc.ss01;
	sub uni1EBD.sc by uni1EBD.sc.ss01;
	sub uni0259.sc by uni0259.sc.ss01;
	sub f.sc by f.sc.ss01;
	sub g.sc by g.sc.ss01;
	sub gbreve.sc by gbreve.sc.ss01;
	sub gcaron.sc by gcaron.sc.ss01;
	sub gcircumflex.sc by gcircumflex.sc.ss01;
	sub gcommaaccent.sc by gcommaaccent.sc.ss01;
	sub gdotaccent.sc by gdotaccent.sc.ss01;
	sub uni1E21.sc by uni1E21.sc.ss01;
	sub uni01E5.sc by uni01E5.sc.ss01;
	sub i.sc by i.sc.ss01;
	sub dotlessi.sc by dotlessi.sc.ss01;
	sub iacute.sc by iacute.sc.ss01;
	sub iacute_j.loclNLD.sc by iacute_j.loclNLD.sc.ss01;
	sub ibreve.sc by ibreve.sc.ss01;
	sub icircumflex.sc by icircumflex.sc.ss01;
	sub uni0209.sc by uni0209.sc.ss01;
	sub idieresis.sc by idieresis.sc.ss01;
	sub uni1E2F.sc by uni1E2F.sc.ss01;
	sub uni1ECB.sc by uni1ECB.sc.ss01;
	sub igrave.sc by igrave.sc.ss01;
	sub uni1EC9.sc by uni1EC9.sc.ss01;
	sub uni020B.sc by uni020B.sc.ss01;
	sub ij.sc by ij.sc.ss01;
	sub imacron.sc by imacron.sc.ss01;
	sub iogonek.sc by iogonek.sc.ss01;
	sub itilde.sc by itilde.sc.ss01;
	sub j.sc by j.sc.ss01;
	sub jcircumflex.sc by jcircumflex.sc.ss01;
	sub uni01C9.sc by uni01C9.sc.ss01;
	sub m.sc by m.sc.ss01;
	sub uni1E43.sc by uni1E43.sc.ss01;
	sub n.sc by n.sc.ss01;
	sub nacute.sc by nacute.sc.ss01;
	sub ncaron.sc by ncaron.sc.ss01;
	sub ncommaaccent.sc by ncommaaccent.sc.ss01;
	sub uni1E45.sc by uni1E45.sc.ss01;
	sub uni1E47.sc by uni1E47.sc.ss01;
	sub eng.sc by eng.sc.ss01;
	sub uni01CC.sc by uni01CC.sc.ss01;
	sub uni1E49.sc by uni1E49.sc.ss01;
	sub ntilde.sc by ntilde.sc.ss01;
	sub q.sc by q.sc.ss01;
	sub t.sc by t.sc.ss01;
	sub tbar.sc by tbar.sc.ss01;
	sub tcaron.sc by tcaron.sc.ss01;
	sub uni0163.sc by uni0163.sc.ss01;
	sub uni021B.sc by uni021B.sc.ss01;
	sub uni1E97.sc by uni1E97.sc.ss01;
	sub uni1E6D.sc by uni1E6D.sc.ss01;
	sub uni1E6F.sc by uni1E6F.sc.ss01;
	sub u.sc by u.sc.ss01;
	sub uacute.sc by uacute.sc.ss01;
	sub ubreve.sc by ubreve.sc.ss01;
	sub uni01D4.sc by uni01D4.sc.ss01;
	sub ucircumflex.sc by ucircumflex.sc.ss01;
	sub uni0215.sc by uni0215.sc.ss01;
	sub udieresis.sc by udieresis.sc.ss01;
	sub uni1EE5.sc by uni1EE5.sc.ss01;
	sub ugrave.sc by ugrave.sc.ss01;
	sub uni1EE7.sc by uni1EE7.sc.ss01;
	sub uhorn.sc by uhorn.sc.ss01;
	sub uni1EE9.sc by uni1EE9.sc.ss01;
	sub uni1EF1.sc by uni1EF1.sc.ss01;
	sub uni1EEB.sc by uni1EEB.sc.ss01;
	sub uni1EED.sc by uni1EED.sc.ss01;
	sub uni1EEF.sc by uni1EEF.sc.ss01;
	sub uhungarumlaut.sc by uhungarumlaut.sc.ss01;
	sub uni0217.sc by uni0217.sc.ss01;
	sub umacron.sc by umacron.sc.ss01;
	sub uni1E7B.sc by uni1E7B.sc.ss01;
	sub uogonek.sc by uogonek.sc.ss01;
	sub uring.sc by uring.sc.ss01;
	sub utilde.sc by utilde.sc.ss01;
	sub uni1E79.sc by uni1E79.sc.ss01;
	sub w.sc by w.sc.ss01;
	sub wacute.sc by wacute.sc.ss01;
	sub wcircumflex.sc by wcircumflex.sc.ss01;
	sub wdieresis.sc by wdieresis.sc.ss01;
	sub wgrave.sc by wgrave.sc.ss01;
	sub y.sc by y.sc.ss01;
	sub yacute.sc by yacute.sc.ss01;
	sub ycircumflex.sc by ycircumflex.sc.ss01;
	sub ydieresis.sc by ydieresis.sc.ss01;
	sub uni1E8F.sc by uni1E8F.sc.ss01;
	sub uni1EF5.sc by uni1EF5.sc.ss01;
	sub ygrave.sc by ygrave.sc.ss01;
	sub uni1EF7.sc by uni1EF7.sc.ss01;
	sub uni0233.sc by uni0233.sc.ss01;
	sub uni1EF9.sc by uni1EF9.sc.ss01;
	sub z.sc by z.sc.ss01;
	sub zacute.sc by zacute.sc.ss01;
	sub zcaron.sc by zcaron.sc.ss01;
	sub zdotaccent.sc by zdotaccent.sc.ss01;
	sub uni1E93.sc by uni1E93.sc.ss01;
} SUB_42;
script cyrl;
language dflt;
lookup SUB_42;
language BGR;
lookup SUB_42;
language MKD;
lookup SUB_42;
language SRB;
lookup SUB_42;
script latn;
language dflt;
lookup SUB_42;
language AZE;
lookup SUB_42;
language CAT;
lookup SUB_42;
language CRT;
lookup SUB_42;
language KAZ;
lookup SUB_42;
language MOL;
lookup SUB_42;
language NLD;
lookup SUB_42;
language ROM;
lookup SUB_42;
language TAT;
lookup SUB_42;
language TRK;
lookup SUB_42;
";
tag = ss01;
}
);
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 968;
},
{
name = typoDescender;
value = -251;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1109;
},
{
name = winDescent;
value = 270;
},
{
name = hheaAscender;
value = 968;
},
{
name = hheaDescender;
value = -251;
},
{
name = strikeoutPosition;
value = 315;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 9 values pushed */\0120 107 91 75 59 0 39 7 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 16 values pushed */\012112 2 96 8 80 8 64 8 52 6 44 4 30 7 7 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 16 values pushed */\012114 0 104 6 88 6 72 6 58 4 48 2 37 5 7 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 14 \012WS[ ]	/* WriteStore */\012NPUSHW[ ]	/* 9 values pushed */\0127232 6208 5184 4160 3392 2880 1984 7 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012WS[ ]	/* WriteStore */\012NPUSHW[ ]	/* 9 values pushed */\01264 64 64 64 64 64 64 7 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01238 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 16 values pushed */\012114 0 98 6 82 6 66 6 54 4 46 2 32 5 7 12 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 11 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 11 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 11 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0125 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 11 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 11 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0127 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0123 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0127 12 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01211 10 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 16 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01216 16 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01213 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01214 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01218 18 1 0 15 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012137 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01218 18 1 0 15 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012137 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01218 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01244 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01245 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01212 13 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01250 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01254 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01210 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01210 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01210 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 56 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 57 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01275 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 58 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 59 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0129 4 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    72,\012    72,\012    62,\012    62,\012    700,\012    0,\012    526,\012    0,\012    \"-194\",\012    706,\012    \"-6\",\012    530,\012    \"-5\",\012    \"-199\",\012    72,\012    72,\012    62,\012    62,\012    565,\012    0,\012    572,\012    \"-6\",\012    72,\012    72,\012    62,\012    62,\012    565,\012    565,\012    0,\012    0,\012    565,\012    572,\012    \"-6\",\012    \"-6\",\012    72,\012    72,\012    62,\012    62,\012    700,\012    0,\012    742,\012    526,\012    0,\012    \"-194\",\012    706,\012    \"-6\",\012    743,\012    530,\012    \"-5\",\012    \"-199\",\012    72,\012    72,\012    62,\012    62,\012    315,\012    \"-100\",\012    742,\012    526,\012    0,\012    \"-194\",\012    319,\012    \"-104\",\012    743,\012    530,\012    \"-5\",\012    \"-194\",\012    72,\012    72,\012    62,\012    62,\012    742,\012    327,\012    742,\012    526,\012    0,\012    \"-194\",\012    746,\012    323,\012    743,\012    530,\012    \"-5\",\012    \"-199\",\012    24,\012    24,\012    24,\012    24\012)";
}
);
id = m01;
metricValues = (
{
pos = 968;
},
{
pos = 700;
},
{
pos = 525;
},
{
},
{
pos = -251;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547,0,l),
(547,700,l),
(40,700,l),
(40,0,l)
);
},
{
closed = 1;
nodes = (
(120,630,l),
(467,630,l),
(467,70,l),
(120,70,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 2 3 0 2 101 4 1 3 1 1 3 85 4 1 3 3 1 93 0 1 3 1 77 4 4 4 7 4 7 18 17 16 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 587;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = m01;
width = 0;
}
);
note = .null;
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 262;
}
);
note = CR;
},
{
glyphname = NULL;
layers = (
{
layerId = m01;
width = 0;
}
);
note = NULL;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 262;
}
);
note = space;
unicode = 32;
},
{
glyphname = exclam;
kernLeft = exclam;
kernRight = exclam;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,210,l),
(172,700,l),
(88,700,l),
(102,210,l)
);
},
{
closed = 1;
nodes = (
(152,-5,o),
(182,26,o),
(182,47,qs),
(182,69,o),
(152,98,o),
(130,98,qs),
(107,98,o),
(77,69,o),
(77,47,qs),
(77,26,o),
(108,-5,o),
(130,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 93 0 0 0 66 75 0 2 2 3 95 4 1 3 3 76 3 76 4 4 4 15 4 14 37 17 16 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
kernLeft = quotedbl;
kernRight = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
ref = quotesingle;
},
{
pos = (171,0);
ref = quotesingle;
}
);
width = 373;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,510,l),
(525,510,l),
(548,700,l),
(494,700,l),
(471,510,l),
(265,510,l),
(289,700,l),
(234,700,l),
(211,510,l),
(61,510,l),
(61,455,l),
(204,455,l),
(178,245,l),
(29,245,l),
(29,190,l),
(171,190,l),
(148,0,l),
(202,0,l),
(226,190,l),
(431,190,l),
(408,0,l),
(462,0,l),
(485,190,l),
(634,190,l),
(634,245,l),
(492,245,l),
(518,455,l),
(666,455,l)
);
},
{
closed = 1;
nodes = (
(232,245,l),
(259,455,l),
(464,455,l),
(438,245,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
15 6 2 0 5 3 2 1 2 0 1 101 11 1 9 9 66 75 14 16 13 3 7 7 8 93 12 10 2 8 8 69 75 4 1 2 2 67 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
12 10 2 8 14 16 13 3 7 0 8 7 102 15 6 2 0 5 3 2 1 2 0 1 101 11 1 9 9 66 75 4 1 2 2 67 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
0 0 31 30 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 17 10 29 
CALL[ ]	/* CallFunction */";
};
width = 696;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(568,247,o),
(504,323,o),
(410,360,o),
(336,378,q),
(336,643,l),
(381,641,o),
(473,611,o),
(514,585,q),
(539,644,l),
(500,671,o),
(393,704,o),
(336,706,q),
(336,820,l),
(286,820,l),
(286,705,l),
(176,696,o),
(64,591,o),
(64,514,qs),
(64,452,o),
(125,377,o),
(217,338,o),
(286,321,q),
(286,58,l),
(224,62,o),
(111,108,o),
(76,142,q),
(47,85,l),
(84,47,o),
(213,-2,o),
(286,-6,q),
(286,-120,l),
(336,-120,l),
(336,-5,l),
(450,1,o),
(568,108,o),
(568,185,qs)
);
},
{
closed = 1;
nodes = (
(137,566,o),
(212,635,o),
(286,641,q),
(286,391,l),
(214,410,o),
(137,464,o),
(137,516,qs)
);
},
{
closed = 1;
nodes = (
(336,308,l),
(413,289,o),
(495,235,o),
(495,181,qs),
(495,130,o),
(415,64,o),
(336,58,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
26 1 6 5 48 39 38 31 27 13 9 8 8 3 6 49 1 0 3 3 74 20 1 5 1 73 0 4 5 4 131 0 1 0 1 132 0 6 6 5 95 0 5 5 72 75 0 3 3 0 95 2 1 0 0 67 0 76 21 17 25 21 17 17 17 7 10 27 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
kernLeft = percent;
kernRight = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,325,o),
(358,429,o),
(358,515,qs),
(358,601,o),
(270,705,o),
(200,705,qs),
(129,705,o),
(42,600,o),
(42,515,qs),
(42,430,o),
(129,325,o),
(200,325,qs)
);
},
{
closed = 1;
nodes = (
(205,0,l),
(683,700,l),
(624,700,l),
(146,0,l)
);
},
{
closed = 1;
nodes = (
(150,370,o),
(92,448,o),
(92,515,qs),
(92,582,o),
(150,660,o),
(200,660,qs),
(249,660,o),
(308,583,o),
(308,515,qs),
(308,447,o),
(249,370,o),
(200,370,qs)
);
},
{
closed = 1;
nodes = (
(700,-5,o),
(787,100,o),
(787,185,qs),
(787,270,o),
(700,375,o),
(629,375,qs),
(559,375,o),
(471,270,o),
(471,185,qs),
(471,100,o),
(559,-5,o),
(629,-5,qs)
);
},
{
closed = 1;
nodes = (
(580,40,o),
(521,117,o),
(521,185,qs),
(521,253,o),
(580,330,o),
(629,330,qs),
(679,330,o),
(737,252,o),
(737,185,qs),
(737,118,o),
(679,40,o),
(629,40,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
6 11 2 5 8 10 2 1 9 5 1 104 0 4 4 0 95 2 1 0 0 72 75 13 1 9 9 3 95 12 7 2 3 3 67 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 6 0 8 1 6 8 104 11 1 5 10 1 1 9 5 1 103 0 2 2 66 75 0 4 4 0 95 0 0 0 72 75 0 3 3 67 75 13 1 9 9 7 95 12 1 7 7 76 7 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
40 40 28 28 16 16 0 0 40 51 40 50 46 44 28 39 28 38 34 32 16 27 16 26 22 20 15 14 13 12 0 11 0 10 36 14 10 21 
CALL[ ]	/* CallFunction */";
};
width = 829;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
kernLeft = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(556,139,l),
(599,206,o),
(618,300,q),
(560,318,l),
(545,240,o),
(513,183,q),
(321,381,l),
(407,431,o),
(477,514,o),
(477,566,qs),
(477,631,o),
(389,705,o),
(314,705,qs),
(233,705,o),
(137,623,o),
(137,556,qs),
(137,515,o),
(175,442,o),
(225,390,q),
(129,335,o),
(49,235,o),
(49,172,qs),
(49,120,o),
(109,39,o),
(216,-6,o),
(284,-6,qs),
(429,-6,o),
(518,89,q),
(615,-11,l),
(656,36,l)
);
},
{
closed = 1;
nodes = (
(362,652,o),
(416,605,o),
(416,565,qs),
(416,528,o),
(358,466,o),
(282,422,q),
(235,470,o),
(203,526,o),
(203,557,qs),
(203,600,o),
(262,652,o),
(314,652,qs)
);
},
{
closed = 1;
nodes = (
(212,53,o),
(119,122,o),
(119,179,qs),
(119,226,o),
(182,302,o),
(265,349,q),
(476,132,l),
(404,53,o),
(288,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
44 43 35 28 26 25 23 22 10 1 10 3 2 29 1 0 3 2 74 4 1 2 2 1 95 0 1 1 72 75 5 1 3 3 0 95 0 0 0 73 0 76 42 42 30 30 42 50 42 49 30 41 30 40 43 34 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
kernLeft = quotedbl;
kernRight = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,436,l),
(132,700,l),
(69,700,l),
(74,436,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 93 0 0 0 66 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
kernLeft = parenleft;
kernRight = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,-194,l),
(229,-93,o),
(174,139,o),
(174,274,qs),
(174,409,o),
(229,641,o),
(288,742,q),
(220,742,l),
(164,652,o),
(104,411,o),
(104,274,qs),
(104,137,o),
(164,-102,o),
(220,-194,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 68 75 0 1 1 71 1 76 22 21 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
kernLeft = parenright;
kernRight = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,-103,o),
(225,137,o),
(225,274,qs),
(225,411,o),
(164,652,o),
(108,742,q),
(40,742,l),
(99,641,o),
(155,410,o),
(155,274,qs),
(155,138,o),
(99,-93,o),
(40,-194,q),
(108,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 68 75 2 1 1 1 71 1 76 0 0 0 13 0 13 22 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
kernLeft = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,674,l),
(216,600,l),
(216,742,l),
(170,742,l),
(171,600,l),
(46,674,l),
(22,631,l),
(147,561,l),
(22,491,l),
(46,449,l),
(171,522,l),
(170,380,l),
(216,380,l),
(216,522,l),
(341,449,l),
(364,491,l),
(240,561,l),
(364,631,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
17 16 15 12 11 10 9 8 7 6 3 2 1 13 0 1 1 74 0 0 0 1 93 0 1 1 68 0 76 24 20 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 386;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,379,l),
(319,562,l),
(256,562,l),
(256,379,l),
(70,379,l),
(70,320,l),
(256,320,l),
(256,138,l),
(319,138,l),
(319,320,l),
(505,320,l),
(505,379,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 4 3 1 4 85 5 1 3 2 1 0 1 3 0 101 0 4 4 1 93 0 1 4 1 77 17 17 17 17 17 16 6 10 26 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,104,o),
(54,73,o),
(54,50,qs),
(54,31,o),
(74,4,o),
(90,-1,q),
(56,-146,l),
(104,-146,l),
(146,-8,l),
(153,10,o),
(160,38,o),
(160,50,qs),
(160,73,o),
(130,104,o),
(107,104,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
8 1 0 1 1 74 2 1 1 0 0 1 87 2 1 1 1 0 93 0 0 1 0 77 0 0 0 14 0 13 22 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(322,240,l),
(322,302,l),
(60,302,l),
(60,240,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 382;
}
);
note = hyphen;
unicode = 45;
},
{
glyphname = period;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(128,-5,o),
(160,27,o),
(160,50,qs),
(160,73,o),
(128,104,o),
(106,104,qs),
(84,104,o),
(53,73,o),
(53,50,qs),
(53,27,o),
(84,-5,o),
(106,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 2 1 1 1 76 1 76 0 0 0 11 0 10 36 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
kernLeft = slash;
kernRight = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,-100,l),
(370,842,l),
(305,842,l),
(-25,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
kernLeft = zero;
kernRight = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,-6,o),
(539,80,o),
(611,241,o),
(611,350,qs),
(611,459,o),
(539,620,o),
(412,706,o),
(331,706,qs),
(250,706,o),
(123,620,o),
(52,459,o),
(52,350,qs),
(52,241,o),
(123,80,o),
(250,-6,o),
(331,-6,qs)
);
},
{
closed = 1;
nodes = (
(270,60,o),
(177,128,o),
(125,258,o),
(125,350,qs),
(125,442,o),
(177,572,o),
(270,640,o),
(331,640,qs),
(392,640,o),
(485,572,o),
(537,442,o),
(537,350,qs),
(537,258,o),
(485,128,o),
(392,60,o),
(331,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 95 0 0 0 72 75 5 1 3 3 1 95 4 1 1 1 73 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 10 21 
CALL[ ]	/* CallFunction */";
};
width = 662;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
kernLeft = one;
kernRight = one;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,636,l),
(174,636,l),
(174,0,l),
(246,0,l),
(246,700,l),
(9,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 2 93 3 1 2 2 66 75 0 0 0 67 0 76 0 0 0 5 0 5 17 17 4 10 22 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
kernLeft = two;
kernRight = two;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,298,ls),
(450,363,o),
(498,463,o),
(498,517,qs),
(498,605,o),
(373,706,o),
(266,706,qs),
(186,706,o),
(59,654,o),
(18,606,q),
(69,562,l),
(137,640,o),
(260,640,qs),
(339,640,o),
(424,571,o),
(424,509,qs),
(424,469,o),
(385,390,o),
(330,336,qs),
(39,51,l),
(39,0,l),
(530,0,l),
(530,64,l),
(145,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
13 12 2 3 1 3 1 0 3 2 74 0 1 1 2 95 0 2 2 72 75 4 1 3 3 0 93 0 0 0 67 0 76 0 0 0 23 0 23 36 39 17 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
kernLeft = three;
kernRight = three;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(488,649,l),
(488,700,l),
(38,700,l),
(38,636,l),
(396,636,l),
(202,393,l),
(202,340,l),
(252,340,ls),
(347,340,o),
(441,266,o),
(441,201,qs),
(441,135,o),
(347,60,o),
(261,60,qs),
(195,60,o),
(79,105,o),
(44,141,q),
(9,84,l),
(50,43,o),
(185,-6,o),
(261,-6,qs),
(343,-6,o),
(457,48,o),
(515,141,o),
(515,201,qs),
(515,287,o),
(400,394,o),
(290,400,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 1 3 4 21 1 2 5 10 9 2 1 2 3 74 6 1 5 0 2 1 5 2 103 0 3 3 4 93 0 4 4 66 75 0 1 1 0 95 0 0 0 73 0 76 0 0 0 27 0 27 17 18 36 37 37 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
kernLeft = four;
kernRight = four;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,248,l),
(507,410,l),
(437,410,l),
(437,248,l),
(133,248,l),
(491,700,l),
(411,700,l),
(40,236,l),
(40,184,l),
(435,184,l),
(435,0,l),
(507,0,l),
(507,184,l),
(647,184,l),
(647,248,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 0 4 1 74 6 1 4 2 1 0 1 4 0 102 0 3 3 66 75 0 5 5 1 93 0 1 1 67 1 76 17 17 17 18 17 17 16 7 10 27 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
kernLeft = five;
kernRight = five;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,413,l),
(170,636,l),
(490,636,l),
(490,700,l),
(107,700,l),
(71,349,l),
(220,349,ls),
(347,349,o),
(454,275,o),
(454,203,qs),
(454,138,o),
(359,60,o),
(272,60,qs),
(206,60,o),
(92,105,o),
(57,141,q),
(22,84,l),
(63,43,o),
(198,-6,o),
(273,-6,qs),
(356,-6,o),
(470,49,o),
(527,145,o),
(527,206,qs),
(527,304,o),
(388,413,o),
(236,413,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
10 9 2 1 2 1 74 6 1 5 0 2 1 5 2 101 0 4 4 3 93 0 3 3 66 75 0 1 1 0 95 0 0 0 73 0 76 0 0 0 26 0 25 17 17 36 37 37 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
kernLeft = zero;
kernRight = six;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(268,419,o),
(154,356,o),
(128,299,q),
(125,331,o),
(125,356,qs),
(125,496,o),
(257,643,o),
(373,643,qs),
(459,643,o),
(509,610,q),
(538,668,l),
(476,706,o),
(372,706,qs),
(276,706,o),
(132,623,o),
(52,461,o),
(52,344,qs),
(52,177,o),
(200,-6,o),
(339,-6,qs),
(407,-6,o),
(516,47,o),
(578,145,o),
(578,209,qs),
(578,272,o),
(518,367,o),
(411,419,o),
(342,419,qs)
);
},
{
closed = 1;
nodes = (
(278,55,o),
(194,97,o),
(151,165,o),
(151,205,qs),
(151,248,o),
(197,318,o),
(278,358,o),
(331,358,qs),
(412,358,o),
(507,276,o),
(507,207,qs),
(507,138,o),
(412,55,o),
(336,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 2 1 17 1 3 2 24 1 5 4 3 74 6 1 3 0 4 5 3 4 103 0 2 2 1 95 0 1 1 72 75 7 1 5 5 0 95 0 0 0 73 0 76 28 28 0 0 28 41 28 40 34 32 0 27 0 26 35 37 38 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
kernLeft = seven;
kernRight = seven;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,505,l),
(103,505,l),
(103,636,l),
(463,636,l),
(175,0,l),
(253,0,l),
(546,649,l),
(546,700,l),
(32,700,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 1 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 4 1 3 3 66 75 0 0 0 67 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 1 0 1 2 112 0 1 1 3 93 4 1 3 3 66 75 0 0 0 67 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 4 1 3 3 66 75 0 0 0 67 0 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 8 0 8 17 17 18 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
kernLeft = eight;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,388,o),
(565,467,o),
(565,521,qs),
(565,577,o),
(503,661,o),
(392,706,o),
(318,706,qs),
(206,706,o),
(73,606,o),
(73,521,qs),
(73,467,o),
(129,388,o),
(183,367,q),
(117,345,o),
(48,258,o),
(48,195,qs),
(48,102,o),
(192,-6,o),
(318,-6,qs),
(401,-6,o),
(524,43,o),
(590,134,o),
(590,195,qs),
(590,257,o),
(519,345,o),
(453,367,q)
);
},
{
closed = 1;
nodes = (
(145,577,o),
(238,645,o),
(318,645,qs),
(397,645,o),
(492,577,o),
(492,518,qs),
(492,461,o),
(399,393,o),
(318,393,qs),
(237,393,o),
(145,461,o),
(145,519,qs)
);
},
{
closed = 1;
nodes = (
(225,55,o),
(121,130,o),
(121,196,qs),
(121,261,o),
(226,336,o),
(318,336,qs),
(411,336,o),
(516,261,o),
(516,196,qs),
(516,131,o),
(411,55,o),
(318,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
25 12 2 4 2 1 74 0 2 0 4 5 2 4 103 0 3 3 1 95 0 1 1 72 75 6 1 5 5 0 95 0 0 0 73 0 76 38 38 38 49 38 48 39 36 40 42 37 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 638;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
kernLeft = nine;
kernRight = zero;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,706,o),
(93,653,o),
(31,555,o),
(31,491,qs),
(31,428,o),
(91,333,o),
(198,281,o),
(267,281,qs),
(341,281,o),
(455,344,o),
(481,401,q),
(484,370,o),
(484,344,qs),
(484,204,o),
(352,57,o),
(236,57,qs),
(150,57,o),
(100,90,q),
(71,32,l),
(133,-6,o),
(237,-6,qs),
(333,-6,o),
(477,77,o),
(557,239,o),
(557,356,qs),
(557,523,o),
(409,706,o),
(270,706,qs)
);
},
{
closed = 1;
nodes = (
(197,342,o),
(102,424,o),
(102,493,qs),
(102,562,o),
(197,645,o),
(273,645,qs),
(331,645,o),
(415,603,o),
(458,535,o),
(458,495,qs),
(458,452,o),
(412,382,o),
(331,342,o),
(278,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 5 4 9 1 1 2 8 1 0 1 3 74 7 1 5 0 2 1 5 2 103 0 4 4 3 95 6 1 3 3 72 75 0 1 1 0 95 0 0 0 73 0 76 28 28 0 0 28 41 28 40 36 34 0 27 0 26 38 35 37 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
kernLeft = colon;
kernRight = colon;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,426);
ref = period;
},
{
ref = period;
}
);
width = 212;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
kernLeft = colon;
kernRight = colon;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,426);
ref = period;
},
{
ref = comma;
}
);
width = 212;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,383,l),
(70,317,l),
(505,143,l),
(505,205,l),
(137,350,l),
(505,495,l),
(505,558,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 3 1 48 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,436,l),
(505,495,l),
(70,495,l),
(70,436,l)
);
},
{
closed = 1;
nodes = (
(505,205,l),
(505,264,l),
(70,264,l),
(70,205,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
0 0 0 1 2 0 1 101 0 2 3 3 2 85 0 2 2 3 93 0 3 2 3 77 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,495,l),
(438,350,l),
(70,205,l),
(70,143,l),
(505,317,l),
(505,383,l),
(70,558,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 2 1 48 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
kernLeft = question;
kernRight = question;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(309,210,l),
(309,255,o),
(351,316,o),
(394,355,qs),
(426,384,o),
(465,428,o),
(492,491,o),
(492,532,qs),
(492,612,o),
(367,706,o),
(262,706,qs),
(98,706,o),
(13,602,q),
(66,562,l),
(133,643,o),
(257,643,qs),
(332,643,o),
(418,576,o),
(418,521,qs),
(418,480,o),
(377,423,o),
(334,385,qs),
(302,357,o),
(262,313,o),
(235,251,o),
(235,210,q)
);
},
{
closed = 1;
nodes = (
(294,-5,o),
(325,26,o),
(325,47,qs),
(325,69,o),
(295,98,o),
(272,98,qs),
(250,98,o),
(220,69,o),
(220,47,qs),
(220,26,o),
(250,-5,o),
(272,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
12 11 2 2 0 1 74 0 2 0 3 0 2 3 126 0 0 0 1 95 0 1 1 72 75 0 3 3 4 95 5 1 4 4 76 4 76 26 26 26 37 26 36 37 25 35 40 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = question;
unicode = 63;
},
{
glyphname = at;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(383,706,o),
(170,591,o),
(52,386,o),
(52,254,qs),
(52,123,o),
(169,-84,o),
(379,-200,o),
(515,-200,qs),
(568,-200,o),
(681,-176,o),
(724,-154,q),
(707,-105,l),
(665,-127,o),
(562,-149,o),
(515,-149,qs),
(395,-149,o),
(210,-47,o),
(107,137,o),
(107,254,qs),
(107,371,o),
(211,554,o),
(398,655,o),
(519,655,qs),
(639,655,o),
(826,557,o),
(930,380,o),
(930,264,qs),
(930,164,o),
(875,52,o),
(828,52,qs),
(800,52,o),
(766,88,o),
(766,128,qs),
(766,507,l),
(701,507,l),
(701,406,l),
(670,456,o),
(567,511,o),
(503,511,qs),
(433,511,o),
(320,445,o),
(255,328,o),
(255,254,qs),
(255,180,o),
(320,62,o),
(433,-5,o),
(503,-5,qs),
(569,-5,o),
(673,52,o),
(703,104,q),
(706,53,o),
(767,-5,o),
(816,-5,qs),
(894,-5,o),
(982,138,o),
(982,265,qs),
(982,394,o),
(864,595,o),
(653,706,o),
(519,706,qs)
);
},
{
closed = 1;
nodes = (
(457,53,o),
(370,104,o),
(321,195,o),
(321,254,qs),
(321,313,o),
(370,403,o),
(457,453,o),
(512,453,qs),
(566,453,o),
(652,404,o),
(702,313,o),
(702,254,qs),
(702,194,o),
(652,103,o),
(566,53,o),
(512,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
23 9 2 4 9 47 1 6 0 48 1 7 6 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 5 5 8 95 11 1 8 8 72 75 0 9 9 2 95 3 1 2 2 69 75 12 10 2 4 4 0 95 1 1 0 0 76 75 0 6 6 7 95 0 7 7 77 7 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
3 1 2 0 9 4 2 9 103 0 5 5 8 95 11 1 8 8 72 75 12 10 2 4 4 0 95 1 1 0 0 76 75 0 6 6 7 95 0 7 7 77 7 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
60 60 0 0 60 75 60 74 68 66 0 59 0 58 37 38 37 35 19 38 36 37 13 10 28 
CALL[ ]	/* CallFunction */";
};
width = 1033;
}
);
note = at;
unicode = 64;
},
{
glyphname = A;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(715,0,l),
(395,700,l),
(322,700,l),
(2,0,l),
(79,0,l),
(163,187,l),
(553,187,l),
(637,0,l)
);
},
{
closed = 1;
nodes = (
(358,623,l),
(526,247,l),
(190,247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 2 1 74 5 1 4 0 0 1 4 0 102 0 2 2 66 75 3 1 1 1 67 1 76 8 8 8 10 8 10 17 17 17 16 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 717;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
kernLeft = B;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(605,381,o),
(662,462,o),
(662,520,qs),
(662,606,o),
(533,700,o),
(416,700,qs),
(114,700,l),
(114,0,l),
(436,0,ls),
(566,0,o),
(699,97,o),
(699,187,qs),
(699,257,o),
(624,346,o),
(555,361,q)
);
},
{
closed = 1;
nodes = (
(496,639,o),
(588,574,o),
(588,512,qs),
(588,450,o),
(496,385,o),
(411,385,qs),
(188,385,l),
(188,639,l),
(411,639,ls)
);
},
{
closed = 1;
nodes = (
(188,61,l),
(188,324,l),
(435,324,ls),
(625,324,o),
(625,193,qs),
(625,125,o),
(529,61,o),
(435,61,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
14 1 4 2 1 74 0 2 0 4 5 2 4 101 6 1 3 3 1 93 0 1 1 66 75 7 1 5 5 0 93 0 0 0 67 0 76 24 24 15 15 24 31 24 30 29 27 15 23 15 22 39 33 36 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 754;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496,-6,o),
(629,47,o),
(675,97,q),
(628,144,l),
(547,60,o),
(421,60,qs),
(338,60,o),
(202,136,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(202,564,o),
(338,640,o),
(421,640,qs),
(546,640,o),
(628,557,q),
(675,604,l),
(629,654,o),
(497,706,o),
(419,706,qs),
(315,706,o),
(147,614,o),
(52,451,o),
(52,350,qs),
(52,249,o),
(147,86,o),
(314,-6,o),
(418,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
24 23 11 10 4 2 1 1 74 0 1 1 0 95 0 0 0 72 75 0 2 2 3 95 4 1 3 3 73 3 76 0 0 0 27 0 26 38 36 38 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(399,0,ls),
(510,0,o),
(680,89,o),
(774,248,o),
(774,350,qs),
(774,452,o),
(680,611,o),
(510,700,o),
(399,700,qs),
(114,700,l),
(114,0,l)
);
},
{
closed = 1;
nodes = (
(188,636,l),
(395,636,ls),
(487,636,o),
(625,563,o),
(701,434,o),
(701,350,qs),
(701,266,o),
(625,137,o),
(487,64,o),
(395,64,qs),
(188,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 3 0 93 0 0 0 66 75 4 1 2 2 1 93 0 1 1 67 1 76 12 11 20 18 11 21 12 21 38 32 5 10 22 
CALL[ ]	/* CallFunction */";
};
width = 826;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,324,l),
(550,324,l),
(550,387,l),
(188,387,l),
(188,636,l),
(594,636,l),
(594,700,l),
(114,700,l),
(114,0,l),
(609,0,l),
(609,64,l),
(188,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 4 5 3 4 101 0 2 2 1 93 0 1 1 66 75 6 1 5 5 0 93 0 0 0 67 0 76 0 0 0 11 0 11 17 17 17 17 17 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 669;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
kernLeft = B;
kernRight = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(594,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,297,l),
(550,297,l),
(550,361,l),
(188,361,l),
(188,636,l),
(594,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 2 0 1 101 5 1 4 4 3 93 0 3 3 66 75 0 2 2 67 2 76 0 0 0 9 0 9 17 17 17 17 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 633;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,60,o),
(424,60,qs),
(339,60,o),
(203,136,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(203,565,o),
(340,640,o),
(425,640,qs),
(553,640,o),
(636,558,q),
(682,605,l),
(636,655,o),
(502,706,o),
(422,706,qs),
(316,706,o),
(148,614,o),
(52,451,o),
(52,350,qs),
(52,249,o),
(148,86,o),
(316,-6,o),
(421,-6,qs),
(495,-6,o),
(629,40,o),
(678,83,q),
(678,350,l),
(607,350,l),
(607,114,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
17 16 2 0 3 29 2 2 4 0 2 74 0 0 3 4 3 0 4 126 0 3 3 2 95 0 2 2 72 75 0 4 4 1 95 0 1 1 73 1 76 38 36 38 35 16 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(626,388,l),
(188,388,l),
(188,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,323,l),
(626,323,l),
(626,0,l),
(699,0,l),
(699,700,l),
(626,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 4 0 1 0 4 1 101 6 5 2 3 3 66 75 2 1 0 0 67 0 76 0 0 0 11 0 11 17 17 17 17 17 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 813;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,0,l),
(188,700,l),
(114,700,l),
(114,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 66 75 0 1 1 67 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 302;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
kernLeft = J;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,-6,o),
(393,105,o),
(393,215,qs),
(393,700,l),
(64,700,l),
(64,636,l),
(320,636,l),
(320,212,ls),
(320,58,o),
(190,58,qs),
(97,58,o),
(39,144,q),
(-5,94,l),
(27,46,o),
(129,-6,o),
(189,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
3 2 2 0 1 1 74 0 1 1 2 93 0 2 2 66 75 0 0 0 3 95 4 1 3 3 73 3 76 0 0 0 15 0 14 17 18 36 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
kernLeft = B;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(705,0,l),
(381,383,l),
(684,700,l),
(599,700,l),
(188,277,l),
(188,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,184,l),
(331,329,l),
(617,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 1 3 0 1 1 74 2 1 1 1 66 75 3 1 0 0 67 0 76 18 18 17 18 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 711;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,0,l),
(580,64,l),
(188,64,l),
(188,700,l),
(114,700,l),
(114,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 66 75 0 1 1 2 93 0 2 2 67 2 76 17 17 16 3 10 23 
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(479,181,l),
(175,700,l),
(114,700,l),
(114,0,l),
(185,0,l),
(185,557,l),
(460,89,l),
(495,89,l),
(770,560,l),
(770,0,l),
(841,0,l),
(841,700,l),
(780,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
11 6 3 3 1 3 1 74 0 1 3 0 3 1 0 126 5 4 2 3 3 66 75 2 1 0 0 67 0 76 0 0 0 12 0 12 17 18 18 17 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 955;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(626,132,l),
(175,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,568,l),
(638,0,l),
(699,0,l),
(699,700,l),
(626,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
8 3 2 0 2 1 74 4 3 2 2 2 66 75 1 1 0 0 67 0 76 0 0 0 9 0 9 17 18 17 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 813;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(524,-6,o),
(691,86,o),
(787,249,o),
(787,350,qs),
(787,451,o),
(691,614,o),
(524,706,o),
(420,706,qs),
(316,706,o),
(147,613,o),
(52,451,o),
(52,350,qs),
(52,249,o),
(147,87,o),
(316,-6,o),
(420,-6,qs)
);
},
{
closed = 1;
nodes = (
(337,60,o),
(202,135,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(202,565,o),
(337,640,o),
(420,640,qs),
(503,640,o),
(637,565,o),
(713,432,o),
(713,350,qs),
(713,268,o),
(637,135,o),
(503,60,o),
(420,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 95 0 0 0 72 75 5 1 3 3 1 95 4 1 1 1 73 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 10 21 
CALL[ ]	/* CallFunction */";
};
width = 839;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
kernLeft = B;
kernRight = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(114,700,l),
(114,0,l),
(188,0,l),
(188,221,l),
(376,221,ls),
(510,221,o),
(662,348,o),
(662,460,qs),
(662,572,o),
(510,700,o),
(376,700,qs)
);
},
{
closed = 1;
nodes = (
(188,286,l),
(188,636,l),
(374,636,ls),
(478,636,o),
(588,545,o),
(588,460,qs),
(588,377,o),
(478,286,o),
(374,286,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
6 1 4 0 0 1 4 0 101 0 3 3 2 93 5 1 2 2 66 75 0 1 1 67 1 76 11 11 0 0 11 19 11 18 17 15 0 10 0 9 17 36 7 10 22 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(728,-80,o),
(650,-80,qs),
(575,-80,o),
(498,1,q),
(583,17,o),
(714,115,o),
(787,262,o),
(787,350,qs),
(787,451,o),
(691,614,o),
(524,706,o),
(420,706,qs),
(316,706,o),
(147,613,o),
(52,451,o),
(52,350,qs),
(52,251,o),
(144,91,o),
(306,-3,o),
(407,-6,q),
(476,-78,o),
(587,-139,o),
(649,-139,qs),
(700,-139,o),
(787,-98,o),
(819,-59,q),
(783,-16,l)
);
},
{
closed = 1;
nodes = (
(125,432,o),
(202,564,o),
(337,640,o),
(420,640,qs),
(503,640,o),
(637,564,o),
(713,432,o),
(713,350,qs),
(713,268,o),
(637,136,o),
(503,60,o),
(420,60,qs),
(337,60,o),
(202,136,o),
(125,268,o),
(125,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
22 1 1 4 26 1 3 1 2 74 0 3 0 0 3 0 99 0 5 5 2 95 0 2 2 72 75 0 4 4 1 95 0 1 1 76 1 76 38 36 40 38 18 34 6 10 26 
CALL[ ]	/* CallFunction */";
};
width = 839;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,240,l),
(579,265,o),
(662,378,o),
(662,460,qs),
(662,572,o),
(510,700,o),
(376,700,qs),
(114,700,l),
(114,0,l),
(188,0,l),
(188,222,l),
(376,222,ls),
(405,222,o),
(432,225,q),
(592,0,l),
(673,0,l)
);
},
{
closed = 1;
nodes = (
(188,285,l),
(188,636,l),
(374,636,ls),
(478,636,o),
(588,545,o),
(588,460,qs),
(588,377,o),
(478,285,o),
(374,285,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
14 1 0 5 1 74 7 1 5 0 0 1 5 0 101 0 4 4 2 93 0 2 2 66 75 6 3 2 1 1 67 1 76 16 16 0 0 16 24 16 23 22 20 0 15 0 15 33 17 34 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 723;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-6,o),
(511,45,o),
(568,132,o),
(568,185,qs),
(568,249,o),
(502,324,o),
(407,361,o),
(330,380,qs),
(265,396,o),
(188,423,o),
(137,474,o),
(137,516,qs),
(137,572,o),
(230,643,o),
(322,643,qs),
(370,643,o),
(470,614,o),
(514,585,q),
(539,644,l),
(497,673,o),
(382,706,o),
(322,706,qs),
(236,706,o),
(120,654,o),
(64,567,o),
(64,514,qs),
(64,449,o),
(131,373,o),
(225,336,o),
(304,316,qs),
(370,300,o),
(444,273,o),
(495,223,o),
(495,181,qs),
(495,126,o),
(401,57,o),
(307,57,qs),
(240,57,o),
(114,104,o),
(76,142,q),
(47,85,l),
(86,44,o),
(229,-6,o),
(307,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
24 1 2 1 25 3 2 3 0 2 2 74 0 2 2 1 95 0 1 1 72 75 0 0 0 3 95 4 1 3 3 73 3 76 0 0 0 43 0 42 37 45 37 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,0,l),
(324,636,l),
(570,636,l),
(570,700,l),
(4,700,l),
(4,636,l),
(250,636,l),
(250,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 93 0 1 1 66 75 0 3 3 67 3 76 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 574;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,-6,o),
(683,150,o),
(683,299,qs),
(683,700,l),
(611,700,l),
(611,302,ls),
(611,180,o),
(501,60,o),
(396,60,qs),
(292,60,o),
(182,180,o),
(182,302,qs),
(182,700,l),
(108,700,l),
(108,299,ls),
(108,150,o),
(260,-6,o),
(396,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 66 75 0 1 1 3 95 4 1 3 3 73 3 76 0 0 0 17 0 16 19 35 19 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 792;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(351,92,l),
(83,700,l),
(3,700,l),
(313,0,l),
(386,0,l),
(696,700,l),
(621,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
5 1 0 1 1 74 3 2 2 1 1 66 75 0 0 0 67 0 76 0 0 0 6 0 6 17 17 4 10 22 
CALL[ ]	/* CallFunction */";
};
width = 698;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(799,95,l),
(593,700,l),
(524,700,l),
(315,98,l),
(113,700,l),
(37,700,l),
(273,0,l),
(350,0,l),
(556,597,l),
(761,0,l),
(839,0,l),
(1075,700,l),
(1004,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 8 3 3 0 2 1 74 5 4 3 3 2 2 66 75 1 1 0 0 67 0 76 0 0 0 12 0 12 18 17 18 17 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 1111;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(372,362,l),
(620,700,l),
(540,700,l),
(330,414,l),
(119,700,l),
(34,700,l),
(283,360,l),
(17,0,l),
(102,0,l),
(327,308,l),
(553,0,l),
(639,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
10 7 4 1 4 0 1 1 74 2 1 1 1 66 75 4 3 2 0 0 67 0 76 0 0 0 11 0 11 18 18 18 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 656;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,700,l),
(320,307,l),
(80,700,l),
(1,700,l),
(281,242,l),
(281,0,l),
(354,0,l),
(354,242,l),
(634,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 0 1 1 74 2 1 1 1 66 75 0 0 0 67 0 76 18 18 17 3 10 23 
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(607,649,l),
(607,700,l),
(52,700,l),
(52,636,l),
(509,636,l),
(45,51,l),
(45,0,l),
(619,0,l),
(619,64,l),
(144,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
8 1 1 2 3 1 0 3 2 74 0 1 1 2 93 0 2 2 66 75 4 1 3 3 0 93 0 0 0 67 0 76 0 0 0 9 0 9 17 18 17 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
kernLeft = bracketleft;
kernRight = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,-194,l),
(297,-135,l),
(185,-135,l),
(185,683,l),
(297,683,l),
(297,742,l),
(114,742,l),
(114,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 93 0 0 0 68 75 0 2 2 3 93 0 3 3 71 3 76 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
kernLeft = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,842,l),
(-35,842,l),
(295,-100,l),
(360,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 131 2 1 1 1 116 0 0 0 3 0 3 17 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
kernLeft = bracketright;
kernRight = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,742,l),
(21,742,l),
(21,683,l),
(133,683,l),
(133,-135,l),
(21,-135,l),
(21,-194,l),
(204,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 2 93 0 2 2 68 75 0 0 0 3 93 4 1 3 3 71 3 76 0 0 0 7 0 7 17 17 17 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 318;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,557,l),
(258,557,l),
(83,143,l),
(142,143,l),
(288,496,l),
(434,143,l),
(493,143,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
1 1 0 1 1 74 0 1 0 1 131 3 2 2 0 0 116 0 0 0 6 0 6 17 18 4 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 576;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
kernLeft = underscore;
kernRight = underscore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,-48,l),
(500,0,l),
(0,0,l),
(0,-48,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 500;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = gravecomb;
}
);
width = 600;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(221,530,o),
(109,493,o),
(69,459,q),
(101,406,l),
(134,435,o),
(226,468,o),
(276,468,qs),
(349,468,o),
(425,397,o),
(425,329,qs),
(425,297,l),
(258,297,ls),
(152,297,o),
(55,215,o),
(55,148,qs),
(55,79,o),
(159,-5,o),
(247,-5,qs),
(311,-5,o),
(404,41,o),
(428,82,q),
(428,0,l),
(496,0,l),
(496,326,ls),
(496,427,o),
(386,530,o),
(283,530,qs)
);
},
{
closed = 1;
nodes = (
(195,51,o),
(125,104,o),
(125,150,qs),
(125,244,o),
(260,244,qs),
(425,244,l),
(425,158,l),
(404,106,o),
(318,51,o),
(258,51,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
23 22 2 2 3 29 5 2 6 5 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 2 0 5 6 2 5 101 0 3 3 4 95 7 1 4 4 75 75 8 1 6 6 0 95 1 1 0 0 67 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 2 0 5 6 2 5 101 0 3 3 4 95 7 1 4 4 75 75 0 0 0 67 75 8 1 6 6 1 95 0 1 1 76 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
27 27 0 0 27 36 27 35 32 30 0 26 0 25 35 36 35 19 9 10 24 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
kernLeft = b;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,530,o),
(203,477,o),
(170,426,q),
(170,742,l),
(99,742,l),
(99,0,l),
(167,0,l),
(167,104,l),
(199,51,o),
(304,-5,o),
(370,-5,qs),
(444,-5,o),
(564,63,o),
(632,185,o),
(632,263,qs),
(632,341,o),
(564,463,o),
(444,530,o),
(370,530,qs)
);
},
{
closed = 1;
nodes = (
(309,58,o),
(220,109,o),
(169,203,o),
(169,263,qs),
(169,323,o),
(220,417,o),
(309,468,o),
(365,468,qs),
(420,468,o),
(510,417,o),
(561,323,o),
(561,263,qs),
(561,203,o),
(510,109,o),
(420,58,o),
(365,58,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
15 10 2 5 4 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 2 68 75 0 4 4 3 95 6 1 3 3 75 75 7 1 5 5 0 95 1 1 0 0 76 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 2 2 68 75 0 4 4 3 95 6 1 3 3 75 75 0 1 1 67 75 7 1 5 5 0 95 0 0 0 76 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 34 19 33 27 25 0 18 0 17 17 19 38 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,-5,o),
(492,48,o),
(523,99,q),
(470,135,l),
(444,96,o),
(364,58,o),
(317,58,qs),
(260,58,o),
(169,109,o),
(118,202,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(260,468,o),
(317,468,qs),
(364,468,o),
(444,429,o),
(470,390,q),
(523,426,l),
(492,477,o),
(385,530,o),
(317,530,qs),
(239,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,63,o),
(239,-5,o),
(317,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
26 25 11 10 4 2 1 1 74 0 1 1 0 95 0 0 0 75 75 0 2 2 3 95 4 1 3 3 76 3 76 0 0 0 29 0 28 38 37 38 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
kernLeft = c;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,426,l),
(475,477,o),
(372,530,o),
(308,530,qs),
(234,530,o),
(114,463,o),
(46,341,o),
(46,263,qs),
(46,185,o),
(114,63,o),
(234,-5,o),
(308,-5,qs),
(374,-5,o),
(479,51,o),
(511,104,q),
(511,0,l),
(579,0,l),
(579,742,l),
(508,742,l)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(369,468,o),
(458,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(458,109,o),
(369,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 3 2 5 4 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
6 1 3 3 68 75 0 4 4 2 95 0 2 2 75 75 7 1 5 5 0 95 1 1 0 0 67 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
6 1 3 3 68 75 0 4 4 2 95 0 2 2 75 75 0 0 0 67 75 7 1 5 5 1 95 0 1 1 76 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 34 19 33 27 25 0 18 0 18 38 35 17 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(558,341,o),
(492,462,o),
(376,530,o),
(303,530,qs),
(230,530,o),
(113,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(241,-5,o),
(322,-5,qs),
(385,-5,o),
(490,39,o),
(525,81,q),
(485,127,l),
(455,93,o),
(373,58,o),
(324,58,qs),
(237,58,o),
(123,159,o),
(117,241,q),
(557,241,l),
(558,263,ls)
);
},
{
closed = 1;
nodes = (
(380,469,o),
(483,372,o),
(490,294,q),
(117,294,l),
(124,372,o),
(227,469,o),
(303,469,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
8 7 2 1 0 1 74 0 4 0 0 1 4 0 101 6 1 5 5 3 95 0 3 3 75 75 0 1 1 2 95 0 2 2 76 2 76 24 24 24 30 24 29 22 38 37 34 16 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
kernRight = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,687,o),
(351,661,q),
(375,714,l),
(356,730,o),
(300,747,o),
(270,747,qs),
(194,747,o),
(111,663,o),
(111,591,qs),
(111,526,l),
(17,526,l),
(17,466,l),
(111,466,l),
(111,0,l),
(182,0,l),
(182,466,l),
(342,466,l),
(342,526,l),
(180,526,l),
(180,588,ls),
(180,637,o),
(227,687,o),
(273,687,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
19 1 6 5 20 1 0 6 2 74 7 1 6 6 5 95 0 5 5 74 75 3 1 1 1 0 93 4 1 0 0 69 75 0 2 2 67 2 76 0 0 0 22 0 21 35 17 17 17 17 19 8 10 26 
CALL[ ]	/* CallFunction */";
};
width = 339;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,425,l),
(485,476,o),
(377,530,o),
(310,530,qs),
(235,530,o),
(115,466,o),
(46,350,o),
(46,276,qs),
(46,202,o),
(115,85,o),
(236,20,o),
(310,20,qs),
(375,20,o),
(482,72,o),
(515,122,q),
(515,55,ls),
(515,-43,o),
(421,-136,o),
(321,-136,qs),
(261,-136,o),
(152,-98,o),
(114,-64,q),
(78,-118,l),
(119,-156,o),
(250,-199,o),
(323,-199,qs),
(455,-199,o),
(586,-70,o),
(586,64,qs),
(586,526,l),
(518,526,l)
);
},
{
closed = 1;
nodes = (
(260,83,o),
(169,132,o),
(118,220,o),
(118,276,qs),
(118,332,o),
(169,420,o),
(260,468,o),
(317,468,qs),
(375,468,o),
(466,419,o),
(517,332,o),
(517,276,qs),
(517,220,o),
(466,132,o),
(374,83,o),
(317,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
29 15 2 6 5 8 7 2 1 2 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 5 5 3 95 7 4 2 3 3 75 75 8 1 6 6 2 95 0 2 2 67 75 0 1 1 0 95 0 0 0 77 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
8 1 6 0 2 1 6 2 103 0 5 5 3 95 7 4 2 3 3 75 75 0 1 1 0 95 0 0 0 77 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
31 31 0 0 31 46 31 45 39 37 0 30 0 30 38 37 37 35 9 10 24 
CALL[ ]	/* CallFunction */";
};
width = 686;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,530,o),
(199,480,o),
(170,434,q),
(170,742,l),
(99,742,l),
(99,0,l),
(170,0,l),
(170,276,ls),
(170,365,o),
(269,466,o),
(354,466,qs),
(430,466,o),
(512,380,o),
(512,298,qs),
(512,0,l),
(583,0,l),
(583,305,ls),
(583,415,o),
(466,530,o),
(367,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
16 1 0 1 1 74 0 3 3 68 75 0 1 1 4 95 5 1 4 4 75 75 2 1 0 0 67 0 76 0 0 0 19 0 18 17 19 35 19 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 677;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,0);
ref = uni0307.i;
}
);
width = 269;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
kernLeft = j;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (440,1);
ref = uni0307.i;
}
);
width = 274;
}
);
note = j;
unicode = 106;
},
{
glyphname = k;
kernLeft = b;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(593,0,l),
(347,311,l),
(572,526,l),
(484,526,l),
(170,239,l),
(170,742,l),
(99,742,l),
(99,0,l),
(170,0,l),
(170,150,l),
(294,264,l),
(506,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
9 6 1 3 0 2 1 74 0 1 1 68 75 0 2 2 69 75 3 1 0 0 67 0 76 18 18 17 18 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,0,l),
(170,742,l),
(99,742,l),
(99,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 68 75 0 1 1 67 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(685,530,o),
(576,471,o),
(547,419,q),
(523,474,o),
(426,530,o),
(360,530,qs),
(295,530,o),
(195,478,o),
(167,430,q),
(167,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,276,ls),
(170,365,o),
(265,466,o),
(346,466,qs),
(419,466,o),
(498,380,o),
(498,298,qs),
(498,0,l),
(569,0,l),
(569,276,ls),
(569,365,o),
(663,466,o),
(745,466,qs),
(817,466,o),
(896,380,o),
(896,298,qs),
(896,0,l),
(967,0,l),
(967,305,ls),
(967,416,o),
(854,530,o),
(755,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
31 25 2 0 1 1 74 3 1 1 1 5 95 8 7 6 3 5 5 69 75 4 2 2 0 0 67 0 76 0 0 0 34 0 33 35 17 19 35 19 35 19 9 10 27 
CALL[ ]	/* CallFunction */";
};
width = 1061;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,530,o),
(196,477,o),
(167,429,q),
(167,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,276,ls),
(170,365,o),
(269,466,o),
(354,466,qs),
(430,466,o),
(512,380,o),
(512,298,qs),
(512,0,l),
(583,0,l),
(583,305,ls),
(583,415,o),
(466,530,o),
(367,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
16 1 0 1 1 74 0 1 1 3 95 5 4 2 3 3 69 75 2 1 0 0 67 0 76 0 0 0 19 0 18 17 19 35 19 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 677;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,-5,o),
(512,64,o),
(581,186,o),
(581,263,qs),
(581,340,o),
(512,462,o),
(390,530,o),
(314,530,qs),
(238,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(238,-5,o),
(314,-5,qs)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(370,468,o),
(459,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(459,109,o),
(370,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 95 0 0 0 75 75 5 1 3 3 1 95 4 1 1 1 76 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 10 21 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
kernLeft = i;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,530,o),
(199,474,o),
(167,422,q),
(167,526,l),
(99,526,l),
(99,-194,l),
(170,-194,l),
(170,99,l),
(203,48,o),
(306,-5,o),
(370,-5,qs),
(445,-5,o),
(564,62,o),
(632,184,o),
(632,263,qs),
(632,341,o),
(564,463,o),
(444,530,o),
(370,530,qs)
);
},
{
closed = 1;
nodes = (
(309,58,o),
(220,109,o),
(169,203,o),
(169,263,qs),
(169,323,o),
(220,416,o),
(309,468,o),
(365,468,qs),
(420,468,o),
(510,416,o),
(561,323,o),
(561,263,qs),
(561,203,o),
(510,109,o),
(420,58,o),
(365,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
15 10 2 5 4 1 74 0 4 4 2 95 6 3 2 2 2 69 75 7 1 5 5 0 95 0 0 0 76 75 0 1 1 71 1 76 19 19 0 0 19 34 19 33 27 25 0 18 0 17 17 19 38 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = p;
unicode = 112;
},
{
glyphname = q;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(511,422,l),
(479,474,o),
(374,530,o),
(308,530,qs),
(234,530,o),
(114,463,o),
(46,341,o),
(46,263,qs),
(46,184,o),
(114,62,o),
(233,-5,o),
(308,-5,qs),
(372,-5,o),
(475,48,o),
(508,99,q),
(508,-194,l),
(579,-194,l),
(579,526,l),
(511,526,l)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,416,o),
(258,468,o),
(314,468,qs),
(369,468,o),
(458,416,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(458,109,o),
(369,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
17 3 2 5 4 1 74 0 4 4 2 95 6 3 2 2 2 75 75 7 1 5 5 1 95 0 1 1 76 75 0 0 0 71 0 76 19 19 0 0 19 34 19 33 27 25 0 18 0 18 38 35 17 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = q;
unicode = 113;
},
{
glyphname = r;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,268,ls),
(170,360,o),
(264,462,o),
(347,462,qs),
(364,461,l),
(364,530,l),
(291,530,o),
(192,476,o),
(167,423,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
12 1 2 1 1 74 0 1 1 0 95 3 1 0 0 75 75 0 2 2 67 2 76 17 19 33 17 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,-5,o),
(457,76,o),
(457,145,qs),
(457,196,o),
(403,254,o),
(327,278,o),
(264,290,qs),
(213,299,o),
(155,316,o),
(116,352,o),
(116,382,qs),
(116,421,o),
(185,469,o),
(253,469,qs),
(343,469,o),
(408,424,q),
(439,481,l),
(406,503,o),
(304,530,o),
(253,530,qs),
(155,530,o),
(45,446,o),
(45,380,qs),
(45,327,o),
(100,267,o),
(178,242,o),
(242,230,qs),
(290,222,o),
(348,205,o),
(386,172,o),
(386,143,qs),
(386,102,o),
(317,57,o),
(245,57,qs),
(191,57,o),
(91,90,o),
(58,116,q),
(26,60,l),
(59,32,o),
(176,-5,o),
(240,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
23 1 2 1 24 3 2 3 0 2 2 74 0 2 2 1 95 0 1 1 75 75 0 0 0 3 95 4 1 3 3 76 3 76 0 0 0 40 0 39 36 44 37 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 489;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,70,o),
(295,56,o),
(273,56,qs),
(229,56,o),
(182,105,o),
(182,152,qs),
(182,466,l),
(342,466,l),
(342,526,l),
(182,526,l),
(182,641,l),
(111,641,l),
(111,526,l),
(17,526,l),
(17,466,l),
(111,466,l),
(111,148,ls),
(111,75,o),
(191,-5,o),
(265,-5,qs),
(297,-5,o),
(356,14,o),
(376,32,q),
(351,83,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
23 1 6 1 1 74 0 3 2 3 131 5 1 1 1 2 93 4 1 2 2 69 75 0 6 6 0 95 0 0 0 76 0 76 35 17 17 17 17 19 34 7 10 27 
CALL[ ]	/* CallFunction */";
};
width = 406;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,250,ls),
(502,160,o),
(406,59,o),
(323,59,qs),
(247,59,o),
(165,145,o),
(165,228,qs),
(165,526,l),
(94,526,l),
(94,221,ls),
(94,110,o),
(213,-5,o),
(316,-5,qs),
(379,-5,o),
(477,48,o),
(505,96,q),
(505,0,l),
(573,0,l),
(573,526,l),
(502,526,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
5 4 2 2 2 69 75 0 3 3 0 95 1 1 0 0 67 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 4 2 2 2 69 75 0 0 0 67 75 0 3 3 1 95 0 1 1 76 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 19 35 19 35 17 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(272,78,l),
(75,526,l),
(1,526,l),
(234,0,l),
(307,0,l),
(541,526,l),
(471,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
5 1 0 1 1 74 3 2 2 1 1 69 75 0 0 0 67 0 76 0 0 0 6 0 6 17 17 4 10 22 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(639,79,l),
(471,526,l),
(410,526,l),
(241,79,l),
(76,526,l),
(8,526,l),
(206,0,l),
(273,0,l),
(439,431,l),
(605,0,l),
(672,0,l),
(871,526,l),
(806,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 8 3 3 0 2 1 74 5 4 3 3 2 2 69 75 1 1 0 0 67 0 76 0 0 0 12 0 12 18 17 18 17 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 879;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,270,l),
(503,526,l),
(425,526,l),
(267,320,l),
(109,526,l),
(29,526,l),
(227,270,l),
(19,0,l),
(99,0,l),
(267,220,l),
(434,0,l),
(515,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
10 7 4 1 4 0 1 1 74 2 1 1 1 69 75 4 3 2 0 0 67 0 76 0 0 0 11 0 11 18 18 18 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,79,l),
(75,526,l),
(1,526,l),
(236,1,l),
(213,-50,ls),
(191,-98,o),
(140,-138,o),
(104,-138,qs),
(48,-138,o),
(8,-98,q),
(-25,-151,l),
(-1,-175,o),
(65,-199,o),
(103,-199,qs),
(162,-199,o),
(246,-137,o),
(278,-63,qs),
(541,526,l),
(471,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
17 14 8 3 1 2 7 1 0 1 2 74 4 3 2 2 2 69 75 0 1 1 0 95 0 0 0 77 0 76 0 0 0 18 0 18 20 36 35 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 542;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,479,l),
(464,526,l),
(48,526,l),
(48,466,l),
(373,466,l),
(42,47,l),
(42,0,l),
(470,0,l),
(470,59,l),
(133,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
8 1 1 2 3 1 0 3 2 74 0 1 1 2 93 0 2 2 69 75 4 1 3 3 0 93 0 0 0 67 0 76 0 0 0 9 0 9 17 18 17 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 511;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
kernRight = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(210,603,ls),
(210,683,o),
(286,683,qs),
(313,683,l),
(313,742,l),
(276,742,ls),
(139,742,o),
(139,609,qs),
(139,355,ls),
(139,304,o),
(94,304,qs),
(60,304,l),
(60,244,l),
(94,244,ls),
(139,244,o),
(139,193,qs),
(139,-61,ls),
(139,-194,o),
(276,-194,qs),
(313,-194,l),
(313,-135,l),
(286,-135,ls),
(210,-135,o),
(210,-55,qs),
(210,192,ls),
(210,229,o),
(188,265,o),
(163,274,q),
(188,283,o),
(210,319,o),
(210,356,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
2 1 2 3 1 74 0 3 0 2 0 3 2 103 0 5 5 4 95 0 4 4 68 75 0 0 0 1 95 0 1 1 71 1 76 33 35 33 35 33 39 6 10 26 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,-194,l),
(180,742,l),
(114,742,l),
(114,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 68 75 0 1 1 71 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
kernLeft = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,304,o),
(195,355,qs),
(195,609,ls),
(195,742,o),
(59,742,qs),
(21,742,l),
(21,683,l),
(48,683,ls),
(124,683,o),
(124,603,qs),
(124,356,ls),
(124,319,o),
(146,283,o),
(171,274,q),
(146,265,o),
(124,229,o),
(124,192,qs),
(124,-55,ls),
(124,-135,o),
(48,-135,qs),
(21,-135,l),
(21,-194,l),
(59,-194,ls),
(195,-194,o),
(195,-61,qs),
(195,193,ls),
(195,244,o),
(240,244,qs),
(274,244,l),
(274,304,l),
(240,304,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
16 1 0 5 1 74 6 1 5 0 0 2 5 0 103 0 3 3 4 95 0 4 4 68 75 0 2 2 1 95 0 1 1 71 1 76 0 0 0 30 0 29 33 42 33 35 33 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 334;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,272,o),
(511,350,o),
(513,423,q),
(465,423,l),
(463,379,o),
(422,327,o),
(387,327,qs),
(366,327,o),
(330,349,o),
(304,372,qs),
(270,400,o),
(220,429,o),
(186,429,qs),
(131,429,o),
(64,351,o),
(62,278,q),
(110,278,l),
(112,322,o),
(153,373,o),
(188,373,qs),
(209,373,o),
(244,352,o),
(271,329,qs),
(305,301,o),
(355,272,o),
(389,272,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 1 2 0 0 3 2 0 103 0 3 1 1 3 87 0 3 3 1 95 6 5 2 1 3 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 2 0 2 4 0 126 0 1 3 5 3 1 5 126 0 2 0 0 3 2 0 103 0 3 1 5 3 87 0 3 3 5 95 6 1 5 3 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 25 0 24 18 36 34 18 36 7 10 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 575;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = uni00A0;
layers = (
{
layerId = m01;
width = 262;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = exclamdown;
kernLeft = exclamdown;
kernRight = exclamdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(108,530,o),
(77,500,o),
(77,478,qs),
(77,457,o),
(108,427,o),
(130,427,qs),
(152,427,o),
(182,457,o),
(182,478,qs),
(182,500,o),
(152,530,o),
(130,530,qs)
);
},
{
closed = 1;
nodes = (
(102,315,l),
(88,-154,l),
(172,-154,l),
(157,315,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 0 2 3 2 97 0 0 0 1 95 4 1 1 1 75 0 76 0 0 15 14 13 12 0 11 0 10 36 5 10 21 
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = exclamdown;
unicode = 161;
},
{
glyphname = cent;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(335,467,l),
(377,464,o),
(447,425,o),
(470,390,q),
(523,426,l),
(494,473,o),
(397,526,o),
(335,530,q),
(335,646,l),
(286,646,l),
(286,529,l),
(216,522,o),
(107,451,o),
(46,335,o),
(46,263,qs),
(46,191,o),
(107,75,o),
(216,3,o),
(286,-4,q),
(286,-120,l),
(335,-120,l),
(335,-4,l),
(396,-1,o),
(494,52,o),
(523,99,q),
(470,135,l),
(447,100,o),
(377,62,o),
(335,59,q)
);
},
{
closed = 1;
nodes = (
(118,346,o),
(211,456,o),
(286,466,q),
(286,60,l),
(211,70,o),
(118,179,o),
(118,263,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
17 1 3 2 32 31 28 27 24 23 3 2 8 0 3 9 1 1 0 3 74 0 2 3 2 131 0 1 0 1 132 0 3 3 69 75 0 0 0 76 0 76 17 26 17 21 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = cent;
unicode = 162;
},
{
glyphname = sterling;
kernLeft = sterling;
kernRight = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(493,325,l),
(493,375,l),
(216,375,l),
(216,459,ls),
(216,547,o),
(316,640,o),
(415,640,qs),
(528,640,o),
(594,592,q),
(621,653,l),
(544,706,o),
(421,706,qs),
(287,706,o),
(143,573,o),
(143,459,qs),
(143,375,l),
(30,375,l),
(30,325,l),
(143,325,l),
(143,64,l),
(30,64,l),
(30,0,l),
(608,0,l),
(608,64,l),
(216,64,l),
(216,325,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
15 1 6 5 16 1 4 6 2 74 7 1 4 8 1 3 0 4 3 101 0 6 6 5 95 0 5 5 72 75 2 1 0 0 1 93 0 1 1 67 1 76 17 19 35 35 17 17 17 17 16 9 10 29 
CALL[ ]	/* CallFunction */";
};
width = 637;
}
);
note = sterling;
unicode = 163;
},
{
glyphname = currency;
kernLeft = currency;
kernRight = currency;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(626,365,o),
(593,452,o),
(563,487,q),
(666,590,l),
(624,635,l),
(519,530,l),
(483,557,o),
(396,586,o),
(350,586,qs),
(303,586,o),
(217,556,o),
(182,529,q),
(75,635,l),
(34,590,l),
(137,487,l),
(76,412,o),
(76,318,qs),
(76,271,o),
(108,184,o),
(138,149,q),
(34,45,l),
(75,0,l),
(183,107,l),
(218,81,o),
(304,52,o),
(350,52,qs),
(445,52,o),
(517,107,q),
(624,0,l),
(666,45,l),
(562,149,l),
(593,184,o),
(626,271,o),
(626,318,qs)
);
},
{
closed = 1;
nodes = (
(135,374,o),
(193,470,o),
(292,526,o),
(350,526,qs),
(408,526,o),
(508,470,o),
(567,374,o),
(567,318,qs),
(567,262,o),
(508,168,o),
(409,112,o),
(350,112,qs),
(292,112,o),
(193,168,o),
(135,262,o),
(135,318,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
27 21 2 3 1 30 18 13 2 4 2 3 10 5 2 0 2 3 74 29 28 20 19 4 1 72 12 11 4 3 4 0 71 0 1 0 3 2 1 3 103 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79 38 43 47 38 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = currency;
unicode = 164;
},
{
glyphname = yen;
kernLeft = yen;
kernRight = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(618,700,l),
(349,335,l),
(79,700,l),
(1,700,l),
(286,312,l),
(91,312,l),
(91,268,l),
(311,268,l),
(311,174,l),
(91,174,l),
(91,130,l),
(311,130,l),
(311,0,l),
(384,0,l),
(384,130,l),
(604,130,l),
(604,174,l),
(384,174,l),
(384,268,l),
(604,268,l),
(604,312,l),
(409,312,l),
(694,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
20 1 0 9 1 74 8 1 0 7 1 1 2 0 1 101 6 1 2 5 1 3 4 2 3 101 10 1 9 9 66 75 0 4 4 67 4 76 22 21 19 18 17 17 17 17 17 17 17 17 16 11 10 29 
CALL[ ]	/* CallFunction */";
};
width = 695;
}
);
note = yen;
unicode = 165;
},
{
glyphname = brokenbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,392,l),
(180,742,l),
(114,742,l),
(114,392,l)
);
},
{
closed = 1;
nodes = (
(180,-194,l),
(180,156,l),
(114,156,l),
(114,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 1 0 93 0 0 0 68 75 0 2 2 3 93 0 3 3 71 3 76 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = brokenbar;
unicode = 166;
},
{
glyphname = section;
kernLeft = section;
kernRight = section;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,341,o),
(402,403,o),
(328,433,o),
(268,449,qs),
(219,462,o),
(163,482,o),
(126,520,o),
(126,551,qs),
(126,598,o),
(202,647,o),
(274,647,qs),
(369,647,o),
(435,600,q),
(460,654,l),
(429,677,o),
(327,705,o),
(279,705,qs),
(177,705,o),
(62,621,o),
(62,549,qs),
(62,510,o),
(93,458,o),
(121,440,q),
(83,420,o),
(39,353,o),
(39,310,qs),
(39,258,o),
(90,197,o),
(163,168,o),
(223,153,qs),
(273,140,o),
(329,120,o),
(367,81,o),
(367,49,qs),
(367,2,o),
(296,-47,o),
(232,-47,qs),
(181,-47,o),
(84,-11,o),
(53,16,q),
(28,-39,l),
(59,-68,o),
(173,-105,o),
(230,-105,qs),
(321,-105,o),
(432,-21,o),
(432,50,qs),
(432,123,o),
(373,160,q),
(410,179,o),
(454,246,o),
(454,288,qs)
);
},
{
closed = 1;
nodes = (
(278,198,o),
(250,204,qs),
(199,217,o),
(141,239,o),
(102,280,o),
(102,313,qs),
(102,350,o),
(149,401,o),
(187,412,q),
(211,404,o),
(244,397,qs),
(295,384,o),
(352,362,o),
(391,321,o),
(391,288,qs),
(391,250,o),
(345,199,o),
(307,189,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
37 1 3 2 69 60 38 28 11 10 2 7 1 3 2 74 0 1 0 0 1 0 99 0 3 3 2 95 0 2 2 72 3 76 41 39 35 33 37 38 4 10 22 
CALL[ ]	/* CallFunction */";
};
width = 490;
}
);
note = section;
unicode = 167;
},
{
glyphname = dieresis;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0308;
}
);
width = 600;
}
);
note = dieresis;
unicode = 168;
},
{
glyphname = copyright;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,-3,o),
(664,91,o),
(758,254,o),
(758,352,qs),
(758,450,o),
(666,611,o),
(505,703,o),
(406,703,qs),
(307,703,o),
(145,609,o),
(52,447,o),
(52,350,qs),
(52,253,o),
(145,91,o),
(306,-3,o),
(404,-3,qs)
);
},
{
closed = 1;
nodes = (
(316,34,o),
(172,118,o),
(89,263,o),
(89,350,qs),
(89,437,o),
(172,582,o),
(317,666,o),
(406,666,qs),
(495,666,o),
(638,583,o),
(720,440,o),
(720,352,qs),
(720,264,o),
(636,119,o),
(492,34,o),
(404,34,qs)
);
},
{
closed = 1;
nodes = (
(464,142,o),
(547,183,o),
(572,220,q),
(529,251,l),
(508,222,o),
(448,194,o),
(412,194,qs),
(347,194,o),
(262,280,o),
(262,350,qs),
(262,420,o),
(347,506,o),
(412,506,qs),
(448,506,o),
(508,478,o),
(529,449,q),
(572,481,l),
(547,517,o),
(464,558,o),
(413,558,qs),
(354,558,o),
(259,505,o),
(205,410,o),
(205,350,qs),
(205,290,o),
(259,195,o),
(354,142,o),
(413,142,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 83 values pushed */
56 55 43 42 4 6 5 1 74 0 0 0 2 4 0 2 103 0 4 0 5 6 4 5 103 0 6 10 1 7 3 6 7 103 9 1 3 1 1 3 87 9 1 3 3 1 95 8 1 1 3 1 79 32 32 16 16 0 0 32 59 32 58 53 51 47 45 40 38 16 31 16 30 24 22 0 15 0 14 38 11 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 809;
}
);
note = copyright;
unicode = 169;
},
{
glyphname = ordfeminine;
kernLeft = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,746,o),
(77,722,o),
(51,702,q),
(72,667,l),
(93,684,o),
(152,704,o),
(185,704,qs),
(231,704,o),
(277,665,o),
(277,624,qs),
(277,608,l),
(172,608,ls),
(104,608,o),
(41,559,o),
(41,518,qs),
(41,477,o),
(105,427,o),
(164,427,qs),
(206,427,o),
(266,455,o),
(281,478,q),
(281,430,l),
(330,430,l),
(330,622,ls),
(330,684,o),
(258,746,o),
(190,746,qs)
);
},
{
closed = 1;
nodes = (
(135,464,o),
(91,494,o),
(91,521,qs),
(91,545,o),
(133,573,o),
(178,573,qs),
(277,573,l),
(277,522,l),
(250,464,o),
(175,464,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
23 22 2 2 3 28 5 2 6 5 2 74 0 2 0 5 6 2 5 101 8 1 6 1 1 0 6 0 99 0 3 3 4 95 7 1 4 4 104 3 76 27 27 0 0 27 36 27 35 31 29 0 26 0 25 35 36 35 19 9 12 24 
CALL[ ]	/* CallFunction */";
};
width = 401;
}
);
note = ordfeminine;
unicode = 170;
},
{
glyphname = guillemotleft;
kernLeft = plus;
kernRight = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
ref = guilsinglleft;
},
{
pos = (178,0);
ref = guilsinglleft;
}
);
width = 477;
}
);
note = guillemotleft;
unicode = 171;
},
{
glyphname = logicalnot;
kernLeft = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,380,l),
(70,321,l),
(442,321,l),
(442,141,l),
(505,141,l),
(505,380,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 0 132 0 2 1 1 2 85 0 2 2 1 93 0 1 2 1 77 17 17 16 3 10 23 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = logicalnot;
unicode = 172;
},
{
glyphname = uni00AD;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
ref = hyphen;
}
);
width = 382;
}
);
note = uni00AD;
unicode = 173;
},
{
glyphname = registered;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,703,o),
(145,609,o),
(52,447,o),
(52,350,qs),
(52,253,o),
(145,91,o),
(306,-3,o),
(404,-3,qs),
(502,-3,o),
(664,91,o),
(758,254,o),
(758,352,qs),
(758,450,o),
(666,611,o),
(505,703,o),
(406,703,qs)
);
},
{
closed = 1;
nodes = (
(316,34,o),
(172,118,o),
(89,263,o),
(89,350,qs),
(89,437,o),
(172,582,o),
(317,666,o),
(406,666,qs),
(495,666,o),
(638,583,o),
(720,440,o),
(720,352,qs),
(720,264,o),
(636,119,o),
(492,34,o),
(404,34,qs)
);
},
{
closed = 1;
nodes = (
(583,480,o),
(497,552,o),
(423,552,qs),
(267,552,l),
(267,148,l),
(319,148,l),
(319,282,l),
(423,282,ls),
(438,282,o),
(446,283,q),
(533,148,l),
(587,148,l),
(493,292,l),
(536,307,o),
(583,372,o),
(583,418,qs)
);
},
{
closed = 1;
nodes = (
(318,326,l),
(318,508,l),
(420,508,ls),
(473,508,o),
(532,461,o),
(532,418,qs),
(532,374,o),
(473,326,o),
(420,326,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 93 values pushed */
34 1 5 9 1 74 6 1 4 5 3 5 4 3 126 10 1 1 0 2 7 1 2 103 0 7 0 8 9 7 8 101 12 1 9 0 5 4 9 5 101 11 1 3 0 0 3 87 11 1 3 3 0 95 0 0 3 0 79 48 48 16 16 0 0 48 56 48 55 54 52 45 43 42 41 40 38 36 35 16 31 16 30 24 22 0 15 0 14 38 13 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 809;
}
);
note = registered;
unicode = 174;
},
{
glyphname = macron;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0304;
}
);
width = 600;
}
);
note = macron;
unicode = 175;
},
{
glyphname = degree;
kernLeft = degree;
kernRight = degree;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(253,388,o),
(327,430,o),
(369,503,o),
(369,547,qs),
(369,590,o),
(327,663,o),
(253,705,o),
(209,705,qs),
(165,705,o),
(92,663,o),
(50,590,o),
(50,547,qs),
(50,503,o),
(92,430,o),
(165,388,o),
(209,388,qs)
);
},
{
closed = 1;
nodes = (
(160,430,o),
(94,497,o),
(94,547,qs),
(94,596,o),
(160,663,o),
(209,663,qs),
(258,663,o),
(325,596,o),
(325,547,qs),
(325,497,o),
(258,430,o),
(209,430,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 103 5 1 3 1 1 3 87 5 1 3 3 1 95 4 1 1 3 1 79 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 419;
}
);
note = degree;
unicode = 176;
},
{
glyphname = plusminus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,591,l),
(256,591,l),
(256,412,l),
(70,412,l),
(70,352,l),
(256,352,l),
(256,173,l),
(319,173,l),
(319,352,l),
(505,352,l),
(505,412,l),
(319,412,l)
);
},
{
closed = 1;
nodes = (
(505,0,l),
(505,59,l),
(70,59,l),
(70,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
8 5 2 3 2 1 0 1 3 0 101 0 4 0 1 6 4 1 101 0 6 6 7 93 0 7 7 67 7 76 0 0 15 14 13 12 0 11 0 11 17 17 17 17 17 9 10 25 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = plusminus;
unicode = 177;
},
{
glyphname = uni00B2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = two.dnom;
}
);
width = 430;
}
);
note = uni00B2;
unicode = 178;
},
{
glyphname = uni00B3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = three.dnom;
}
);
width = 430;
}
);
note = uni00B3;
unicode = 179;
},
{
glyphname = acute;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = acutecomb;
}
);
width = 600;
}
);
note = acute;
unicode = 180;
},
{
glyphname = uni00B5;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni03BC;
}
);
width = 678;
}
);
note = uni00B5;
unicode = 181;
},
{
glyphname = paragraph;
kernLeft = paragraph;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(286,-100,l),
(286,686,l),
(458,686,l),
(458,-100,l),
(518,-100,l),
(518,742,l),
(236,742,ls),
(138,742,o),
(21,649,o),
(21,569,qs),
(21,490,o),
(134,396,o),
(226,395,q),
(226,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 0 3 2 3 0 2 126 4 1 2 2 130 0 3 3 1 93 0 1 1 68 3 76 17 17 17 36 16 5 10 25 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = paragraph;
unicode = 182;
},
{
glyphname = periodcentered;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,216,o),
(180,247,o),
(180,271,qs),
(180,295,o),
(149,326,o),
(126,326,qs),
(103,326,o),
(73,295,o),
(73,271,qs),
(73,247,o),
(103,216,o),
(126,216,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 252;
}
);
note = periodcentered;
unicode = 183;
},
{
glyphname = cedilla;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0327;
}
);
width = 600;
}
);
note = cedilla;
unicode = 184;
},
{
glyphname = uni00B9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = one.dnom;
}
);
width = 430;
}
);
note = uni00B9;
unicode = 185;
},
{
glyphname = ordmasculine;
kernLeft = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(256,427,o),
(335,468,o),
(380,541,o),
(380,587,qs),
(380,633,o),
(335,705,o),
(256,746,o),
(207,746,qs),
(158,746,o),
(79,705,o),
(34,633,o),
(34,587,qs),
(34,541,o),
(79,468,o),
(158,427,o),
(207,427,qs)
);
},
{
closed = 1;
nodes = (
(153,472,o),
(86,536,o),
(86,587,qs),
(86,638,o),
(154,702,o),
(207,702,qs),
(260,702,o),
(328,638,o),
(328,587,qs),
(328,536,o),
(261,472,o),
(207,472,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
5 1 3 4 1 1 3 1 99 0 2 2 0 95 0 0 0 104 2 76 16 16 0 0 16 27 16 26 22 20 0 15 0 14 38 6 12 21 
CALL[ ]	/* CallFunction */";
};
width = 414;
}
);
note = ordmasculine;
unicode = 186;
},
{
glyphname = guillemotright;
kernLeft = guillemotright;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
ref = guilsinglright;
},
{
pos = (178,0);
ref = guilsinglright;
}
);
width = 477;
}
);
note = guillemotright;
unicode = 187;
},
{
glyphname = onequarter;
layers = (
{
layerId = m01;
shapes = (
{
ref = one.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = four.dnom;
}
);
width = 1029;
}
);
note = onequarter;
unicode = 188;
},
{
glyphname = onehalf;
layers = (
{
layerId = m01;
shapes = (
{
ref = one.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = two.dnom;
}
);
width = 1029;
}
);
note = onehalf;
unicode = 189;
},
{
glyphname = threequarters;
layers = (
{
layerId = m01;
shapes = (
{
ref = three.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = four.dnom;
}
);
width = 1029;
}
);
note = threequarters;
unicode = 190;
},
{
glyphname = questiondown;
kernLeft = questiondown;
kernRight = questiondown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,427,o),
(347,457,o),
(347,478,qs),
(347,500,o),
(317,530,o),
(295,530,qs),
(273,530,o),
(243,500,o),
(243,478,qs),
(243,457,o),
(273,427,o),
(295,427,qs)
);
},
{
closed = 1;
nodes = (
(469,-160,o),
(554,-56,q),
(501,-16,l),
(434,-97,o),
(310,-97,qs),
(236,-97,o),
(149,-33,o),
(149,16,qs),
(149,56,o),
(190,111,o),
(233,148,qs),
(266,176,o),
(305,217,o),
(332,276,o),
(332,315,q),
(258,315,l),
(258,272,o),
(216,214,o),
(173,177,qs),
(141,150,o),
(102,108,o),
(75,48,o),
(75,8,qs),
(75,-42,o),
(132,-118,o),
(236,-160,o),
(305,-160,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
36 35 2 3 2 1 74 0 2 1 3 1 2 3 126 0 3 6 1 4 3 4 100 5 1 1 1 0 95 0 0 0 75 1 76 12 12 0 0 12 38 12 37 34 32 23 22 0 11 0 10 36 7 10 21 
CALL[ ]	/* CallFunction */";
};
width = 567;
}
);
note = questiondown;
unicode = 191;
},
{
glyphname = Agrave;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = gravecomb.case;
}
);
width = 717;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = Aacute;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = acutecomb.case;
}
);
width = 717;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Acircumflex;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni0302.case;
}
);
width = 717;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = Atilde;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = tildecomb.case;
}
);
width = 717;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Adieresis;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni0308.case;
}
);
width = 717;
}
);
note = Adieresis;
unicode = 196;
},
{
glyphname = Aring;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,175);
ref = uni030A;
}
);
width = 717;
}
);
note = Aring;
unicode = 197;
},
{
glyphname = AE;
kernLeft = A;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(552,324,l),
(915,324,l),
(915,387,l),
(552,387,l),
(552,636,l),
(958,636,l),
(958,700,l),
(429,700,l),
(2,0,l),
(79,0,l),
(192,187,l),
(479,187,l),
(479,0,l),
(973,0,l),
(973,64,l),
(552,64,l)
);
},
{
closed = 1;
nodes = (
(464,636,l),
(479,636,l),
(479,247,l),
(228,247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 5 0 6 9 5 6 101 11 1 9 0 1 7 9 1 101 8 1 4 4 3 93 0 3 3 66 75 10 1 7 7 0 93 2 1 0 0 67 0 76 16 16 0 0 16 19 16 19 18 17 0 15 0 15 17 17 17 17 17 17 17 12 10 27 
CALL[ ]	/* CallFunction */";
};
width = 1033;
}
);
note = AE;
unicode = 198;
},
{
glyphname = Ccedilla;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (704,0);
ref = uni0327;
}
);
width = 719;
}
);
note = Ccedilla;
unicode = 199;
},
{
glyphname = Egrave;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = gravecomb.case;
}
);
width = 669;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = Eacute;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = acutecomb.case;
}
);
width = 669;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni0302.case;
}
);
width = 669;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = Edieresis;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni0308.case;
}
);
width = 669;
}
);
note = Edieresis;
unicode = 203;
},
{
glyphname = Igrave;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = gravecomb.case;
}
);
width = 302;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = Iacute;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = acutecomb.case;
}
);
width = 302;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = Icircumflex;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0302.case;
}
);
width = 302;
}
);
note = Icircumflex;
unicode = 206;
},
{
glyphname = Idieresis;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0308.case;
}
);
width = 302;
}
);
note = Idieresis;
unicode = 207;
},
{
glyphname = Eth;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = D;
},
{
pos = (507,0);
ref = uni0335.case;
}
);
width = 831;
}
);
note = Eth;
unicode = 208;
},
{
glyphname = Ntilde;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = tildecomb.case;
}
);
width = 813;
}
);
note = Ntilde;
unicode = 209;
},
{
glyphname = Ograve;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = gravecomb.case;
}
);
width = 839;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = Oacute;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = acutecomb.case;
}
);
width = 839;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni0302.case;
}
);
width = 839;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = Otilde;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = tildecomb.case;
}
);
width = 839;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Odieresis;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni0308.case;
}
);
width = 839;
}
);
note = Odieresis;
unicode = 214;
},
{
glyphname = multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(421,526,l),
(288,392,l),
(154,526,l),
(114,483,l),
(246,350,l),
(114,217,l),
(154,174,l),
(288,308,l),
(421,174,l),
(461,217,l),
(329,350,l),
(461,483,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
8 2 1 48 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = multiply;
unicode = 215;
},
{
glyphname = Oslash;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (832,0);
ref = uni0338.case;
}
);
width = 839;
}
);
note = Oslash;
unicode = 216;
},
{
glyphname = Ugrave;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = gravecomb.case;
}
);
width = 792;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = Uacute;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = acutecomb.case;
}
);
width = 792;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = Ucircumflex;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni0302.case;
}
);
width = 792;
}
);
note = Ucircumflex;
unicode = 219;
},
{
glyphname = Udieresis;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni0308.case;
}
);
width = 792;
}
);
note = Udieresis;
unicode = 220;
},
{
glyphname = Yacute;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = acutecomb.case;
}
);
width = 635;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = Thorn;
kernLeft = B;
kernRight = Thorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,609,l),
(188,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,129,l),
(376,129,ls),
(510,129,o),
(662,257,o),
(662,369,qs),
(662,481,o),
(510,609,o),
(376,609,qs)
);
},
{
closed = 1;
nodes = (
(188,194,l),
(188,545,l),
(374,545,ls),
(478,545,o),
(588,454,o),
(588,369,qs),
(588,285,o),
(478,194,o),
(374,194,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
6 1 3 0 4 5 3 4 101 7 1 5 0 0 1 5 0 101 0 2 2 66 75 0 1 1 67 1 76 13 13 0 0 13 21 13 20 19 17 0 12 0 11 17 17 36 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = Thorn;
unicode = 222;
},
{
glyphname = germandbls;
kernLeft = b;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,412,o),
(563,499,o),
(563,556,qs),
(563,611,o),
(509,697,o),
(408,747,o),
(340,747,qs),
(232,747,o),
(99,618,o),
(99,498,qs),
(99,0,l),
(170,0,l),
(170,504,ls),
(170,592,o),
(260,685,o),
(340,685,qs),
(412,685,o),
(494,613,o),
(494,553,qs),
(494,485,o),
(400,405,o),
(317,404,q),
(317,343,l),
(375,343,ls),
(454,343,o),
(550,268,o),
(550,201,qs),
(550,133,o),
(458,57,o),
(382,57,qs),
(327,57,o),
(285,71,q),
(273,11,l),
(318,-5,o),
(385,-5,qs),
(453,-5,o),
(561,44,o),
(622,136,o),
(622,199,qs),
(622,274,o),
(535,373,o),
(462,389,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 14 values pushed */
41 1 2 3 9 1 1 2 8 1 0 1 3 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 14 values pushed */
41 1 2 3 9 1 1 2 8 1 5 1 3 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 3 0 2 1 3 2 103 0 4 4 6 95 0 6 6 74 75 0 1 1 0 95 5 1 0 0 76 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 3 0 2 1 3 2 103 0 4 4 6 95 0 6 6 74 75 0 5 5 67 75 0 1 1 0 95 0 0 0 76 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 19 36 17 36 35 37 7 10 27 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = germandbls;
unicode = 223;
},
{
glyphname = agrave;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = gravecomb;
}
);
width = 590;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = aacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = acutecomb;
}
);
width = 590;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = acircumflex;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0302;
}
);
width = 590;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = atilde;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = tildecomb;
}
);
width = 590;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = adieresis;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0308;
}
);
width = 590;
}
);
note = adieresis;
unicode = 228;
},
{
glyphname = aring;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni030A;
}
);
width = 590;
}
);
note = aring;
unicode = 229;
},
{
glyphname = ae;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(940,342,o),
(874,462,o),
(757,530,o),
(684,530,qs),
(618,530,o),
(509,473,o),
(475,422,q),
(434,530,o),
(282,530,qs),
(221,530,o),
(109,493,o),
(69,459,q),
(101,406,l),
(134,435,o),
(226,468,o),
(276,468,qs),
(349,468,o),
(425,397,o),
(425,329,qs),
(425,296,l),
(258,296,ls),
(152,296,o),
(55,214,o),
(55,150,qs),
(55,80,o),
(161,-5,o),
(254,-5,qs),
(325,-5,o),
(439,54,o),
(467,116,q),
(504,56,o),
(626,-5,o),
(702,-5,qs),
(765,-5,o),
(869,39,o),
(905,81,q),
(865,127,l),
(804,58,o),
(704,58,qs),
(616,58,o),
(502,160,o),
(497,243,q),
(938,243,l),
(940,259,o),
(940,267,qs)
);
},
{
closed = 1;
nodes = (
(731,469,o),
(813,427,o),
(865,348,o),
(870,296,q),
(497,296,l),
(502,349,o),
(555,427,o),
(636,469,o),
(683,469,qs)
);
},
{
closed = 1;
nodes = (
(196,51,o),
(125,105,o),
(125,152,qs),
(125,194,o),
(189,243,o),
(260,243,qs),
(425,243,l),
(425,201,ls),
(425,132,o),
(335,51,o),
(259,51,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
37 32 31 3 4 5 44 1 0 4 14 8 7 3 1 0 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
8 1 4 10 1 0 1 4 0 101 12 9 2 5 5 6 95 7 1 6 6 75 75 13 11 2 1 1 2 95 3 1 2 2 76 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
8 1 4 10 1 0 1 4 0 101 12 9 2 5 5 6 95 7 1 6 6 75 75 0 1 1 2 95 3 1 2 2 76 75 13 1 11 11 2 95 3 1 2 2 76 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
54 54 45 45 54 64 54 63 59 57 45 53 45 52 23 35 37 35 36 36 36 34 17 14 10 29 
CALL[ ]	/* CallFunction */";
};
width = 986;
}
);
note = ae;
unicode = 230;
},
{
glyphname = ccedilla;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (597,0);
ref = uni0327;
}
);
width = 563;
}
);
note = ccedilla;
unicode = 231;
},
{
glyphname = egrave;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = gravecomb;
}
);
width = 604;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = eacute;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = acutecomb;
}
);
width = 604;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0302;
}
);
width = 604;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = edieresis;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0308;
}
);
width = 604;
}
);
note = edieresis;
unicode = 235;
},
{
glyphname = igrave;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = gravecomb;
}
);
width = 269;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = iacute;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = acutecomb;
}
);
width = 269;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = icircumflex;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0302.narrow;
}
);
width = 269;
}
);
note = icircumflex;
unicode = 238;
},
{
glyphname = idieresis;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0308.narrow;
}
);
width = 269;
}
);
note = idieresis;
unicode = 239;
},
{
glyphname = eth;
kernLeft = c;
kernRight = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,658,l),
(528,707,l),
(439,670,l),
(363,718,o),
(253,718,qs),
(166,718,o),
(94,697,q),
(106,636,l),
(178,658,o),
(253,658,qs),
(314,658,o),
(363,638,q),
(132,542,l),
(152,493,l),
(420,605,l),
(466,567,o),
(515,445,o),
(515,362,qs),
(515,324,o),
(513,303,q),
(487,367,o),
(372,436,o),
(296,436,qs),
(223,436,o),
(110,382,o),
(46,281,o),
(46,215,qs),
(46,149,o),
(110,49,o),
(222,-6,o),
(292,-6,qs),
(433,-6,o),
(587,183,o),
(587,347,qs),
(587,535,o),
(487,633,q)
);
},
{
closed = 1;
nodes = (
(216,55,o),
(118,143,o),
(118,215,qs),
(118,288,o),
(217,375,o),
(303,375,qs),
(356,375,o),
(439,333,o),
(486,260,o),
(486,215,qs),
(486,173,o),
(441,100,o),
(355,55,o),
(296,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
33 32 28 3 2 3 35 27 23 22 21 20 6 1 2 15 1 5 4 3 74 34 1 2 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 5 1 4 103 0 2 2 3 95 0 3 3 72 75 6 1 5 5 0 95 0 0 0 73 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 2 1 3 2 103 0 1 0 4 5 1 4 103 6 1 5 5 0 95 0 0 0 73 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
36 36 36 49 36 48 43 35 43 38 35 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 633;
}
);
note = eth;
unicode = 240;
},
{
glyphname = ntilde;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,1);
ref = tildecomb;
}
);
width = 677;
}
);
note = ntilde;
unicode = 241;
},
{
glyphname = ograve;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = gravecomb;
}
);
width = 627;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = oacute;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = acutecomb;
}
);
width = 627;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0302;
}
);
width = 627;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = otilde;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = tildecomb;
}
);
width = 627;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = odieresis;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0308;
}
);
width = 627;
}
);
note = odieresis;
unicode = 246;
},
{
glyphname = divide;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,493,o),
(335,521,o),
(335,541,qs),
(335,563,o),
(308,590,o),
(287,590,qs),
(267,590,o),
(240,562,o),
(240,541,qs),
(240,521,o),
(267,493,o),
(287,493,qs)
);
},
{
closed = 1;
nodes = (
(505,320,l),
(505,379,l),
(70,379,l),
(70,320,l)
);
},
{
closed = 1;
nodes = (
(307,110,o),
(335,138,o),
(335,159,qs),
(335,180,o),
(307,207,o),
(287,207,qs),
(267,207,o),
(240,180,o),
(240,159,qs),
(240,138,o),
(267,110,o),
(287,110,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 0 6 1 1 2 0 1 103 0 2 0 3 4 2 3 101 0 4 5 5 4 87 0 4 4 5 95 7 1 5 4 5 79 16 16 0 0 16 27 16 26 22 20 15 14 13 12 0 11 0 10 36 8 10 21 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = divide;
unicode = 247;
},
{
glyphname = oslash;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (620,-1);
ref = uni0338;
}
);
width = 627;
}
);
note = oslash;
unicode = 248;
},
{
glyphname = ugrave;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = gravecomb;
}
);
width = 673;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uacute;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = acutecomb;
}
);
width = 673;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = ucircumflex;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0302;
}
);
width = 673;
}
);
note = ucircumflex;
unicode = 251;
},
{
glyphname = udieresis;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0308;
}
);
width = 673;
}
);
note = udieresis;
unicode = 252;
},
{
glyphname = yacute;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = acutecomb;
}
);
width = 542;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = thorn;
kernLeft = b;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(306,530,o),
(202,477,o),
(170,427,q),
(170,742,l),
(99,742,l),
(99,-194,l),
(170,-194,l),
(170,99,l),
(203,48,o),
(306,-5,o),
(370,-5,qs),
(445,-5,o),
(564,62,o),
(632,184,o),
(632,263,qs),
(632,341,o),
(564,463,o),
(444,530,o),
(370,530,qs)
);
},
{
closed = 1;
nodes = (
(309,58,o),
(220,109,o),
(169,203,o),
(169,263,qs),
(169,323,o),
(220,416,o),
(309,468,o),
(365,468,qs),
(420,468,o),
(510,416,o),
(561,323,o),
(561,263,qs),
(561,203,o),
(510,109,o),
(420,58,o),
(365,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
15 10 2 5 4 1 74 0 2 2 68 75 0 4 4 3 95 6 1 3 3 75 75 7 1 5 5 0 95 0 0 0 76 75 0 1 1 71 1 76 19 19 0 0 19 34 19 33 27 25 0 18 0 17 17 19 38 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = thorn;
unicode = 254;
},
{
glyphname = ydieresis;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = uni0308;
}
);
width = 542;
}
);
note = ydieresis;
unicode = 255;
},
{
glyphname = Amacron;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni0304.case;
}
);
width = 717;
}
);
note = Amacron;
unicode = 256;
},
{
glyphname = amacron;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0304;
}
);
width = 590;
}
);
note = amacron;
unicode = 257;
},
{
glyphname = Abreve;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni0306.case;
}
);
width = 717;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = abreve;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0306;
}
);
width = 590;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = Aogonek;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (1014,0);
ref = uni0328;
}
);
width = 717;
}
);
note = Aogonek;
unicode = 260;
},
{
glyphname = aogonek;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (795,0);
ref = uni0328;
}
);
width = 590;
}
);
note = aogonek;
unicode = 261;
},
{
glyphname = Cacute;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (710,0);
ref = acutecomb.case;
}
);
width = 719;
}
);
note = Cacute;
unicode = 262;
},
{
glyphname = cacute;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (599,1);
ref = acutecomb;
}
);
width = 563;
}
);
note = cacute;
unicode = 263;
},
{
glyphname = Ccircumflex;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (710,0);
ref = uni0302.case;
}
);
width = 719;
}
);
note = Ccircumflex;
unicode = 264;
},
{
glyphname = ccircumflex;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (599,1);
ref = uni0302;
}
);
width = 563;
}
);
note = ccircumflex;
unicode = 265;
},
{
glyphname = Cdotaccent;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (710,0);
ref = uni0307.case;
}
);
width = 719;
}
);
note = Cdotaccent;
unicode = 266;
},
{
glyphname = cdotaccent;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (599,1);
ref = uni0307;
}
);
width = 563;
}
);
note = cdotaccent;
unicode = 267;
},
{
glyphname = Ccaron;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (710,0);
ref = uni030C.case;
}
);
width = 719;
}
);
note = Ccaron;
unicode = 268;
},
{
glyphname = ccaron;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (599,1);
ref = uni030C;
}
);
width = 563;
}
);
note = ccaron;
unicode = 269;
},
{
glyphname = Dcaron;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (683,-1);
ref = uni030C.case;
}
);
width = 826;
}
);
note = Dcaron;
unicode = 270;
},
{
glyphname = dcaron;
kernLeft = c;
kernRight = dcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (972,42);
ref = caroncomb.alt;
}
);
width = 678;
}
);
note = dcaron;
unicode = 271;
},
{
glyphname = Dcroat;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = D;
},
{
pos = (507,0);
ref = uni0335.case;
}
);
width = 831;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = dcroat;
kernLeft = c;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (783,194);
ref = uni0335;
}
);
width = 678;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = Emacron;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni0304.case;
}
);
width = 669;
}
);
note = Emacron;
unicode = 274;
},
{
glyphname = emacron;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0304;
}
);
width = 604;
}
);
note = emacron;
unicode = 275;
},
{
glyphname = Ebreve;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni0306.case;
}
);
width = 669;
}
);
note = Ebreve;
unicode = 276;
},
{
glyphname = ebreve;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0306;
}
);
width = 604;
}
);
note = ebreve;
unicode = 277;
},
{
glyphname = Edotaccent;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni0307.case;
}
);
width = 669;
}
);
note = Edotaccent;
unicode = 278;
},
{
glyphname = edotaccent;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0307;
}
);
width = 604;
}
);
note = edotaccent;
unicode = 279;
},
{
glyphname = Eogonek;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (908,0);
ref = uni0328;
}
);
width = 669;
}
);
note = Eogonek;
unicode = 280;
},
{
glyphname = eogonek;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(558,341,o),
(492,462,o),
(376,530,o),
(303,530,qs),
(230,530,o),
(113,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(241,-5,o),
(322,-5,qs),
(347,-5,o),
(377,0,q),
(320,-58,o),
(320,-122,qs),
(320,-167,o),
(380,-220,o),
(430,-220,qs),
(479,-220,o),
(515,-196,q),
(499,-157,l),
(488,-166,o),
(455,-176,o),
(438,-176,qs),
(408,-176,o),
(372,-147,o),
(372,-118,qs),
(372,-85,o),
(421,-12,o),
(487,45,qs),
(515,70,o),
(525,81,q),
(485,127,l),
(455,93,o),
(373,58,o),
(324,58,qs),
(237,58,o),
(123,159,o),
(117,241,q),
(557,241,l),
(558,263,ls)
);
},
{
closed = 1;
nodes = (
(380,469,o),
(483,372,o),
(490,294,q),
(117,294,l),
(124,372,o),
(227,469,o),
(303,469,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
8 7 2 1 0 27 1 4 1 19 1 2 4 20 1 3 2 4 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 6 0 0 1 6 0 101 8 1 7 7 5 95 0 5 5 75 75 0 1 1 4 95 0 4 4 76 75 0 2 2 3 95 0 3 3 77 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 6 0 0 1 6 0 101 0 2 0 3 2 3 99 8 1 7 7 5 95 0 5 5 75 75 0 1 1 4 95 0 4 4 76 4 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
42 42 42 48 42 47 22 38 37 36 42 34 16 9 10 27 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = eogonek;
unicode = 281;
},
{
glyphname = Ecaron;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni030C.case;
}
);
width = 669;
}
);
note = Ecaron;
unicode = 282;
},
{
glyphname = ecaron;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni030C;
}
);
width = 604;
}
);
note = ecaron;
unicode = 283;
},
{
glyphname = Gcircumflex;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (708,0);
ref = uni0302.case;
}
);
width = 773;
}
);
note = Gcircumflex;
unicode = 284;
},
{
glyphname = gcircumflex;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (625,1);
ref = uni0302;
}
);
width = 686;
}
);
note = gcircumflex;
unicode = 285;
},
{
glyphname = Gbreve;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (708,0);
ref = uni0306.case;
}
);
width = 773;
}
);
note = Gbreve;
unicode = 286;
},
{
glyphname = gbreve;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (625,1);
ref = uni0306;
}
);
width = 686;
}
);
note = gbreve;
unicode = 287;
},
{
glyphname = Gdotaccent;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (708,0);
ref = uni0307.case;
}
);
width = 773;
}
);
note = Gdotaccent;
unicode = 288;
},
{
glyphname = gdotaccent;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (625,1);
ref = uni0307;
}
);
width = 686;
}
);
note = gdotaccent;
unicode = 289;
},
{
glyphname = Gcommaaccent;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (704,0);
ref = uni0326;
}
);
width = 773;
}
);
note = Gcommaaccent;
unicode = 290;
},
{
glyphname = gcommaaccent;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (625,1);
ref = uni0312;
}
);
width = 686;
}
);
note = gcommaaccent;
unicode = 291;
},
{
glyphname = Hcircumflex;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (706,0);
ref = uni0302.case;
}
);
width = 813;
}
);
note = Hcircumflex;
unicode = 292;
},
{
glyphname = hcircumflex;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (435,42);
ref = uni0302.case;
}
);
width = 677;
}
);
note = hcircumflex;
unicode = 293;
},
{
glyphname = Hbar;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = H;
},
{
pos = (835,109);
ref = uni0336;
}
);
width = 823;
}
);
note = Hbar;
unicode = 294;
},
{
glyphname = hbar;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (495,194);
ref = uni0335;
}
);
width = 677;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = Itilde;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = tildecomb.case;
}
);
width = 302;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = itilde;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = tildecomb.narrow;
}
);
width = 269;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = Imacron;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0304.narrow.case;
}
);
width = 302;
}
);
note = Imacron;
unicode = 298;
},
{
glyphname = imacron;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0304.narrow;
}
);
width = 269;
}
);
note = imacron;
unicode = 299;
},
{
glyphname = Ibreve;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0306.case;
}
);
width = 302;
}
);
note = Ibreve;
unicode = 300;
},
{
glyphname = ibreve;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0306.narrow;
}
);
width = 269;
}
);
note = ibreve;
unicode = 301;
},
{
glyphname = Iogonek;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (487,0);
ref = uni0328.i;
}
);
width = 302;
}
);
note = Iogonek;
unicode = 302;
},
{
glyphname = iogonek;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0307.i;
},
{
pos = (469,0);
ref = uni0328.i;
}
);
width = 269;
}
);
note = iogonek;
unicode = 303;
},
{
glyphname = Idotaccent;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0307.case;
}
);
width = 302;
}
);
note = Idotaccent;
unicode = 304;
},
{
glyphname = dotlessi;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(170,0,l),
(170,526,l),
(99,526,l),
(99,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 69 75 0 1 1 67 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 269;
}
);
note = dotlessi;
unicode = 305;
},
{
glyphname = IJ;
kernLeft = B;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(458,-6,o),
(610,152,o),
(610,302,qs),
(610,700,l),
(536,700,l),
(536,299,ls),
(536,179,o),
(429,60,o),
(329,60,qs),
(273,60,o),
(170,92,o),
(128,122,q),
(98,63,l),
(143,31,o),
(262,-6,o),
(327,-6,qs)
);
},
{
closed = 1;
nodes = (
(182,302,l),
(182,700,l),
(108,700,l),
(108,302,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
3 2 2 0 4 1 74 0 4 4 1 93 3 1 1 1 66 75 0 0 0 2 95 5 1 2 2 73 2 76 0 0 19 18 17 16 0 15 0 14 19 37 6 10 22 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = IJ;
unicode = 306;
},
{
glyphname = ij;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,0);
ref = uni0307.i;
},
{
pos = (269,0);
ref = uni0237;
},
{
pos = (709,1);
ref = uni0307.i;
}
);
width = 543;
}
);
note = ij;
unicode = 307;
},
{
glyphname = Jcircumflex;
kernLeft = J;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = J;
},
{
pos = (529,0);
ref = uni0302.case;
}
);
width = 501;
}
);
note = Jcircumflex;
unicode = 308;
},
{
glyphname = jcircumflex;
kernLeft = j;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (440,1);
ref = uni0302.narrow;
}
);
width = 274;
}
);
note = jcircumflex;
unicode = 309;
},
{
glyphname = Kcommaaccent;
kernLeft = B;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (673,0);
ref = uni0326;
}
);
width = 711;
}
);
note = Kcommaaccent;
unicode = 310;
},
{
glyphname = kcommaaccent;
kernLeft = b;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (611,0);
ref = uni0326;
}
);
width = 601;
}
);
note = kcommaaccent;
unicode = 311;
},
{
glyphname = kgreenlandic;
kernLeft = i;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(593,0,l),
(347,311,l),
(572,526,l),
(484,526,l),
(170,239,l),
(170,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,150,l),
(294,264,l),
(506,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 1 3 0 1 1 74 2 1 1 1 69 75 3 1 0 0 67 0 76 18 18 17 18 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 590;
}
);
note = kgreenlandic;
unicode = 312;
},
{
glyphname = Lacute;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (451,0);
ref = acutecomb.case;
}
);
width = 589;
}
);
note = Lacute;
unicode = 313;
},
{
glyphname = lacute;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (435,217);
ref = acutecomb;
}
);
width = 269;
}
);
note = lacute;
unicode = 314;
},
{
glyphname = Lcommaaccent;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (658,0);
ref = uni0326;
}
);
width = 589;
}
);
note = Lcommaaccent;
unicode = 315;
},
{
glyphname = lcommaaccent;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (435,0);
ref = uni0326;
}
);
width = 269;
}
);
note = lcommaaccent;
unicode = 316;
},
{
glyphname = Lcaron;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (740,0);
ref = caroncomb.alt;
}
);
width = 589;
}
);
note = Lcaron;
unicode = 317;
},
{
glyphname = lcaron;
kernLeft = b;
kernRight = dcaron;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (562,42);
ref = caroncomb.alt;
}
);
width = 269;
}
);
note = lcaron;
unicode = 318;
},
{
glyphname = Ldot;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (262,-43);
ref = periodcentered.loclCAT.case;
}
);
width = 589;
}
);
note = Ldot;
unicode = 319;
},
{
glyphname = ldot;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (195,81);
ref = periodcentered.loclCAT;
}
);
width = 314;
}
);
note = ldot;
unicode = 320;
},
{
glyphname = Lslash;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = L;
},
{
pos = (358,-12);
ref = uni0337.case;
}
);
width = 594;
}
);
note = Lslash;
unicode = 321;
},
{
glyphname = lslash;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = l;
},
{
pos = (342,-27);
ref = uni0337;
}
);
width = 279;
}
);
note = lslash;
unicode = 322;
},
{
glyphname = Nacute;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = acutecomb.case;
}
);
width = 813;
}
);
note = Nacute;
unicode = 323;
},
{
glyphname = nacute;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,1);
ref = acutecomb;
}
);
width = 677;
}
);
note = nacute;
unicode = 324;
},
{
glyphname = Ncommaaccent;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = uni0326;
}
);
width = 813;
}
);
note = Ncommaaccent;
unicode = 325;
},
{
glyphname = ncommaaccent;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,0);
ref = uni0326;
}
);
width = 677;
}
);
note = ncommaaccent;
unicode = 326;
},
{
glyphname = Ncaron;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = uni030C.case;
}
);
width = 813;
}
);
note = Ncaron;
unicode = 327;
},
{
glyphname = ncaron;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,1);
ref = uni030C;
}
);
width = 677;
}
);
note = ncaron;
unicode = 328;
},
{
glyphname = napostrophe;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni02BC;
},
{
pos = (73,0);
ref = n;
}
);
width = 750;
}
);
note = napostrophe;
unicode = 329;
},
{
glyphname = Eng;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(626,132,l),
(175,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,568,l),
(626,15,l),
(625,-61,o),
(561,-135,o),
(497,-135,qs),
(411,-135,o),
(356,-61,q),
(319,-113,l),
(350,-154,o),
(443,-199,o),
(497,-199,qs),
(699,-199,o),
(699,28,qs),
(699,700,l),
(626,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
18 13 12 3 2 3 7 6 2 1 2 2 74 5 4 2 3 3 66 75 0 2 2 67 75 0 1 1 0 95 0 0 0 77 0 76 0 0 0 19 0 19 17 20 36 34 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 813;
}
);
note = Eng;
unicode = 330;
},
{
glyphname = eng;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,530,o),
(196,477,o),
(167,429,q),
(167,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,276,ls),
(170,365,o),
(269,466,o),
(354,466,qs),
(430,466,o),
(512,380,o),
(512,298,qs),
(512,-39,ls),
(512,-88,o),
(467,-138,o),
(425,-138,qs),
(373,-138,o),
(343,-111,q),
(318,-165,l),
(337,-182,o),
(396,-199,o),
(429,-199,qs),
(502,-199,o),
(583,-113,o),
(583,-39,qs),
(583,305,ls),
(583,415,o),
(466,530,o),
(367,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
27 1 3 2 10 1 1 3 9 1 0 1 3 74 0 2 2 4 95 6 5 2 4 4 69 75 0 3 3 67 75 0 1 1 0 95 0 0 0 77 0 76 0 0 0 30 0 29 17 19 37 36 37 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 677;
}
);
note = eng;
unicode = 331;
},
{
glyphname = Omacron;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni0304.case;
}
);
width = 839;
}
);
note = Omacron;
unicode = 332;
},
{
glyphname = omacron;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0304;
}
);
width = 627;
}
);
note = omacron;
unicode = 333;
},
{
glyphname = Obreve;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni0306.case;
}
);
width = 839;
}
);
note = Obreve;
unicode = 334;
},
{
glyphname = obreve;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0306;
}
);
width = 627;
}
);
note = obreve;
unicode = 335;
},
{
glyphname = Ohungarumlaut;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni030B.case;
}
);
width = 839;
}
);
note = Ohungarumlaut;
unicode = 336;
},
{
glyphname = ohungarumlaut;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni030B;
}
);
width = 627;
}
);
note = ohungarumlaut;
unicode = 337;
},
{
glyphname = OE;
kernLeft = at;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(640,324,l),
(1002,324,l),
(1002,387,l),
(640,387,l),
(640,636,l),
(1046,636,l),
(1046,700,l),
(427,700,ls),
(316,700,o),
(146,611,o),
(52,452,o),
(52,349,qs),
(52,247,o),
(146,89,o),
(317,0,o),
(427,0,qs),
(1061,0,l),
(1061,64,l),
(640,64,l)
);
},
{
closed = 1;
nodes = (
(339,64,o),
(200,136,o),
(125,266,o),
(125,349,qs),
(125,433,o),
(200,563,o),
(339,636,o),
(430,636,qs),
(566,636,l),
(566,64,l),
(430,64,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 0 4 5 3 4 101 6 1 2 2 1 93 0 1 1 66 75 9 7 8 3 5 5 0 93 0 0 0 67 0 76 19 19 0 0 19 29 19 28 22 20 0 18 0 18 17 17 17 38 33 10 10 25 
CALL[ ]	/* CallFunction */";
};
width = 1121;
}
);
note = OE;
unicode = 338;
},
{
glyphname = oe;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1022,341,o),
(956,462,o),
(840,530,o),
(767,530,qs),
(692,530,o),
(575,458,o),
(544,396,q),
(512,458,o),
(391,530,o),
(314,530,qs),
(238,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(238,-5,o),
(314,-5,qs),
(392,-5,o),
(512,68,o),
(544,131,q),
(577,68,o),
(703,-5,o),
(786,-5,qs),
(849,-5,o),
(953,39,o),
(988,81,q),
(948,127,l),
(919,93,o),
(837,58,o),
(788,58,qs),
(701,58,o),
(586,159,o),
(580,241,q),
(1021,241,l),
(1022,263,ls)
);
},
{
closed = 1;
nodes = (
(843,469,o),
(947,371,o),
(954,294,q),
(580,294,l),
(587,371,o),
(691,469,o),
(767,469,qs)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(370,468,o),
(459,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(459,109,o),
(370,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
28 1 6 7 14 8 7 3 1 0 2 74 0 6 0 0 1 6 0 101 8 10 2 7 7 4 95 5 1 4 4 75 75 11 9 2 1 1 2 95 3 1 2 2 76 2 76 43 43 36 36 43 58 43 57 51 49 36 42 36 41 22 36 38 36 37 34 16 12 10 27 
CALL[ ]	/* CallFunction */";
};
width = 1068;
}
);
note = oe;
unicode = 339;
},
{
glyphname = Racute;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = acutecomb.case;
}
);
width = 723;
}
);
note = Racute;
unicode = 340;
},
{
glyphname = racute;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (532,1);
ref = acutecomb;
}
);
width = 401;
}
);
note = racute;
unicode = 341;
},
{
glyphname = Rcommaaccent;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = uni0326;
}
);
width = 723;
}
);
note = Rcommaaccent;
unicode = 342;
},
{
glyphname = rcommaaccent;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (435,0);
ref = uni0326;
}
);
width = 401;
}
);
note = rcommaaccent;
unicode = 343;
},
{
glyphname = Rcaron;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = uni030C.case;
}
);
width = 723;
}
);
note = Rcaron;
unicode = 344;
},
{
glyphname = rcaron;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (532,1);
ref = uni030C;
}
);
width = 401;
}
);
note = rcaron;
unicode = 345;
},
{
glyphname = Sacute;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = acutecomb.case;
}
);
width = 615;
}
);
note = Sacute;
unicode = 346;
},
{
glyphname = sacute;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,1);
ref = acutecomb;
}
);
width = 489;
}
);
note = sacute;
unicode = 347;
},
{
glyphname = Scircumflex;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = uni0302.case;
}
);
width = 615;
}
);
note = Scircumflex;
unicode = 348;
},
{
glyphname = scircumflex;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,1);
ref = uni0302;
}
);
width = 489;
}
);
note = scircumflex;
unicode = 349;
},
{
glyphname = Scedilla;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = uni0327;
}
);
width = 615;
}
);
note = Scedilla;
unicode = 350;
},
{
glyphname = scedilla;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,0);
ref = uni0327;
}
);
width = 489;
}
);
note = scedilla;
unicode = 351;
},
{
glyphname = Scaron;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = uni030C.case;
}
);
width = 615;
}
);
note = Scaron;
unicode = 352;
},
{
glyphname = scaron;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,1);
ref = uni030C;
}
);
width = 489;
}
);
note = scaron;
unicode = 353;
},
{
glyphname = uni0162;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (587,0);
ref = uni0327;
}
);
width = 574;
}
);
note = uni0162;
unicode = 354;
},
{
glyphname = uni0163;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (549,0);
ref = uni0327;
}
);
width = 406;
}
);
note = uni0163;
unicode = 355;
},
{
glyphname = Tcaron;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (587,0);
ref = uni030C.case;
}
);
width = 574;
}
);
note = Tcaron;
unicode = 356;
},
{
glyphname = tcaron;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (573,0);
ref = caroncomb.alt.short;
}
);
width = 406;
}
);
note = tcaron;
unicode = 357;
},
{
glyphname = Tbar;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (587,-11);
ref = uni0335.case;
}
);
width = 574;
}
);
note = Tbar;
unicode = 358;
},
{
glyphname = tbar;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = t;
},
{
pos = (485,-143);
ref = uni0335.t;
}
);
width = 416;
}
);
note = tbar;
unicode = 359;
},
{
glyphname = Utilde;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = tildecomb.case;
}
);
width = 792;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = utilde;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = tildecomb;
}
);
width = 673;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = Umacron;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni0304.case;
}
);
width = 792;
}
);
note = Umacron;
unicode = 362;
},
{
glyphname = umacron;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0304;
}
);
width = 673;
}
);
note = umacron;
unicode = 363;
},
{
glyphname = Ubreve;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni0306.case;
}
);
width = 792;
}
);
note = Ubreve;
unicode = 364;
},
{
glyphname = ubreve;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0306;
}
);
width = 673;
}
);
note = ubreve;
unicode = 365;
},
{
glyphname = Uring;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,175);
ref = uni030A;
}
);
width = 792;
}
);
note = Uring;
unicode = 366;
},
{
glyphname = uring;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni030A;
}
);
width = 673;
}
);
note = uring;
unicode = 367;
},
{
glyphname = Uhungarumlaut;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni030B.case;
}
);
width = 792;
}
);
note = Uhungarumlaut;
unicode = 368;
},
{
glyphname = uhungarumlaut;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni030B;
}
);
width = 673;
}
);
note = uhungarumlaut;
unicode = 369;
},
{
glyphname = Uogonek;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(611,302,ls),
(611,180,o),
(501,60,o),
(396,60,qs),
(292,60,o),
(182,180,o),
(182,302,qs),
(182,700,l),
(108,700,l),
(108,299,ls),
(108,155,o),
(251,-1,o),
(380,-6,q),
(303,-54,o),
(303,-125,qs),
(303,-169,o),
(363,-220,o),
(414,-220,qs),
(464,-220,o),
(498,-196,q),
(482,-157,l),
(459,-176,o),
(421,-176,qs),
(392,-176,o),
(356,-147,o),
(356,-120,qs),
(356,-43,o),
(504,8,qs),
(683,69,o),
(683,299,qs),
(683,700,l),
(611,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
10 1 0 2 11 1 1 0 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
6 5 2 3 3 66 75 0 4 4 2 95 0 2 2 73 75 0 0 0 1 95 0 1 1 77 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
6 5 2 3 3 66 75 0 4 4 2 95 0 2 2 76 75 0 0 0 1 95 0 1 1 77 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 0 0 1 0 1 99 6 5 2 3 3 66 75 0 4 4 2 95 0 2 2 76 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 31 0 31 35 19 20 35 39 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 792;
}
);
note = Uogonek;
unicode = 370;
},
{
glyphname = uogonek;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (872,0);
ref = uni0328;
}
);
width = 673;
}
);
note = uogonek;
unicode = 371;
},
{
glyphname = Wcircumflex;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (856,0);
ref = uni0302.case;
}
);
width = 1111;
}
);
note = Wcircumflex;
unicode = 372;
},
{
glyphname = wcircumflex;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (738,-2);
ref = uni0302;
}
);
width = 879;
}
);
note = wcircumflex;
unicode = 373;
},
{
glyphname = Ycircumflex;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = uni0302.case;
}
);
width = 635;
}
);
note = Ycircumflex;
unicode = 374;
},
{
glyphname = ycircumflex;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = uni0302;
}
);
width = 542;
}
);
note = ycircumflex;
unicode = 375;
},
{
glyphname = Ydieresis;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = uni0308.case;
}
);
width = 635;
}
);
note = Ydieresis;
unicode = 376;
},
{
glyphname = Zacute;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (632,0);
ref = acutecomb.case;
}
);
width = 651;
}
);
note = Zacute;
unicode = 377;
},
{
glyphname = zacute;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (556,1);
ref = acutecomb;
}
);
width = 511;
}
);
note = zacute;
unicode = 378;
},
{
glyphname = Zdotaccent;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (632,0);
ref = uni0307.case;
}
);
width = 651;
}
);
note = Zdotaccent;
unicode = 379;
},
{
glyphname = zdotaccent;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (556,1);
ref = uni0307;
}
);
width = 511;
}
);
note = zdotaccent;
unicode = 380;
},
{
glyphname = Zcaron;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (632,0);
ref = uni030C.case;
}
);
width = 651;
}
);
note = Zcaron;
unicode = 381;
},
{
glyphname = zcaron;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (556,1);
ref = uni030C;
}
);
width = 511;
}
);
note = zcaron;
unicode = 382;
},
{
glyphname = longs;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,747,o),
(122,663,o),
(122,591,qs),
(122,526,l),
(28,526,l),
(28,466,l),
(122,466,l),
(122,0,l),
(193,0,l),
(193,588,ls),
(193,637,o),
(239,687,o),
(284,687,qs),
(330,687,o),
(361,661,q),
(386,714,l),
(367,730,o),
(311,747,o),
(280,747,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
2 1 0 4 3 1 3 0 2 74 0 0 0 4 95 5 1 4 4 74 75 0 2 2 3 93 0 3 3 69 75 0 1 1 67 1 76 0 0 0 18 0 17 17 17 19 36 6 10 24 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = longs;
unicode = 383;
},
{
glyphname = uni018F;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,706,o),
(182,656,o),
(133,610,q),
(177,559,l),
(265,640,o),
(401,640,qs),
(478,640,o),
(606,571,o),
(685,450,o),
(690,375,q),
(52,375,l),
(52,353,ls),
(52,251,o),
(144,87,o),
(307,-6,o),
(409,-6,qs),
(508,-6,o),
(671,88,o),
(765,251,o),
(765,351,qs),
(765,452,o),
(671,614,o),
(505,706,o),
(401,706,qs)
);
},
{
closed = 1;
nodes = (
(333,58,o),
(210,122,o),
(135,237,o),
(127,312,q),
(689,312,l),
(682,238,o),
(606,123,o),
(484,58,o),
(409,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
20 19 2 1 2 1 74 0 1 0 4 5 1 4 101 0 2 2 3 95 6 1 3 3 72 75 7 1 5 5 0 95 0 0 0 73 0 76 24 24 0 0 24 32 24 31 28 27 0 23 0 22 35 20 38 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 817;
}
);
note = uni018F;
unicode = 399;
},
{
glyphname = florin;
kernLeft = florin;
kernRight = florin;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(391,686,o),
(429,672,o),
(443,659,q),
(474,713,l),
(457,730,o),
(399,747,o),
(368,747,qs),
(295,747,o),
(203,662,o),
(195,591,qs),
(186,517,l),
(92,517,l),
(85,458,l),
(179,458,l),
(117,-39,ls),
(111,-87,o),
(59,-138,o),
(16,-138,qs),
(-32,-138,o),
(-61,-111,q),
(-90,-165,l),
(-73,-182,o),
(-15,-199,o),
(18,-199,qs),
(90,-199,o),
(180,-115,o),
(188,-43,qs),
(250,458,l),
(409,458,l),
(416,517,l),
(255,517,l),
(264,587,ls),
(278,686,o),
(369,686,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
29 1 7 6 30 1 0 7 13 1 3 1 12 1 2 3 4 74 8 1 7 7 6 95 0 6 6 74 75 4 1 1 1 0 93 5 1 0 0 69 75 0 3 3 2 95 0 2 2 77 2 76 0 0 0 33 0 32 35 17 19 36 35 17 18 9 10 27 
CALL[ ]	/* CallFunction */";
};
width = 438;
}
);
note = florin;
unicode = 402;
},
{
glyphname = Ohorn;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(699,647,o),
(772,710,o),
(772,766,qs),
(772,813,o),
(746,850,q),
(699,832,l),
(719,799,o),
(719,768,qs),
(719,692,o),
(620,692,qs),
(595,692,o),
(537,698,qs),
(469,706,o),
(422,706,qs),
(317,706,o),
(148,614,o),
(52,451,o),
(52,350,qs),
(52,249,o),
(147,87,o),
(316,-6,o),
(420,-6,qs),
(524,-6,o),
(691,86,o),
(787,249,o),
(787,350,qs),
(787,443,o),
(704,599,o),
(631,644,q)
);
},
{
closed = 1;
nodes = (
(337,60,o),
(202,136,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(202,564,o),
(337,640,o),
(420,640,qs),
(503,640,o),
(637,564,o),
(713,431,o),
(713,350,qs),
(713,269,o),
(637,136,o),
(503,60,o),
(420,60,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
23 22 2 1 72 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 3 1 95 0 1 1 72 75 4 1 3 3 2 95 0 2 2 66 75 6 1 5 5 0 95 0 0 0 73 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 2 95 0 2 2 66 75 0 4 4 1 95 0 1 1 72 75 6 1 5 5 0 95 0 0 0 73 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
29 29 29 44 29 43 39 24 34 38 37 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 839;
}
);
note = Ohorn;
unicode = 416;
},
{
glyphname = ohorn;
kernLeft = c;
kernRight = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,489,o),
(572,549,o),
(572,592,qs),
(572,635,o),
(545,676,q),
(499,658,l),
(519,625,o),
(519,594,qs),
(519,564,o),
(478,524,o),
(438,524,qs),
(407,524,o),
(380,527,qs),
(372,527,o),
(334,530,o),
(314,530,qs),
(238,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(238,-5,o),
(314,-5,qs),
(390,-5,o),
(512,64,o),
(581,186,o),
(581,263,qs),
(581,332,o),
(526,443,o),
(476,479,q)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(370,468,o),
(459,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(458,109,o),
(369,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
30 1 3 1 1 74 25 24 2 1 72 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
30 1 3 2 1 74 25 24 2 1 72 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 1 95 2 1 1 1 75 75 5 1 4 4 0 95 0 0 0 76 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 2 2 69 75 0 3 3 1 95 0 1 1 75 75 5 1 4 4 0 95 0 0 0 76 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
31 31 31 46 31 45 39 37 35 38 37 6 10 23 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = ohorn;
unicode = 417;
},
{
glyphname = Uhorn;
kernLeft = U;
kernRight = Uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (964,175);
ref = uni031B;
}
);
width = 797;
}
);
note = Uhorn;
unicode = 431;
},
{
glyphname = uhorn;
kernLeft = u;
kernRight = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (839,1);
ref = uni031B;
}
);
width = 679;
}
);
note = uhorn;
unicode = 432;
},
{
glyphname = uni01B7;
kernLeft = uni01B7;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04E0;
}
);
width = 615;
}
);
note = uni01B7;
unicode = 439;
},
{
glyphname = uni01C4;
kernLeft = B;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (798,0);
ref = Z;
},
{
pos = (1430,0);
ref = uni030C.case;
}
);
width = 1456;
}
);
note = uni01C4;
unicode = 452;
},
{
glyphname = uni01C5;
kernLeft = B;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (826,0);
ref = z;
},
{
pos = (1382,1);
ref = uni030C;
}
);
width = 1337;
}
);
note = uni01C5;
unicode = 453;
},
{
glyphname = uni01C6;
kernLeft = c;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (677,0);
ref = z;
},
{
pos = (1233,1);
ref = uni030C;
}
);
width = 1202;
}
);
note = uni01C6;
unicode = 454;
},
{
glyphname = uni01C7;
kernLeft = B;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (589,0);
ref = J;
}
);
width = 1090;
}
);
note = uni01C7;
unicode = 455;
},
{
glyphname = uni01C8;
kernLeft = B;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (589,0);
ref = uni0237;
},
{
pos = (1029,1);
ref = uni0307.i;
}
);
width = 863;
}
);
note = uni01C8;
unicode = 456;
},
{
glyphname = uni01C9;
kernLeft = b;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (269,0);
ref = uni0237;
},
{
pos = (709,1);
ref = uni0307.i;
}
);
width = 543;
}
);
note = uni01C9;
unicode = 457;
},
{
glyphname = uni01CA;
kernLeft = B;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (813,0);
ref = J;
}
);
width = 1314;
}
);
note = uni01CA;
unicode = 458;
},
{
glyphname = uni01CB;
kernLeft = B;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (813,0);
ref = uni0237;
},
{
pos = (1253,1);
ref = uni0307.i;
}
);
width = 1087;
}
);
note = uni01CB;
unicode = 459;
},
{
glyphname = uni01CC;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (677,0);
ref = uni0237;
},
{
pos = (1117,1);
ref = uni0307.i;
}
);
width = 951;
}
);
note = uni01CC;
unicode = 460;
},
{
glyphname = uni01CD;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni030C.case;
}
);
width = 717;
}
);
note = uni01CD;
unicode = 461;
},
{
glyphname = uni01CE;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni030C;
}
);
width = 590;
}
);
note = uni01CE;
unicode = 462;
},
{
glyphname = uni01CF;
layers = (
{
layerId = m01;
width = 302;
}
);
note = uni01CF;
unicode = 463;
},
{
glyphname = uni01D0;
layers = (
{
layerId = m01;
width = 269;
}
);
note = uni01D0;
unicode = 464;
},
{
glyphname = uni01D1;
layers = (
{
layerId = m01;
width = 839;
}
);
note = uni01D1;
unicode = 465;
},
{
glyphname = uni01D2;
layers = (
{
layerId = m01;
width = 627;
}
);
note = uni01D2;
unicode = 466;
},
{
glyphname = uni01D3;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni030C.case;
}
);
width = 792;
}
);
note = uni01D3;
unicode = 467;
},
{
glyphname = uni01D4;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni030C;
}
);
width = 673;
}
);
note = uni01D4;
unicode = 468;
},
{
glyphname = uni01D5;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni01D5;
unicode = 469;
},
{
glyphname = uni01D6;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni01D6;
unicode = 470;
},
{
glyphname = uni01D7;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni01D7;
unicode = 471;
},
{
glyphname = uni01D8;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni01D8;
unicode = 472;
},
{
glyphname = uni01D9;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni01D9;
unicode = 473;
},
{
glyphname = uni01DA;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni01DA;
unicode = 474;
},
{
glyphname = uni01DB;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni01DB;
unicode = 475;
},
{
glyphname = uni01DC;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni01DC;
unicode = 476;
},
{
glyphname = uni01DE;
layers = (
{
layerId = m01;
width = 717;
}
);
note = uni01DE;
unicode = 478;
},
{
glyphname = uni01DF;
layers = (
{
layerId = m01;
width = 590;
}
);
note = uni01DF;
unicode = 479;
},
{
glyphname = uni01E0;
layers = (
{
layerId = m01;
width = 717;
}
);
note = uni01E0;
unicode = 480;
},
{
glyphname = uni01E1;
layers = (
{
layerId = m01;
width = 590;
}
);
note = uni01E1;
unicode = 481;
},
{
glyphname = uni01E2;
layers = (
{
layerId = m01;
width = 1033;
}
);
note = uni01E2;
unicode = 482;
},
{
glyphname = uni01E3;
layers = (
{
layerId = m01;
width = 986;
}
);
note = uni01E3;
unicode = 483;
},
{
glyphname = uni01E4;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (861,-120);
ref = uni0335.case;
scale = (0.9716,1);
}
);
width = 806;
}
);
note = uni01E4;
unicode = 484;
},
{
glyphname = uni01E5;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(580,-11,l),
(586,24,o),
(586,64,qs),
(586,526,l),
(518,526,l),
(518,428,l),
(485,478,o),
(377,530,o),
(310,530,qs),
(235,530,o),
(115,468,o),
(46,355,o),
(46,283,qs),
(46,211,o),
(115,98,o),
(236,35,o),
(310,35,qs),
(375,35,o),
(482,86,o),
(515,133,q),
(515,55,ls),
(515,17,o),
(508,-11,q),
(288,-11,l),
(288,-62,l),
(489,-62,l),
(446,-136,o),
(321,-136,qs),
(261,-136,o),
(152,-98,o),
(114,-64,q),
(78,-118,l),
(119,-156,o),
(250,-199,o),
(323,-199,qs),
(419,-199,o),
(540,-132,o),
(566,-62,q),
(650,-62,l),
(650,-11,l)
);
},
{
closed = 1;
nodes = (
(260,95,o),
(169,143,o),
(118,228,o),
(118,283,qs),
(118,338,o),
(169,423,o),
(260,470,o),
(317,470,qs),
(374,470,o),
(466,423,o),
(517,338,o),
(517,283,qs),
(517,228,o),
(466,143,o),
(374,95,o),
(317,95,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 73 values pushed */
33 19 2 10 9 8 7 2 2 0 2 74 11 1 10 0 5 4 10 5 103 8 1 4 3 1 0 2 4 0 102 0 9 9 6 95 7 1 6 6 75 75 0 2 2 1 95 0 1 1 77 1 76 40 40 40 55 40 54 48 46 19 19 38 37 17 17 37 34 16 12 10 29 
CALL[ ]	/* CallFunction */";
};
width = 691;
}
);
note = uni01E5;
unicode = 485;
},
{
glyphname = Gcaron;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (708,0);
ref = uni030C.case;
}
);
width = 773;
}
);
note = Gcaron;
unicode = 486;
},
{
glyphname = gcaron;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (625,1);
ref = uni030C;
}
);
width = 686;
}
);
note = gcaron;
unicode = 487;
},
{
glyphname = uni01E8;
kernLeft = B;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
},
{
pos = (673,0);
ref = uni030C.case;
}
);
width = 711;
}
);
note = uni01E8;
unicode = 488;
},
{
glyphname = uni01E9;
kernLeft = b;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
ref = k;
},
{
pos = (435,217);
ref = uni030C;
}
);
width = 601;
}
);
note = uni01E9;
unicode = 489;
},
{
glyphname = uni01EA;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,706,o),
(148,614,o),
(52,451,o),
(52,350,qs),
(52,253,o),
(140,96,o),
(294,1,o),
(392,-5,q),
(314,-55,o),
(314,-125,qs),
(314,-169,o),
(373,-220,o),
(424,-220,qs),
(473,-220,o),
(509,-196,q),
(492,-157,l),
(469,-176,o),
(431,-176,qs),
(402,-176,o),
(366,-147,o),
(366,-120,qs),
(366,-79,o),
(450,-10,o),
(516,6,qs),
(592,24,o),
(715,118,o),
(787,262,o),
(787,350,qs),
(787,451,o),
(691,614,o),
(524,706,o),
(420,706,qs)
);
},
{
closed = 1;
nodes = (
(337,60,o),
(202,135,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(202,565,o),
(337,640,o),
(420,640,qs),
(503,640,o),
(637,565,o),
(713,432,o),
(713,350,qs),
(713,268,o),
(637,135,o),
(503,60,o),
(420,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 1 0 2 16 1 1 0 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 3 95 6 1 3 3 72 75 7 1 5 5 2 95 0 2 2 67 75 0 0 0 1 95 0 1 1 77 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 0 1 0 1 99 0 4 4 3 95 6 1 3 3 72 75 7 1 5 5 2 95 0 2 2 67 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
32 32 0 0 32 47 32 46 40 38 0 31 0 30 20 35 44 8 10 23 
CALL[ ]	/* CallFunction */";
};
width = 839;
}
);
note = uni01EA;
unicode = 490;
},
{
glyphname = uni01EB;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,49,o),
(581,178,o),
(581,263,qs),
(581,340,o),
(512,462,o),
(390,530,o),
(314,530,qs),
(238,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(46,187,o),
(114,66,o),
(233,-4,o),
(308,-5,q),
(232,-56,o),
(232,-127,qs),
(232,-169,o),
(292,-220,o),
(343,-220,qs),
(393,-220,o),
(427,-196,q),
(411,-157,l),
(388,-176,o),
(350,-176,qs),
(321,-176,o),
(285,-147,o),
(285,-120,qs),
(285,-86,o),
(344,-20,o),
(426,17,qs)
);
},
{
closed = 1;
nodes = (
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(370,468,o),
(459,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(459,109,o),
(370,58,o),
(314,58,qs),
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
7 1 0 2 8 1 1 0 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 5 5 3 95 0 3 3 75 75 0 4 4 2 95 0 2 2 76 75 0 0 0 1 95 0 1 1 77 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 0 0 1 0 1 99 0 5 5 3 95 0 3 3 75 75 0 4 4 2 95 0 2 2 76 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 41 38 20 35 36 6 10 26 
CALL[ ]	/* CallFunction */";
};
width = 627;
}
);
note = uni01EB;
unicode = 491;
},
{
glyphname = uni01EC;
layers = (
{
layerId = m01;
width = 839;
}
);
note = uni01EC;
unicode = 492;
},
{
glyphname = uni01ED;
layers = (
{
layerId = m01;
width = 627;
}
);
note = uni01ED;
unicode = 493;
},
{
glyphname = uni01EE;
kernLeft = uni01B7;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04E0;
},
{
pos = (597,0);
ref = uni030C.case;
}
);
width = 615;
}
);
note = uni01EE;
unicode = 494;
},
{
glyphname = uni01EF;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04E1;
},
{
pos = (522,1);
ref = uni030C;
}
);
width = 514;
}
);
note = uni01EF;
unicode = 495;
},
{
glyphname = uni01F0;
layers = (
{
layerId = m01;
width = 274;
}
);
note = uni01F0;
unicode = 496;
},
{
glyphname = uni01F4;
layers = (
{
layerId = m01;
width = 773;
}
);
note = uni01F4;
unicode = 500;
},
{
glyphname = uni01F5;
layers = (
{
layerId = m01;
width = 686;
}
);
note = uni01F5;
unicode = 501;
},
{
glyphname = uni01F8;
layers = (
{
layerId = m01;
width = 813;
}
);
note = uni01F8;
unicode = 504;
},
{
glyphname = uni01F9;
layers = (
{
layerId = m01;
width = 677;
}
);
note = uni01F9;
unicode = 505;
},
{
glyphname = Aringacute;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,175);
ref = uni030A0301;
}
);
width = 717;
}
);
note = Aringacute;
unicode = 506;
},
{
glyphname = aringacute;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni030A0301;
}
);
width = 590;
}
);
note = aringacute;
unicode = 507;
},
{
glyphname = AEacute;
kernLeft = A;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = AE;
},
{
pos = (815,0);
ref = acutecomb.case;
}
);
width = 1033;
}
);
note = AEacute;
unicode = 508;
},
{
glyphname = aeacute;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae;
},
{
pos = (761,1);
ref = acutecomb;
}
);
width = 986;
}
);
note = aeacute;
unicode = 509;
},
{
glyphname = Oslashacute;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (832,0);
ref = uni0338.case;
},
{
pos = (720,0);
ref = acutecomb.case;
}
);
width = 839;
}
);
note = Oslashacute;
unicode = 510;
},
{
glyphname = oslashacute;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (620,-1);
ref = uni0338;
},
{
pos = (612,1);
ref = acutecomb;
}
);
width = 627;
}
);
note = oslashacute;
unicode = 511;
},
{
glyphname = uni0200;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni030F.case;
}
);
width = 717;
}
);
note = uni0200;
unicode = 512;
},
{
glyphname = uni0201;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni030F;
}
);
width = 590;
}
);
note = uni0201;
unicode = 513;
},
{
glyphname = uni0202;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = uni0311.case;
}
);
width = 717;
}
);
note = uni0202;
unicode = 514;
},
{
glyphname = uni0203;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0311;
}
);
width = 590;
}
);
note = uni0203;
unicode = 515;
},
{
glyphname = uni0204;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni030F.case;
}
);
width = 669;
}
);
note = uni0204;
unicode = 516;
},
{
glyphname = uni0205;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni030F;
}
);
width = 604;
}
);
note = uni0205;
unicode = 517;
},
{
glyphname = uni0206;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = uni0311.case;
}
);
width = 669;
}
);
note = uni0206;
unicode = 518;
},
{
glyphname = uni0207;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0311;
}
);
width = 604;
}
);
note = uni0207;
unicode = 519;
},
{
glyphname = uni0208;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni030F.case;
}
);
width = 302;
}
);
note = uni0208;
unicode = 520;
},
{
glyphname = uni0209;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni030F;
}
);
width = 269;
}
);
note = uni0209;
unicode = 521;
},
{
glyphname = uni020A;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0311.case;
}
);
width = 302;
}
);
note = uni020A;
unicode = 522;
},
{
glyphname = uni020B;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0311.narrow;
}
);
width = 269;
}
);
note = uni020B;
unicode = 523;
},
{
glyphname = uni020C;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni030F.case;
}
);
width = 839;
}
);
note = uni020C;
unicode = 524;
},
{
glyphname = uni020D;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni030F;
}
);
width = 627;
}
);
note = uni020D;
unicode = 525;
},
{
glyphname = uni020E;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = uni0311.case;
}
);
width = 839;
}
);
note = uni020E;
unicode = 526;
},
{
glyphname = uni020F;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0311;
}
);
width = 627;
}
);
note = uni020F;
unicode = 527;
},
{
glyphname = uni0210;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = uni030F.case;
}
);
width = 723;
}
);
note = uni0210;
unicode = 528;
},
{
glyphname = uni0211;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (532,1);
ref = uni030F;
}
);
width = 401;
}
);
note = uni0211;
unicode = 529;
},
{
glyphname = uni0212;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = uni0311.case;
}
);
width = 723;
}
);
note = uni0212;
unicode = 530;
},
{
glyphname = uni0213;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (532,1);
ref = uni0311;
}
);
width = 401;
}
);
note = uni0213;
unicode = 531;
},
{
glyphname = uni0214;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni030F.case;
}
);
width = 792;
}
);
note = uni0214;
unicode = 532;
},
{
glyphname = uni0215;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni030F;
}
);
width = 673;
}
);
note = uni0215;
unicode = 533;
},
{
glyphname = uni0216;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = uni0311.case;
}
);
width = 792;
}
);
note = uni0216;
unicode = 534;
},
{
glyphname = uni0217;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0311;
}
);
width = 673;
}
);
note = uni0217;
unicode = 535;
},
{
glyphname = Scommaaccent;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = uni0326;
}
);
width = 615;
}
);
note = Scommaaccent;
unicode = 536;
},
{
glyphname = scommaaccent;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,0);
ref = uni0326;
}
);
width = 489;
}
);
note = scommaaccent;
unicode = 537;
},
{
glyphname = uni021A;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (587,0);
ref = uni0326;
}
);
width = 574;
}
);
note = uni021A;
unicode = 538;
},
{
glyphname = uni021B;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (549,0);
ref = uni0326;
}
);
width = 406;
}
);
note = uni021B;
unicode = 539;
},
{
glyphname = uni021E;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (706,0);
ref = uni030C.case;
}
);
width = 813;
}
);
note = uni021E;
unicode = 542;
},
{
glyphname = uni021F;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (435,217);
ref = uni030C;
}
);
width = 677;
}
);
note = uni021F;
unicode = 543;
},
{
glyphname = uni0226;
layers = (
{
layerId = m01;
width = 717;
}
);
note = uni0226;
unicode = 550;
},
{
glyphname = uni0227;
layers = (
{
layerId = m01;
width = 590;
}
);
note = uni0227;
unicode = 551;
},
{
glyphname = uni0228;
layers = (
{
layerId = m01;
width = 669;
}
);
note = uni0228;
unicode = 552;
},
{
glyphname = uni0229;
layers = (
{
layerId = m01;
width = 604;
}
);
note = uni0229;
unicode = 553;
},
{
glyphname = uni022A;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0308.loclVIET;
},
{
pos = (720,282);
ref = uni0304.loclVIET;
}
);
width = 839;
}
);
note = uni022A;
unicode = 554;
},
{
glyphname = uni022B;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0308.loclVIET;
},
{
pos = (613,133);
ref = uni0304.loclVIET;
}
);
width = 627;
}
);
note = uni022B;
unicode = 555;
},
{
glyphname = uni022C;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = tildecomb.loclVIET;
},
{
pos = (720,282);
ref = uni0304.loclVIET;
}
);
width = 839;
}
);
note = uni022C;
unicode = 556;
},
{
glyphname = uni022D;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = tildecomb.loclVIET;
},
{
pos = (613,133);
ref = uni0304.loclVIET;
}
);
width = 627;
}
);
note = uni022D;
unicode = 557;
},
{
glyphname = uni022E;
layers = (
{
layerId = m01;
width = 839;
}
);
note = uni022E;
unicode = 558;
},
{
glyphname = uni022F;
layers = (
{
layerId = m01;
width = 627;
}
);
note = uni022F;
unicode = 559;
},
{
glyphname = uni0230;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0307.loclVIET;
},
{
pos = (720,285);
ref = uni0304.loclVIET;
}
);
width = 839;
}
);
note = uni0230;
unicode = 560;
},
{
glyphname = uni0231;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0307.loclVIET;
},
{
pos = (613,136);
ref = uni0304.loclVIET;
}
);
width = 627;
}
);
note = uni0231;
unicode = 561;
},
{
glyphname = uni0232;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = uni0304.case;
}
);
width = 635;
}
);
note = uni0232;
unicode = 562;
},
{
glyphname = uni0233;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = uni0304;
}
);
width = 542;
}
);
note = uni0233;
unicode = 563;
},
{
glyphname = uni0237;
kernLeft = j;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,-199,o),
(175,-113,o),
(175,-39,qs),
(175,526,l),
(104,526,l),
(104,-39,ls),
(104,-88,o),
(59,-138,o),
(17,-138,qs),
(-34,-138,o),
(-65,-111,q),
(-90,-165,l),
(-71,-182,o),
(-12,-199,o),
(21,-199,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
3 1 0 1 2 1 2 0 2 74 0 1 1 69 75 0 0 0 2 95 3 1 2 2 77 2 76 0 0 0 14 0 13 19 36 4 10 22 
CALL[ ]	/* CallFunction */";
};
width = 274;
}
);
note = uni0237;
unicode = 567;
},
{
glyphname = uni0259;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (604,525);
ref = e;
}
);
width = 604;
}
);
note = uni0259;
unicode = 601;
},
{
glyphname = uni0292;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04E1;
}
);
width = 514;
}
);
note = uni0292;
unicode = 658;
},
{
glyphname = uni02B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,436,l),
(132,700,l),
(69,700,l),
(74,436,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 202;
}
);
note = uni02B9;
unicode = 697;
},
{
glyphname = uni02BA;
layers = (
{
layerId = m01;
shapes = (
{
ref = quotesingle;
},
{
pos = (171,0);
ref = quotesingle;
}
);
width = 373;
}
);
note = uni02BA;
unicode = 698;
},
{
glyphname = uni02BB;
kernLeft = uni02BB;
kernRight = uni02BB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (23,98);
ref = quoteleft;
}
);
width = 266;
}
);
note = uni02BB;
unicode = 699;
},
{
glyphname = uni02BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(99,440,l),
(112,700,l),
(61,700,l),
(57,440,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 169;
}
);
note = uni02BC;
unicode = 700;
},
{
glyphname = uni02BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(345,595,o),
(405,654,o),
(405,697,qs),
(405,741,o),
(345,802,o),
(299,802,q),
(299,766,l),
(328,766,o),
(367,726,o),
(367,697,qs),
(367,668,o),
(329,631,o),
(299,631,q),
(299,595,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 0 3 0 3 79 20 17 20 16 4 10 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = uni02BE;
unicode = 702;
},
{
glyphname = uni02BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,631,l),
(269,631,o),
(232,668,o),
(232,697,qs),
(232,726,o),
(270,766,o),
(299,766,q),
(299,802,l),
(254,802,o),
(193,740,o),
(193,697,qs),
(193,655,o),
(254,595,o),
(299,595,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 37 values pushed */
0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 4 1 3 2 3 79 0 0 0 13 0 13 20 17 20 5 10 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = uni02BF;
unicode = 703;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0302;
}
);
width = 600;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = caron;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni030C;
}
);
width = 600;
}
);
note = caron;
unicode = 711;
},
{
glyphname = uni02C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,513,l),
(109,700,l),
(57,700,l),
(57,513,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 166;
}
);
note = uni02C8;
unicode = 712;
},
{
glyphname = uni02C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,645,l),
(454,692,l),
(146,692,l),
(146,645,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = uni02C9;
unicode = 713;
},
{
glyphname = uni02CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,607,l),
(467,731,l),
(372,731,l),
(235,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = uni02CA;
unicode = 714;
},
{
glyphname = uni02CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,607,l),
(228,731,l),
(133,731,l),
(295,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 600;
}
);
note = uni02CB;
unicode = 715;
},
{
glyphname = uni02CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(109,-217,l),
(109,-30,l),
(57,-30,l),
(57,-217,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 166;
}
);
note = uni02CC;
unicode = 716;
},
{
glyphname = breve;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0306;
}
);
width = 600;
}
);
note = breve;
unicode = 728;
},
{
glyphname = dotaccent;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0307;
}
);
width = 600;
}
);
note = dotaccent;
unicode = 729;
},
{
glyphname = ring;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni030A;
}
);
width = 600;
}
);
note = ring;
unicode = 730;
},
{
glyphname = ogonek;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni0328;
}
);
width = 600;
}
);
note = ogonek;
unicode = 731;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = tildecomb;
}
);
width = 600;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,0);
ref = uni030B;
}
);
width = 600;
}
);
note = hungarumlaut;
unicode = 733;
},
{
glyphname = gravecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-235,607,l),
(-372,731,l),
(-467,731,l),
(-305,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = gravecomb;
unicode = 768;
},
{
glyphname = acutecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-295,607,l),
(-133,731,l),
(-228,731,l),
(-365,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = acutecomb;
unicode = 769;
},
{
glyphname = uni0302;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-264,731,l),
(-336,731,l),
(-465,607,l),
(-399,607,l),
(-300,690,l),
(-201,607,l),
(-135,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
1 1 0 1 1 74 0 1 0 1 131 3 2 2 0 0 116 0 0 0 6 0 6 17 18 4 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0302;
unicode = 770;
},
{
glyphname = tildecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-192,613,o),
(-144,672,o),
(-142,721,q),
(-185,721,l),
(-187,692,o),
(-215,659,o),
(-237,659,qs),
(-249,659,o),
(-271,673,o),
(-287,687,qs),
(-310,707,o),
(-345,727,o),
(-368,727,qs),
(-408,727,o),
(-456,667,o),
(-458,617,q),
(-415,617,l),
(-414,647,o),
(-386,681,o),
(-363,681,qs),
(-351,681,o),
(-330,668,o),
(-312,653,qs),
(-291,634,o),
(-255,613,o),
(-232,613,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 1 2 0 0 3 2 0 103 0 3 1 1 3 87 0 3 3 1 95 6 5 2 1 3 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 0 2 4 0 126 0 2 0 0 3 2 0 103 0 3 1 1 3 87 0 3 3 1 95 6 5 2 1 3 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 25 0 24 18 36 34 18 36 7 10 25 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = tildecomb;
unicode = 771;
},
{
glyphname = uni0304;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-146,645,l),
(-146,692,l),
(-454,692,l),
(-454,645,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0304;
unicode = 772;
},
{
glyphname = uni0306;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-236,602,o),
(-150,672,o),
(-148,731,q),
(-198,731,l),
(-199,692,o),
(-257,646,o),
(-300,646,qs),
(-343,646,o),
(-401,692,o),
(-402,731,q),
(-452,731,l),
(-450,672,o),
(-364,602,o),
(-300,602,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 95 4 1 3 1 3 79 0 0 0 13 0 12 18 34 18 5 10 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0306;
unicode = 774;
},
{
glyphname = uni0307;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-280,630,o),
(-252,658,o),
(-252,678,qs),
(-252,698,o),
(-280,726,o),
(-300,726,qs),
(-320,726,o),
(-348,698,o),
(-348,678,qs),
(-348,658,o),
(-320,630,o),
(-300,630,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0307;
unicode = 775;
},
{
glyphname = uni0308;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-371,630,o),
(-346,655,o),
(-346,673,qs),
(-346,691,o),
(-372,716,o),
(-389,716,qs),
(-407,716,o),
(-432,691,o),
(-432,673,qs),
(-432,654,o),
(-407,630,o),
(-389,630,qs)
);
},
{
closed = 1;
nodes = (
(-193,630,o),
(-168,654,o),
(-168,673,qs),
(-168,691,o),
(-193,716,o),
(-211,716,qs),
(-228,716,o),
(-254,691,o),
(-254,673,qs),
(-254,655,o),
(-229,630,o),
(-211,630,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 5 3 4 3 1 0 1 79 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0308;
unicode = 776;
},
{
glyphname = hookabovecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-207,637,o),
(-207,707,qs),
(-207,746,o),
(-260,793,o),
(-302,793,qs),
(-324,793,o),
(-369,779,o),
(-385,767,q),
(-368,732,l),
(-339,751,o),
(-308,751,qs),
(-284,751,o),
(-253,723,o),
(-253,702,qs),
(-253,658,o),
(-312,631,q),
(-287,600,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 32 values pushed */
8 1 0 1 1 74 16 7 2 0 71 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 36 36 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = hookabovecomb;
unicode = 777;
},
{
glyphname = uni030A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-256,595,o),
(-196,655,o),
(-196,697,qs),
(-196,740,o),
(-257,802,o),
(-301,802,qs),
(-345,802,o),
(-405,740,o),
(-405,697,qs),
(-405,655,o),
(-346,595,o),
(-301,595,qs)
);
},
{
closed = 1;
nodes = (
(-331,630,o),
(-368,668,o),
(-368,697,qs),
(-368,727,o),
(-330,767,o),
(-301,767,qs),
(-272,767,o),
(-233,726,o),
(-233,697,qs),
(-233,668,o),
(-271,630,o),
(-301,630,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 103 5 1 3 1 1 3 87 5 1 3 3 1 95 4 1 1 3 1 79 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030A;
unicode = 778;
},
{
glyphname = uni030B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-350,607,l),
(-237,731,l),
(-316,731,l),
(-413,607,l)
);
},
{
closed = 1;
nodes = (
(-187,607,l),
(-75,731,l),
(-154,731,l),
(-250,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 85 2 1 0 0 1 93 3 1 1 0 1 77 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030B;
unicode = 779;
},
{
glyphname = uni030C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-300,649,l),
(-399,731,l),
(-465,731,l),
(-336,607,l),
(-264,607,l),
(-135,731,l),
(-201,731,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 28 values pushed */
5 1 0 1 1 74 3 2 2 1 0 1 131 0 0 0 116 0 0 0 6 0 6 17 17 4 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030C;
unicode = 780;
},
{
glyphname = uni030F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-350,607,l),
(-446,731,l),
(-525,731,l),
(-413,607,l)
);
},
{
closed = 1;
nodes = (
(-187,607,l),
(-284,731,l),
(-363,731,l),
(-250,607,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 85 2 1 0 0 1 93 3 1 1 0 1 77 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni030F;
unicode = 783;
},
{
glyphname = uni0311;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-402,607,l),
(-401,645,o),
(-343,692,o),
(-300,692,qs),
(-257,692,o),
(-199,645,o),
(-198,607,q),
(-148,607,l),
(-150,666,o),
(-236,735,o),
(-300,735,qs),
(-364,735,o),
(-450,666,o),
(-452,607,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 29 values pushed */
3 1 1 2 1 132 0 0 2 2 0 87 0 0 0 2 95 0 2 0 2 79 18 34 18 33 4 10 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0311;
unicode = 785;
},
{
glyphname = uni0312;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-257,781,l),
(-300,781,l),
(-335,685,ls),
(-340,672,o),
(-346,651,o),
(-346,641,qs),
(-346,624,o),
(-322,602,o),
(-300,602,qs),
(-279,602,o),
(-254,624,o),
(-254,641,qs),
(-254,655,o),
(-271,675,o),
(-285,678,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
14 1 0 1 1 74 0 1 0 0 1 85 0 1 1 0 95 0 0 1 0 79 22 36 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0312;
unicode = 786;
},
{
glyphname = uni031B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-300,471,ls),
(-243,471,o),
(-181,536,o),
(-181,591,qs),
(-181,639,o),
(-207,675,q),
(-254,657,l),
(-234,629,o),
(-234,593,qs),
(-234,563,o),
(-267,526,o),
(-300,526,qs),
(-315,526,l),
(-315,471,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 26 values pushed */
7 6 2 0 72 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 41 32 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni031B;
unicode = 795;
},
{
glyphname = dotbelowcomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-282,-190,o),
(-257,-166,o),
(-257,-147,qs),
(-257,-128,o),
(-282,-104,o),
(-300,-104,qs),
(-318,-104,o),
(-343,-128,o),
(-343,-147,qs),
(-343,-166,o),
(-318,-190,o),
(-300,-190,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = dotbelowcomb;
unicode = 803;
},
{
glyphname = uni0324;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-365,-187,o),
(-340,-163,o),
(-340,-145,qs),
(-340,-128,o),
(-366,-104,o),
(-383,-104,qs),
(-400,-104,o),
(-424,-128,o),
(-424,-145,qs),
(-424,-163,o),
(-400,-187,o),
(-383,-187,qs)
);
},
{
closed = 1;
nodes = (
(-200,-187,o),
(-175,-163,o),
(-175,-145,qs),
(-175,-128,o),
(-200,-104,o),
(-217,-104,qs),
(-234,-104,o),
(-259,-128,o),
(-259,-145,qs),
(-259,-163,o),
(-235,-187,o),
(-217,-187,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 5 3 4 3 1 0 1 79 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0324;
unicode = 804;
},
{
glyphname = uni0326;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-319,-104,o),
(-343,-126,o),
(-343,-143,qs),
(-343,-157,o),
(-328,-177,o),
(-314,-180,q),
(-335,-262,l),
(-296,-262,l),
(-268,-188,ls),
(-257,-163,o),
(-257,-143,qs),
(-257,-127,o),
(-281,-104,o),
(-300,-104,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 34 values pushed */
7 1 0 1 1 74 2 1 1 0 0 1 87 2 1 1 1 0 93 0 0 1 0 77 0 0 0 13 0 12 21 3 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0326;
unicode = 806;
},
{
glyphname = uni0327;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-271,-220,o),
(-209,-173,o),
(-209,-133,qs),
(-209,-99,o),
(-253,-56,o),
(-294,-52,q),
(-279,6,l),
(-322,6,l),
(-346,-85,l),
(-323,-85,ls),
(-292,-85,o),
(-261,-110,o),
(-261,-131,qs),
(-261,-154,o),
(-293,-178,o),
(-323,-178,qs),
(-360,-178,o),
(-389,-159,q),
(-406,-197,l),
(-371,-220,o),
(-322,-220,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 51 values pushed */
14 1 1 2 2 1 0 1 1 1 3 0 3 74 0 2 0 1 0 2 1 103 0 0 3 3 0 87 0 0 0 3 95 4 1 3 0 3 79 0 0 0 20 0 19 17 36 35 5 10 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0327;
unicode = 807;
},
{
glyphname = uni0328;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-314,-220,o),
(-278,-196,q),
(-294,-157,l),
(-317,-176,o),
(-356,-176,qs),
(-385,-176,o),
(-421,-147,o),
(-421,-120,qs),
(-421,-54,o),
(-299,0,q),
(-332,27,l),
(-473,-32,o),
(-473,-125,qs),
(-473,-168,o),
(-413,-220,o),
(-363,-220,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 39 values pushed */
13 1 1 0 1 74 12 5 4 3 0 72 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 15 0 14 41 3 10 21 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0328;
unicode = 808;
},
{
glyphname = uni032E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-236,-205,o),
(-150,-139,o),
(-148,-84,q),
(-196,-84,l),
(-197,-120,o),
(-256,-164,o),
(-300,-164,qs),
(-344,-164,o),
(-403,-120,o),
(-404,-84,q),
(-452,-84,l),
(-450,-139,o),
(-364,-205,o),
(-300,-205,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 95 4 1 3 1 3 79 0 0 0 13 0 12 18 34 18 5 10 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni032E;
unicode = 814;
},
{
glyphname = uni0331;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-146,-169,l),
(-146,-122,l),
(-454,-122,l),
(-454,-169,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0331;
unicode = 817;
},
{
glyphname = uni0335;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-105,413,l),
(-105,465,l),
(-495,465,l),
(-495,413,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0335;
unicode = 821;
},
{
glyphname = uni0336;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-26,409,l),
(-26,469,l),
(-823,469,l),
(-823,409,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0336;
unicode = 822;
},
{
glyphname = uni0337;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-65,452,l),
(-97,496,l),
(-339,314,l),
(-306,271,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 48 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0337;
unicode = 823;
},
{
glyphname = uni0338;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-505,-70,l),
(-63,595,l),
(-110,595,l),
(-553,-70,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 10 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0338;
unicode = 824;
},
{
glyphname = uni0345;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-261,-153,qs),
(-228,-186,o),
(-173,-186,qs),
(-141,-186,o),
(-82,-167,o),
(-62,-149,q),
(-87,-98,l),
(-102,-111,o),
(-143,-125,o),
(-165,-125,qs),
(-190,-125,o),
(-207,-107,qs),
(-228,-85,o),
(-228,-49,qs),
(-228,57,l),
(-299,57,l),
(-299,-48,o),
(-299,-48,q),
(-299,-114,o)
);
}
);
width = 404;
}
);
note = uni0345;
unicode = 837;
},
{
glyphname = uni0370;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(190,386,l),
(190,700,l),
(118,700,l),
(118,0,l),
(190,0,l),
(190,321,l),
(606,321,l),
(606,386,l)
);
}
);
width = 702;
}
);
note = uni0370;
unicode = 880;
},
{
glyphname = uni0371;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,295,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,234,l),
(497,234,l),
(497,295,l)
);
}
);
width = 581;
}
);
note = uni0371;
unicode = 881;
},
{
glyphname = uni0372;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0418;
}
);
width = 824;
}
);
note = uni0372;
unicode = 882;
},
{
glyphname = uni0373;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0438;
}
);
width = 688;
}
);
note = uni0373;
unicode = 883;
},
{
glyphname = uni0374;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni02CA;
}
);
width = 600;
}
);
note = uni0374;
unicode = 884;
},
{
glyphname = uni0375;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-10,-714);
ref = uni02CA;
}
);
width = 600;
}
);
note = uni0375;
unicode = 885;
},
{
glyphname = uni037A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (390,0);
ref = uni0345;
}
);
width = 404;
}
);
note = uni037A;
unicode = 890;
},
{
glyphname = uni037B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515,263,qs),
(515,340,o),
(445,462,o),
(322,530,o),
(244,530,qs),
(176,530,o),
(69,477,o),
(38,426,q),
(91,390,l),
(117,429,o),
(197,468,o),
(244,468,qs),
(301,468,o),
(392,417,o),
(443,323,o),
(443,263,qs),
(443,202,o),
(392,109,o),
(301,58,o),
(244,58,qs),
(197,58,o),
(117,96,o),
(91,135,q),
(38,99,l),
(69,48,o),
(177,-5,o),
(244,-5,qs),
(322,-5,o),
(445,63,o),
(515,186,o)
);
}
);
width = 563;
}
);
note = uni037B;
unicode = 891;
},
{
glyphname = uni037C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (189,-7);
ref = periodcentered;
},
{
ref = uni03F2;
}
);
width = 563;
}
);
note = uni037C;
unicode = 892;
},
{
glyphname = uni037D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (129,-7);
ref = periodcentered;
},
{
ref = uni037B;
}
);
width = 563;
}
);
note = uni037D;
unicode = 893;
},
{
glyphname = uni037E;
layers = (
{
layerId = m01;
shapes = (
{
ref = semicolon;
}
);
width = 212;
}
);
note = uni037E;
unicode = 894;
},
{
glyphname = tonos;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-295,500,l),
(-133,731,l),
(-228,731,l),
(-365,500,l)
);
}
);
width = 0;
}
);
note = tonos;
unicode = 900;
},
{
glyphname = dieresistonos;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-355,498,l),
(-193,731,l),
(-288,731,l),
(-425,498,l)
);
},
{
closed = 1;
nodes = (
(-486,547,o),
(-461,572,o),
(-461,590,qs),
(-461,608,o),
(-487,633,o),
(-504,633,qs),
(-522,633,o),
(-547,608,o),
(-547,590,qs),
(-547,571,o),
(-522,547,o),
(-504,547,qs)
);
},
{
closed = 1;
nodes = (
(-138,547,o),
(-114,571,o),
(-114,590,qs),
(-114,608,o),
(-138,633,o),
(-156,633,qs),
(-174,633,o),
(-199,608,o),
(-200,590,qs),
(-199,572,o),
(-174,547,o),
(-156,547,qs)
);
}
);
width = 600;
}
);
note = dieresistonos;
unicode = 901;
},
{
glyphname = Alphatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
ref = A;
}
);
width = 717;
}
);
note = Alphatonos;
unicode = 902;
},
{
glyphname = anoteleia;
layers = (
{
layerId = m01;
shapes = (
{
ref = periodcentered;
}
);
width = 252;
}
);
note = anoteleia;
unicode = 903;
},
{
glyphname = Epsilontonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (168,0);
ref = E;
}
);
width = 837;
}
);
note = Epsilontonos;
unicode = 904;
},
{
glyphname = Etatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (174,0);
ref = H;
}
);
width = 961;
}
);
note = Etatonos;
unicode = 905;
},
{
glyphname = Iotatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (183,0);
ref = I;
}
);
width = 454;
}
);
note = Iotatonos;
unicode = 906;
},
{
glyphname = Omicrontonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (117,0);
ref = O;
}
);
width = 955;
}
);
note = Omicrontonos;
unicode = 908;
},
{
glyphname = Upsilontonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (261,0);
ref = Y;
}
);
width = 899;
}
);
note = Upsilontonos;
unicode = 910;
},
{
glyphname = Omegatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (150,0);
ref = uni03A9;
}
);
width = 1074;
}
);
note = Omegatonos;
unicode = 911;
},
{
glyphname = iotadieresistonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (593,86);
ref = dieresistonos;
},
{
pos = (66,0);
ref = iota;
}
);
width = 520;
}
);
note = iotadieresistonos;
unicode = 912;
},
{
glyphname = Alpha;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
}
);
width = 717;
}
);
note = Alpha;
unicode = 913;
},
{
glyphname = Beta;
layers = (
{
layerId = m01;
shapes = (
{
ref = B;
}
);
width = 754;
}
);
note = Beta;
unicode = 914;
},
{
glyphname = Gamma;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0413;
}
);
width = 572;
}
);
note = Gamma;
unicode = 915;
},
{
glyphname = uni0394;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(322,700,l),
(2,0,l),
(715,0,l),
(395,700,l)
);
},
{
closed = 1;
nodes = (
(608,64,l),
(107,64,l),
(358,624,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
6 1 2 1 1 74 0 1 2 1 131 0 2 0 0 2 85 0 2 2 0 93 0 0 2 0 77 17 17 16 3 13 23 
CALL[ ]	/* CallFunction */";
};
width = 717;
}
);
note = uni0394;
unicode = 916;
},
{
glyphname = Epsilon;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
}
);
width = 669;
}
);
note = Epsilon;
unicode = 917;
},
{
glyphname = Zeta;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
}
);
width = 651;
}
);
note = Zeta;
unicode = 918;
},
{
glyphname = Eta;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
}
);
width = 813;
}
);
note = Eta;
unicode = 919;
},
{
glyphname = Theta;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(573,320,l),
(573,380,l),
(273,380,l),
(273,320,l)
);
},
{
closed = 1;
nodes = (
(524,-6,o),
(691,86,o),
(787,249,o),
(787,350,qs),
(787,451,o),
(691,614,o),
(524,706,o),
(420,706,qs),
(316,706,o),
(147,613,o),
(52,451,o),
(52,350,qs),
(52,249,o),
(147,87,o),
(316,-6,o),
(420,-6,qs)
);
},
{
closed = 1;
nodes = (
(337,60,o),
(202,135,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(202,565,o),
(337,640,o),
(420,640,qs),
(503,640,o),
(637,565,o),
(713,432,o),
(713,350,qs),
(713,268,o),
(637,135,o),
(503,60,o),
(420,60,qs)
);
}
);
width = 839;
}
);
note = Theta;
unicode = 920;
},
{
glyphname = Iota;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
}
);
width = 302;
}
);
note = Iota;
unicode = 921;
},
{
glyphname = Kappa;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
}
);
width = 711;
}
);
note = Kappa;
unicode = 922;
},
{
glyphname = Lambda;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(715,0,l),
(395,700,l),
(322,700,l),
(2,0,l),
(79,0,l),
(358,623,l),
(637,0,l)
);
}
);
width = 717;
}
);
note = Lambda;
unicode = 923;
},
{
glyphname = Mu;
layers = (
{
layerId = m01;
shapes = (
{
ref = M;
}
);
width = 955;
}
);
note = Mu;
unicode = 924;
},
{
glyphname = Nu;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
}
);
width = 813;
}
);
note = Nu;
unicode = 925;
},
{
glyphname = Xi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(575,380,l),
(125,380,l),
(125,320,l),
(575,320,l)
);
},
{
closed = 1;
nodes = (
(665,64,l),
(35,64,l),
(35,0,l),
(665,0,l)
);
},
{
closed = 1;
nodes = (
(650,700,l),
(50,700,l),
(50,636,l),
(650,636,l)
);
}
);
width = 700;
}
);
note = Xi;
unicode = 926;
},
{
glyphname = Omicron;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
}
);
width = 839;
}
);
note = Omicron;
unicode = 927;
},
{
glyphname = Pi;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni041F;
}
);
width = 825;
}
);
note = Pi;
unicode = 928;
},
{
glyphname = Rho;
layers = (
{
layerId = m01;
shapes = (
{
ref = P;
}
);
width = 718;
}
);
note = Rho;
unicode = 929;
},
{
glyphname = Sigma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(594,636,l),
(594,700,l),
(114,700,l),
(114,636,l),
(341,350,l),
(114,64,l),
(114,0,l),
(609,0,l),
(609,64,l),
(198,64,l),
(426,350,l),
(198,636,l)
);
}
);
width = 669;
}
);
note = Sigma;
unicode = 931;
},
{
glyphname = Tau;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
}
);
width = 574;
}
);
note = Tau;
unicode = 932;
},
{
glyphname = Upsilon;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
}
);
width = 635;
}
);
note = Upsilon;
unicode = 933;
},
{
glyphname = Phi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(615,624,o),
(469,630,q),
(469,700,l),
(400,700,l),
(400,630,l),
(253,624,o),
(56,466,o),
(56,351,qs),
(56,236,o),
(253,78,o),
(400,72,q),
(400,0,l),
(469,0,l),
(469,72,l),
(616,77,o),
(813,236,o),
(813,465,o)
);
},
{
closed = 1;
nodes = (
(469,570,l),
(583,565,o),
(742,439,o),
(742,351,qs),
(742,263,o),
(584,137,o),
(469,131,q)
);
},
{
closed = 1;
nodes = (
(127,439,o),
(284,564,o),
(400,570,q),
(400,131,l),
(286,138,o),
(127,263,o),
(127,351,qs)
);
}
);
width = 875;
}
);
note = Phi;
unicode = 934;
},
{
glyphname = Chi;
layers = (
{
layerId = m01;
shapes = (
{
ref = X;
}
);
width = 656;
}
);
note = Chi;
unicode = 935;
},
{
glyphname = Psi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,311,o),
(119,432,o),
(119,526,qs),
(119,700,l),
(49,700,l),
(49,526,ls),
(49,403,o),
(210,247,o),
(357,241,q),
(357,0,l),
(426,0,l),
(426,242,l),
(574,248,o),
(736,400,o),
(737,526,qs),
(737,700,l),
(667,700,l),
(667,526,ls),
(666,428,o),
(543,310,o),
(426,304,q),
(426,700,l),
(357,700,l),
(357,304,l)
);
}
);
width = 785;
}
);
note = Psi;
unicode = 936;
},
{
glyphname = uni03A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(347,0,l),
(347,60,l),
(255,107,o),
(158,261,o),
(158,353,qs),
(158,436,o),
(233,567,o),
(367,640,o),
(451,640,qs),
(535,640,o),
(669,567,o),
(744,436,o),
(744,353,qs),
(744,261,o),
(647,107,o),
(555,60,q),
(555,0,l),
(893,0,l),
(893,65,l),
(669,65,l),
(741,116,o),
(818,267,o),
(818,356,qs),
(818,457,o),
(722,616,o),
(555,706,o),
(451,706,qs),
(347,706,o),
(180,616,o),
(84,457,o),
(84,356,qs),
(84,267,o),
(161,116,o),
(233,65,q),
(9,65,l),
(9,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
33 19 2 3 0 1 74 0 1 0 4 0 1 4 103 2 1 0 3 3 0 85 2 1 0 0 3 93 5 1 3 0 3 77 23 39 17 22 38 16 6 13 26 
CALL[ ]	/* CallFunction */";
};
width = 902;
}
);
note = uni03A9;
unicode = 937;
},
{
glyphname = Iotadieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = Idieresis;
}
);
width = 302;
}
);
note = Iotadieresis;
unicode = 938;
},
{
glyphname = Upsilondieresis;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = uni0308.case;
}
);
width = 635;
}
);
note = Upsilondieresis;
unicode = 939;
},
{
glyphname = alphatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,81);
ref = tonos;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = alphatonos;
unicode = 940;
},
{
glyphname = epsilontonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (577,81);
ref = tonos;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = epsilontonos;
unicode = 941;
},
{
glyphname = etatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,81);
ref = tonos;
},
{
ref = eta;
}
);
width = 677;
}
);
note = etatonos;
unicode = 942;
},
{
glyphname = iotatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (464,81);
ref = tonos;
},
{
ref = iota;
}
);
width = 404;
}
);
note = iotatonos;
unicode = 943;
},
{
glyphname = upsilondieresistonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (660,86);
ref = dieresistonos;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = upsilondieresistonos;
unicode = 944;
},
{
glyphname = alpha;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,426,l),
(475,477,o),
(372,530,o),
(308,530,qs),
(234,530,o),
(114,463,o),
(46,341,o),
(46,263,qs),
(46,185,o),
(114,63,o),
(234,-5,o),
(308,-5,qs),
(374,-5,o),
(479,51,o),
(511,104,q),
(511,0,l),
(579,0,l),
(579,526,l),
(508,526,l)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(369,468,o),
(458,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(458,109,o),
(369,58,o),
(314,58,qs)
);
}
);
width = 678;
}
);
note = alpha;
unicode = 945;
},
{
glyphname = beta;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-184,l),
(154,71,l),
(185,28,o),
(221,9,qs),
(252,-8,o),
(329,-8,qs),
(395,-8,o),
(510,41,o),
(581,138,o),
(581,207,qs),
(581,278,o),
(500,373,o),
(425,390,q),
(482,410,o),
(546,496,o),
(546,557,qs),
(546,619,o),
(483,707,o),
(380,752,o),
(321,752,qs),
(260,752,o),
(151,703,o),
(83,604,o),
(83,534,qs),
(83,203,l),
(83,-184,l)
);
},
{
closed = 1;
nodes = (
(330,355,ls),
(415,355,o),
(508,283,o),
(508,212,qs),
(508,160,o),
(458,88,o),
(376,52,o),
(284,52,o),
(204,88,o),
(154,159,o),
(154,210,qs),
(154,530,ls),
(154,582,o),
(201,655,o),
(276,690,o),
(319,690,qs),
(383,690,o),
(474,616,o),
(474,482,o),
(386,412,o),
(309,412,qs),
(225,412,l),
(225,355,l)
);
}
);
width = 636;
}
);
note = beta;
unicode = 946;
},
{
glyphname = gamma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(307,-194,l),
(307,0,l),
(541,526,l),
(471,526,l),
(272,78,l),
(75,526,l),
(1,526,l),
(234,0,l),
(234,-194,l)
);
}
);
width = 542;
}
);
note = gamma;
unicode = 947;
},
{
glyphname = delta;
lastChange = "2021-08-11 00:17:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(509,343,o),
(509,263,qs),
(509,203,o),
(459,109,o),
(370,58,o),
(258,58,o),
(169,109,o),
(118,203,o),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(376,468,o),
(424,430,q),
(462,391,ls)
);
},
{
closed = 1;
nodes = (
(314,530,qs),
(238,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(47,186,o),
(116,64,o),
(238,-5,o),
(390,-5,o),
(512,64,o),
(581,186,o),
(581,263,qs),
(581,346,o),
(530,409,qs),
(488,462,o),
(442,503,qs),
(240,685,l),
(518,685,l),
(518,746,l),
(146,746,l),
(146,692,l),
(328,528,l),
(322,530,o)
);
}
);
width = 627;
}
);
note = delta;
unicode = 948;
},
{
glyphname = epsilon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(44,106,o),
(107,34,o),
(215,-4,o),
(280,-4,qs),
(337,-4,o),
(447,28,o),
(488,60,q),
(464,114,l),
(428,86,o),
(332,56,o),
(283,56,qs),
(210,56,o),
(117,112,o),
(117,158,qs),
(117,200,o),
(193,248,o),
(259,248,qs),
(349,248,l),
(349,300,l),
(263,300,ls),
(204,300,o),
(132,344,o),
(132,382,qs),
(132,424,o),
(213,472,o),
(278,472,qs),
(363,472,o),
(446,430,q),
(466,484,l),
(372,534,o),
(271,534,qs),
(211,534,o),
(114,498,o),
(59,434,o),
(59,392,qs),
(59,352,o),
(114,290,o),
(161,276,q),
(105,262,o),
(44,198,o),
(44,152,qs)
);
}
);
width = 534;
}
);
note = epsilon;
unicode = 949;
},
{
glyphname = zeta;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,746,l),
(83,687,l),
(436,687,l),
(36,427,o),
(35,206,qs),
(35,0,o),
(296,0,qs),
(540,0,o),
(412,-186,q),
(480,-195,l),
(633,55,o),
(296,55,qs),
(110,55,o),
(110,220,qs),
(110,392,o),
(528,689,q),
(528,746,l)
);
}
);
width = 580;
}
);
note = zeta;
unicode = 950;
},
{
glyphname = eta;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,530,o),
(196,477,o),
(167,429,q),
(167,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,276,ls),
(170,365,o),
(269,466,o),
(354,466,qs),
(430,466,o),
(512,380,o),
(512,298,qs),
(512,-194,l),
(583,-194,l),
(583,305,ls),
(583,415,o),
(466,530,o),
(367,530,qs)
);
}
);
width = 677;
}
);
note = eta;
unicode = 951;
},
{
glyphname = theta;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(131,497,o),
(151,547,qs),
(177,612,o),
(270,680,o),
(331,680,qs),
(392,680,o),
(485,612,o),
(511,547,qs),
(531,496,o),
(536,405,q),
(126,405,l)
);
},
{
closed = 1;
nodes = (
(533,264,o),
(511,202,qs),
(485,128,o),
(392,60,o),
(331,60,qs),
(270,60,o),
(177,128,o),
(151,202,qs),
(130,262,o),
(126,345,q),
(536,345,l)
);
},
{
closed = 1;
nodes = (
(412,-6,o),
(539,80,o),
(611,259,o),
(611,368,qs),
(611,499,o),
(539,660,o),
(412,746,o),
(331,746,qs),
(250,746,o),
(123,660,o),
(52,499,o),
(52,368,qs),
(52,259,o),
(123,80,o),
(250,-6,o),
(331,-6,qs)
);
}
);
width = 662;
}
);
note = theta;
unicode = 952;
},
{
glyphname = iota;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,39,qs),
(179,-1,o),
(253,-1,qs),
(285,-1,o),
(344,18,o),
(364,36,q),
(339,87,l),
(324,74,o),
(283,60,o),
(261,60,qs),
(217,60,o),
(170,109,o),
(170,156,qs),
(170,526,l),
(99,526,l),
(99,157,o),
(99,157,q),
(99,80,o)
);
}
);
width = 404;
}
);
note = iota;
unicode = 953;
},
{
glyphname = kappa;
layers = (
{
layerId = m01;
shapes = (
{
ref = kgreenlandic;
}
);
width = 590;
}
);
note = kappa;
unicode = 954;
},
{
glyphname = lambda;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(164,662,qs),
(177,652,o),
(212,576,qs),
(235,526,l),
(0,0,l),
(74,0,l),
(272,448,l),
(470,0,l),
(540,0,l),
(277,589,ls),
(232,690,o),
(203,712,qs),
(160,746,o),
(65,746,q),
(65,685,o),
(65,685,q),
(136,685,o)
);
}
);
width = 542;
}
);
note = lambda;
unicode = 955;
},
{
glyphname = uni03BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,250,ls),
(508,161,o),
(411,59,o),
(329,59,qs),
(252,59,o),
(170,145,o),
(170,228,qs),
(170,526,l),
(99,526,l),
(99,-194,l),
(170,-194,l),
(170,70,l),
(195,33,o),
(276,-5,o),
(330,-5,qs),
(389,-5,o),
(485,47,o),
(511,98,q),
(511,0,l),
(579,0,l),
(579,526,l),
(508,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
9 3 2 4 3 1 74 6 5 2 3 4 3 131 0 0 4 1 4 0 1 126 0 2 1 2 132 0 4 0 1 4 87 0 4 4 1 95 0 1 4 1 79 0 0 0 21 0 21 35 17 19 35 17 7 13 25 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = uni03BC;
unicode = 956;
},
{
glyphname = nu;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(419,259,o),
(275,78,q),
(75,526,l),
(1,526,l),
(234,0,l),
(307,0,l),
(491,243,o),
(541,526,q),
(471,526,l)
);
}
);
width = 542;
}
);
note = nu;
unicode = 957;
},
{
glyphname = xi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(138,544,qs),
(138,694,o),
(491,694,q),
(491,746,l),
(43,746,l),
(43,694,l),
(239,694,ls),
(74,694,o),
(74,379,o),
(215,379,q),
(215,379,l),
(56,379,o),
(56,0,o),
(286,0,qs),
(530,0,o),
(402,-186,q),
(470,-195,l),
(595,55,o),
(286,55,qs),
(121,55,o),
(121,197,qs),
(121,349,o),
(314,349,qs),
(443,349,l),
(443,408,l),
(314,408,o),
(314,408,q),
(138,408,o)
);
}
);
width = 570;
}
);
note = xi;
unicode = 958;
},
{
glyphname = omicron;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
}
);
width = 627;
}
);
note = omicron;
unicode = 959;
},
{
glyphname = pi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,3,o),
(611,3,qs),
(643,3,o),
(702,22,o),
(722,40,q),
(697,91,l),
(682,78,o),
(641,64,o),
(619,64,qs),
(575,64,o),
(528,113,o),
(528,160,qs),
(527,466,l),
(689,466,l),
(689,526,l),
(22,526,l),
(22,466,l),
(165,466,l),
(165,0,l),
(236,0,l),
(236,466,l),
(456,466,l),
(457,156,o),
(457,156,q),
(457,83,o)
);
}
);
width = 737;
}
);
note = pi;
unicode = 960;
},
{
glyphname = rho;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(310,58,o),
(221,109,o),
(170,203,o),
(170,263,qs),
(170,323,o),
(221,417,o),
(310,468,o),
(366,468,qs),
(422,468,o),
(511,417,o),
(561,323,o),
(561,263,qs),
(561,203,o),
(511,109,o),
(422,58,o),
(366,58,qs)
);
},
{
closed = 1;
nodes = (
(170,-194,l),
(170,99,l),
(203,48,o),
(306,-5,o),
(370,-5,qs),
(445,-5,o),
(564,62,o),
(632,184,o),
(632,263,qs),
(632,341,o),
(564,463,o),
(444,530,o),
(365,530,qs),
(289,530,o),
(167,462,o),
(99,340,o),
(99,263,qs),
(99,-194,l)
);
}
);
width = 696;
}
);
note = rho;
unicode = 961;
},
{
glyphname = sigma1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,114,o),
(98,207,o),
(98,268,qs),
(98,328,o),
(149,422,o),
(240,473,o),
(297,473,qs),
(344,473,o),
(424,434,o),
(450,395,q),
(503,431,l),
(472,482,o),
(365,535,o),
(297,535,qs),
(219,535,o),
(96,467,o),
(26,345,o),
(26,268,qs),
(26,191,o),
(96,68,o),
(217,0,o),
(300,0,qs),
(540,0,o),
(426,-178,q),
(494,-187,l),
(620,63,o),
(300,63,qs),
(238,63,o)
);
}
);
width = 563;
}
);
note = sigma1;
unicode = 962;
},
{
glyphname = sigma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(238,-5,o),
(314,-5,qs),
(390,-5,o),
(512,64,o),
(581,186,o),
(581,263,qs),
(581,397,o),
(462,468,q),
(636,468,l),
(636,530,l),
(314,530,o),
(314,530,q),
(233,530,o)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(370,468,o),
(459,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(459,109,o),
(370,58,o),
(314,58,qs)
);
}
);
width = 673;
}
);
note = sigma;
unicode = 963;
},
{
glyphname = tau;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,0,o),
(357,0,qs),
(389,0,o),
(448,19,o),
(468,37,q),
(443,88,l),
(428,75,o),
(387,61,o),
(365,61,qs),
(321,61,o),
(272,110,o),
(272,157,qs),
(272,463,l),
(471,463,l),
(471,526,l),
(2,526,l),
(2,463,l),
(201,463,l),
(201,153,o),
(201,153,q),
(201,80,o)
);
}
);
width = 514;
}
);
note = tau;
unicode = 964;
},
{
glyphname = upsilon;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,145,o),
(165,228,qs),
(165,526,l),
(94,526,l),
(94,221,ls),
(94,110,o),
(218,-5,o),
(326,-5,qs),
(429,-5,o),
(555,110,o),
(555,221,qs),
(555,526,l),
(484,526,l),
(484,228,ls),
(484,145,o),
(402,59,o),
(326,59,qs),
(245,59,o)
);
}
);
width = 673;
}
);
note = upsilon;
unicode = 965;
},
{
glyphname = phi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,64,o),
(119,170,o),
(119,264,qs),
(119,399,o),
(186,486,q),
(130,522,l),
(49,432,o),
(49,264,qs),
(49,141,o),
(210,1,o),
(357,-5,q),
(357,-194,l),
(426,-194,l),
(426,-5,l),
(574,1,o),
(736,161,o),
(736,284,qs),
(736,526,o),
(552,526,qs),
(358,526,o),
(358,317,qs),
(357,57,l)
);
},
{
closed = 1;
nodes = (
(427,317,ls),
(427,471,o),
(666,471,o),
(666,284,qs),
(666,189,o),
(543,63,o),
(426,57,q)
);
}
);
width = 785;
}
);
note = phi;
unicode = 966;
},
{
glyphname = chi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(336,175,l),
(562,526,l),
(484,526,l),
(298,225,l),
(109,526,l),
(29,526,l),
(258,175,l),
(19,-196,l),
(99,-196,l),
(298,125,l),
(493,-196,l),
(574,-196,l)
);
}
);
width = 596;
}
);
note = chi;
unicode = 967;
},
{
glyphname = psi;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(240,64,o),
(119,185,o),
(119,279,qs),
(119,526,l),
(49,526,l),
(49,279,ls),
(49,156,o),
(210,1,o),
(357,-5,q),
(357,-194,l),
(426,-194,l),
(426,-5,l),
(574,1,o),
(736,153,o),
(737,279,qs),
(737,526,l),
(667,526,l),
(667,279,ls),
(666,181,o),
(543,63,o),
(426,57,q),
(426,526,l),
(357,526,l),
(357,57,l)
);
}
);
width = 785;
}
);
note = psi;
unicode = 968;
},
{
glyphname = omega;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(388,227,ls),
(388,149,o),
(364,111,qs),
(332,61,o),
(200,61,o),
(164,138,qs),
(138,196,o),
(138,286,qs),
(138,414,o),
(196,505,q),
(130,532,l),
(68,428,o),
(68,284,qs),
(68,213,o),
(114,65,o),
(200,-4,o),
(324,-4,o),
(408,58,o),
(425,114,q),
(442,58,o),
(526,-4,o),
(650,-4,o),
(736,65,o),
(782,203,o),
(782,284,qs),
(782,428,o),
(720,532,q),
(654,505,l),
(712,414,o),
(712,286,qs),
(712,189,o),
(686,138,qs),
(645,61,o),
(586,61,qs),
(518,61,o),
(488,111,qs),
(462,154,o),
(462,227,qs),
(462,435,l),
(388,435,l)
);
}
);
width = 862;
}
);
note = omega;
unicode = 969;
},
{
glyphname = iotadieresis;
layers = (
{
layerId = m01;
shapes = (
{
pos = (440,-159);
ref = uni0308.case;
},
{
ref = iota;
}
);
width = 404;
}
);
note = iotadieresis;
unicode = 970;
},
{
glyphname = upsilondieresis;
layers = (
{
layerId = m01;
shapes = (
{
pos = (627,-159);
ref = uni0308.case;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = upsilondieresis;
unicode = 971;
},
{
glyphname = omicrontonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (634,81);
ref = tonos;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = omicrontonos;
unicode = 972;
},
{
glyphname = upsilontonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,81);
ref = tonos;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = upsilontonos;
unicode = 973;
},
{
glyphname = omegatonos;
layers = (
{
layerId = m01;
shapes = (
{
pos = (745,81);
ref = tonos;
},
{
ref = omega;
}
);
width = 862;
}
);
note = omegatonos;
unicode = 974;
},
{
glyphname = uni03D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(330,355,ls),
(415,355,o),
(508,283,o),
(508,212,qs),
(508,160,o),
(458,88,o),
(376,52,o),
(330,52,qs),
(284,52,o),
(204,88,o),
(154,159,o),
(154,210,qs),
(154,530,ls),
(154,582,o),
(201,655,o),
(276,690,o),
(319,690,qs),
(383,690,o),
(474,616,o),
(474,549,qs),
(474,482,o),
(386,412,o),
(309,412,qs),
(225,412,l),
(225,355,l)
);
},
{
closed = 1;
nodes = (
(482,410,o),
(546,496,o),
(546,557,qs),
(546,619,o),
(483,707,o),
(380,752,o),
(321,752,qs),
(260,752,o),
(151,703,o),
(83,604,o),
(83,534,qs),
(83,203,ls),
(83,135,o),
(152,39,o),
(265,-8,o),
(329,-8,qs),
(395,-8,o),
(510,41,o),
(581,138,o),
(581,207,qs),
(581,278,o),
(500,373,o),
(425,390,q)
);
}
);
width = 636;
}
);
note = uni03D0;
unicode = 976;
},
{
glyphname = theta1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(567,531,o),
(574,424,q),
(504,378,o),
(422,378,qs),
(352,378,o),
(257,444,o),
(257,507,qs),
(257,576,o),
(352,645,o),
(487,645,o),
(532,581,qs)
);
},
{
closed = 1;
nodes = (
(522,129,qs),
(468,55,o),
(202,55,o),
(202,274,qs),
(202,430,o),
(26,430,q),
(26,380,l),
(136,380,o),
(136,258,qs),
(136,132,o),
(202,56,qs),
(255,-6,o),
(329,-6,qs),
(426,-5,o),
(466,18,qs),
(568,75,o),
(609,158,qs),
(649,239,o),
(649,356,qs),
(649,523,o),
(516,706,o),
(414,706,qs),
(357,706,o),
(248,653,o),
(186,569,o),
(186,505,qs),
(186,465,o),
(246,369,o),
(353,317,o),
(411,317,qs),
(515,317,o),
(576,360,q),
(576,202,o)
);
}
);
width = 701;
}
);
note = theta1;
unicode = 977;
},
{
glyphname = Upsilon1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,306,q),
(80,700,l),
(1,700,l),
(230,242,l),
(230,0,l),
(303,0,l),
(303,242,l),
(368,572,o),
(614,661,q),
(614,700,l),
(330,629,o)
);
}
);
width = 635;
}
);
note = Upsilon1;
unicode = 978;
},
{
glyphname = uni03D3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (264,0);
ref = Upsilon1;
}
);
width = 899;
}
);
note = uni03D3;
unicode = 979;
},
{
glyphname = uni03D4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (617,174);
ref = uni0308;
},
{
ref = Upsilon1;
}
);
width = 635;
}
);
note = uni03D4;
unicode = 980;
},
{
glyphname = phi1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(736,385,o),
(574,523,o),
(426,530,q),
(426,742,l),
(357,742,l),
(357,530,l),
(210,524,o),
(49,386,o),
(49,264,qs),
(49,141,o),
(210,0,o),
(357,-6,q),
(357,-194,l),
(426,-194,l),
(426,-5,l),
(574,1,o),
(736,141,o),
(736,264,qs)
);
},
{
closed = 1;
nodes = (
(119,356,o),
(241,461,o),
(357,467,q),
(357,57,l),
(240,64,o),
(119,170,o),
(119,264,qs)
);
},
{
closed = 1;
nodes = (
(426,467,l),
(543,461,o),
(666,357,o),
(666,264,qs),
(666,169,o),
(543,63,o),
(426,57,q)
);
}
);
width = 785;
}
);
note = phi1;
unicode = 981;
},
{
glyphname = omega1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,227,ls),
(410,149,o),
(386,111,qs),
(354,61,o),
(222,61,o),
(186,138,qs),
(160,196,o),
(160,286,qs),
(160,386,o),
(196,464,q),
(698,464,l),
(734,386,o),
(734,286,qs),
(734,189,o),
(708,138,qs),
(667,61,o),
(608,61,qs),
(540,61,o),
(510,111,qs),
(484,154,o),
(484,227,qs),
(484,375,l),
(410,375,l)
);
},
{
closed = 1;
nodes = (
(90,384,o),
(90,284,qs),
(90,213,o),
(136,65,o),
(222,-4,o),
(346,-4,o),
(430,58,o),
(447,114,q),
(464,58,o),
(548,-4,o),
(672,-4,o),
(758,65,o),
(804,203,o),
(804,284,qs),
(804,384,o),
(774,464,q),
(856,464,l),
(856,533,l),
(22,533,l),
(22,464,l),
(120,464,l)
);
}
);
width = 884;
}
);
note = omega1;
unicode = 982;
},
{
glyphname = uni03D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(464,80,qs),
(441,103,o),
(441,150,qs),
(441,216,o),
(498,319,qs),
(618,535,l),
(538,535,l),
(188,156,l),
(282,286,o),
(282,384,qs),
(282,461,o),
(242,502,qs),
(202,542,o),
(128,542,qs),
(96,542,o),
(37,523,o),
(17,505,q),
(42,454,l),
(57,467,o),
(98,481,o),
(120,481,qs),
(164,481,o),
(211,432,o),
(211,385,qs),
(211,319,o),
(154,216,qs),
(34,0,l),
(114,0,l),
(464,379,l),
(370,249,o),
(370,151,qs),
(370,74,o),
(410,33,qs),
(450,-7,o),
(524,-7,qs),
(547,-7,ls),
(578,-7,o),
(609,-32,o),
(609,-53,qs),
(609,-76,o),
(577,-100,o),
(547,-100,qs),
(510,-100,o),
(481,-81,q),
(464,-119,l),
(499,-142,o),
(548,-142,qs),
(599,-142,o),
(661,-95,o),
(661,-55,qs),
(661,-8,o),
(635,22,qs),
(608,54,o),
(532,54,qs),
(488,54,o)
);
}
);
width = 662;
}
);
note = uni03D7;
unicode = 983;
},
{
glyphname = uni03D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(202,135,o),
(125,268,o),
(125,432,o),
(202,565,o),
(337,640,o),
(503,640,o),
(637,565,o),
(713,432,o),
(713,268,o),
(637,135,o),
(503,60,o),
(337,60,o)
);
},
{
closed = 1;
nodes = (
(388,-5,q),
(388,-158,l),
(456,-158,l),
(456,-5,l),
(539,2,o),
(608,40,qs),
(691,86,o),
(787,249,o),
(787,451,o),
(691,614,o),
(524,706,o),
(316,706,o),
(147,613,o),
(52,451,o),
(52,249,o),
(147,87,o),
(232,40,qs),
(303,1,o)
);
}
);
width = 839;
}
);
note = uni03D8;
unicode = 984;
},
{
glyphname = uni03D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,109,o),
(118,203,o),
(118,323,o),
(169,417,o),
(258,468,o),
(370,468,o),
(459,417,o),
(509,323,o),
(509,203,o),
(459,109,o),
(370,58,o),
(258,58,o)
);
},
{
closed = 1;
nodes = (
(280,-3,q),
(280,-158,l),
(348,-158,l),
(348,-3,l),
(404,3,o),
(451,30,qs),
(512,64,o),
(581,186,o),
(581,340,o),
(512,462,o),
(390,530,o),
(238,530,o),
(116,462,o),
(46,340,o),
(46,186,o),
(116,64,o),
(177,30,qs),
(224,3,o)
);
}
);
width = 627;
}
);
note = uni03D9;
unicode = 985;
},
{
glyphname = uni03DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,704,l),
(419,706,ls),
(315,706,o),
(147,614,o),
(52,451,o),
(52,350,qs),
(52,249,o),
(147,86,o),
(230,42,qs),
(317,-2,o),
(421,-3,qs),
(659,-5,o),
(547,-181,q),
(615,-190,l),
(741,60,o),
(421,60,qs),
(338,60,o),
(202,136,o),
(125,268,o),
(125,350,qs),
(125,432,o),
(202,564,o),
(338,640,o),
(421,640,qs),
(672,640,l)
);
}
);
width = 740;
}
);
note = uni03DA;
unicode = 986;
},
{
glyphname = uni03DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,467,o),
(26,345,o),
(26,268,qs),
(26,191,o),
(96,68,o),
(217,0,o),
(300,0,qs),
(540,0,o),
(426,-178,q),
(494,-187,l),
(620,63,o),
(300,63,qs),
(238,63,o),
(149,114,o),
(98,207,o),
(98,268,qs),
(98,328,o),
(149,422,o),
(240,473,o),
(297,473,qs),
(516,473,l),
(516,535,l),
(297,535,o),
(297,535,q),
(219,535,o)
);
}
);
width = 563;
}
);
note = uni03DB;
unicode = 987;
},
{
glyphname = uni03DC;
layers = (
{
layerId = m01;
shapes = (
{
ref = F;
}
);
width = 633;
}
);
note = uni03DC;
unicode = 988;
},
{
glyphname = uni03DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,526,l),
(52,526,l),
(52,-195,l),
(126,-195,l),
(126,107,l),
(438,107,l),
(438,171,l),
(126,171,l),
(126,462,l),
(482,462,l)
);
}
);
width = 533;
}
);
note = uni03DD;
unicode = 989;
},
{
glyphname = uni03DE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496,330,l),
(374,0,l),
(444,0,l),
(586,390,l),
(136,390,l),
(233,700,l),
(164,700,l),
(52,330,l)
);
}
);
width = 638;
}
);
note = uni03DE;
unicode = 990;
},
{
glyphname = uni03DF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(374,335,l),
(252,0,l),
(322,0,l),
(464,395,l),
(136,395,l),
(233,716,l),
(164,716,l),
(52,335,l)
);
}
);
width = 518;
}
);
note = uni03DF;
unicode = 991;
},
{
glyphname = uni03E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(518,-102,o),
(603,39,qs),
(679,165,o),
(680,349,qs),
(679,450,o),
(632,532,qs),
(587,611,o),
(500,659,qs),
(416,705,o),
(312,705,qs),
(234,705,o),
(168,679,qs),
(102,653,o),
(56,603,q),
(104,556,l),
(186,639,o),
(310,639,qs),
(394,639,o),
(462,601,qs),
(508,575,o),
(541,536,q),
(204,366,l),
(230,306,l),
(573,488,l),
(600,436,o),
(605,376,q),
(319,272,o),
(258,18,q),
(330,18,l),
(385,226,o),
(605,307,q),
(597,174,o),
(539,74,qs),
(474,-40,o),
(348,-130,q),
(387,-188,l)
);
}
);
width = 719;
}
);
note = uni03E0;
unicode = 992;
},
{
glyphname = uni03E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(528,-53,o),
(491,192,o),
(385,444,o),
(236,643,o),
(150,705,q),
(87,679,l),
(181,608,o),
(251,512,qs),
(285,466,o),
(315,412,q),
(88,317,l),
(113,258,l),
(345,355,l),
(360,324,o),
(373,291,qs),
(384,267,o),
(392,243,q),
(160,146,l),
(184,87,l),
(413,182,l),
(434,114,o),
(444,48,qs),
(463,-69,o),
(447,-185,q),
(510,-159,l)
);
}
);
width = 602;
}
);
note = uni03E1;
unicode = 993;
},
{
glyphname = uni03F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,286,o),
(282,384,qs),
(282,461,o),
(242,502,qs),
(202,542,o),
(128,542,qs),
(96,542,o),
(37,523,o),
(17,505,q),
(42,454,l),
(57,467,o),
(98,481,o),
(120,481,qs),
(164,481,o),
(211,432,o),
(211,385,qs),
(211,319,o),
(154,216,qs),
(34,0,l),
(114,0,l),
(464,379,l),
(370,249,o),
(370,151,qs),
(370,74,o),
(410,33,qs),
(450,-7,o),
(524,-7,qs),
(556,-7,o),
(615,12,o),
(635,30,q),
(610,81,l),
(595,68,o),
(554,54,o),
(532,54,qs),
(488,54,o),
(441,103,o),
(441,150,qs),
(441,216,o),
(498,319,qs),
(618,535,l),
(538,535,l),
(188,156,l)
);
}
);
width = 662;
}
);
note = uni03F0;
unicode = 1008;
},
{
glyphname = uni03F1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(592,247,qs),
(592,324,o),
(525,443,o),
(405,509,o),
(327,509,qs),
(196,509,o),
(52,325,o),
(52,163,qs),
(52,43,o),
(114,-44,qs),
(180,-135,o),
(316,-166,qs),
(552,-220,l),
(564,-155,l),
(342,-104,ls),
(229,-78,o),
(123,47,o),
(120,120,q),
(152,59,o),
(266,-10,o),
(340,-10,qs),
(413,-10,o),
(528,55,o),
(592,172,o)
);
},
{
closed = 1;
nodes = (
(520,249,qs),
(520,191,o),
(472,103,o),
(385,54,o),
(329,54,qs),
(273,54,o),
(186,103,o),
(137,191,o),
(137,249,qs),
(137,307,o),
(186,399,o),
(274,450,o),
(329,450,qs),
(384,450,o),
(471,399,o),
(520,307,o)
);
}
);
width = 659;
}
);
note = uni03F1;
unicode = 1009;
},
{
glyphname = uni03F2;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
}
);
width = 563;
}
);
note = uni03F2;
unicode = 1010;
},
{
glyphname = uni03F3;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0237;
},
{
pos = (440,1);
ref = uni0307.i;
}
);
width = 274;
}
);
note = uni03F3;
unicode = 1011;
},
{
glyphname = uni03F4;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0472;
}
);
width = 851;
}
);
note = uni03F4;
unicode = 1012;
},
{
glyphname = uni03F5;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0454;
}
);
width = 572;
}
);
note = uni03F5;
unicode = 1013;
},
{
glyphname = uni03F6;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni044D;
}
);
width = 571;
}
);
note = uni03F6;
unicode = 1014;
},
{
glyphname = uni03F7;
layers = (
{
layerId = m01;
shapes = (
{
ref = Thorn;
}
);
width = 718;
}
);
note = uni03F7;
unicode = 1015;
},
{
glyphname = uni03F8;
layers = (
{
layerId = m01;
shapes = (
{
ref = thorn;
}
);
width = 678;
}
);
note = uni03F8;
unicode = 1016;
},
{
glyphname = uni03F9;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
}
);
width = 719;
}
);
note = uni03F9;
unicode = 1017;
},
{
glyphname = uni03FA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,323,l),
(179,700,l),
(118,700,l),
(118,0,l),
(189,0,l),
(189,578,l),
(464,242,l),
(499,242,l),
(774,581,l),
(774,0,l),
(845,0,l),
(845,700,l),
(784,700,l)
);
}
);
width = 963;
}
);
note = uni03FA;
unicode = 1018;
},
{
glyphname = uni03FB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,241,l),
(173,526,l),
(101,526,l),
(101,-185,l),
(166,-185,l),
(166,443,l),
(379,176,l),
(411,176,l),
(624,442,l),
(624,0,l),
(689,0,l),
(689,526,l),
(623,526,l)
);
}
);
width = 790;
}
);
note = uni03FB;
unicode = 1019;
},
{
glyphname = uni03FC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(26,-54,l),
(26,-106,l),
(99,-106,l),
(99,-194,l),
(170,-194,l),
(170,-106,l),
(380,-106,l),
(380,-54,l),
(170,-54,l),
(170,99,l),
(203,48,o),
(306,-5,o),
(370,-5,qs),
(445,-5,o),
(564,62,o),
(632,184,o),
(632,263,qs),
(632,341,o),
(564,463,o),
(444,530,o),
(365,530,qs),
(289,530,o),
(167,462,o),
(99,340,o),
(99,263,qs),
(99,-54,l)
);
},
{
closed = 1;
nodes = (
(221,109,o),
(170,203,o),
(170,323,o),
(221,417,o),
(310,468,o),
(422,468,o),
(511,417,o),
(561,323,o),
(561,203,o),
(511,109,o),
(422,58,o),
(310,58,o)
);
}
);
width = 696;
}
);
note = uni03FC;
unicode = 1020;
},
{
glyphname = uni03FD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(219,706,o),
(86,653,o),
(40,603,q),
(87,556,l),
(168,640,o),
(294,640,qs),
(377,640,o),
(513,564,o),
(590,432,o),
(590,350,qs),
(590,268,o),
(513,136,o),
(377,60,o),
(294,60,qs),
(169,60,o),
(87,143,q),
(40,96,l),
(86,46,o),
(218,-6,o),
(296,-6,qs),
(400,-6,o),
(568,86,o),
(663,249,o),
(663,350,qs),
(663,451,o),
(568,614,o),
(401,706,o),
(297,706,qs)
);
}
);
width = 719;
}
);
note = uni03FD;
unicode = 1021;
},
{
glyphname = uni03FE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (281,79);
ref = periodcentered;
},
{
ref = uni03F9;
}
);
width = 719;
}
);
note = uni03FE;
unicode = 1022;
},
{
glyphname = uni03FF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (203,79);
ref = periodcentered;
},
{
ref = uni03FD;
}
);
width = 719;
}
);
note = uni03FF;
unicode = 1023;
},
{
glyphname = uni0400;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = E;
},
{
pos = (659,0);
ref = gravecomb.case;
}
);
width = 659;
}
);
note = uni0400;
unicode = 1024;
},
{
glyphname = uni0401;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = E;
},
{
pos = (659,0);
ref = uni0308.case;
}
);
width = 659;
}
);
note = uni0401;
unicode = 1025;
},
{
glyphname = uni0402;
kernLeft = T;
kernRight = uni0402;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(332,636,l),
(598,636,l),
(598,700,l),
(12,700,l),
(12,636,l),
(259,636,l),
(259,0,l),
(332,0,l),
(332,312,l),
(440,359,o),
(531,359,qs),
(613,359,o),
(710,282,o),
(710,207,qs),
(710,133,o),
(618,59,o),
(547,59,qs),
(509,59,o),
(480,67,q),
(470,5,l),
(517,-5,o),
(554,-5,qs),
(653,-5,o),
(783,104,o),
(783,209,qs),
(783,313,o),
(653,422,o),
(545,422,qs),
(447,422,o),
(332,378,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
29 1 3 0 20 10 2 2 3 9 1 1 2 3 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
29 1 3 0 20 10 2 2 3 9 1 4 2 3 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 0 3 2 0 3 103 7 1 5 5 6 93 0 6 6 32 75 0 2 2 1 95 4 1 1 1 40 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 0 0 3 2 0 3 103 7 1 5 5 6 93 0 6 6 32 75 0 4 4 33 75 0 2 2 1 95 0 1 1 40 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
17 17 17 18 36 35 36 32 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 825;
}
);
note = uni0402;
unicode = 1026;
},
{
glyphname = uni0403;
kernLeft = B;
kernRight = uni0403;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0413;
},
{
pos = (633,0);
ref = acutecomb.case;
}
);
width = 572;
}
);
note = uni0403;
unicode = 1027;
},
{
glyphname = uni0404;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (706,700);
ref = uni042D;
}
);
width = 707;
}
);
note = uni0404;
unicode = 1028;
},
{
glyphname = uni0405;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = S;
}
);
width = 627;
}
);
note = uni0405;
unicode = 1029;
},
{
glyphname = uni0406;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,0,l),
(191,700,l),
(118,700,l),
(118,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 32 75 0 1 1 33 1 76 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = uni0406;
unicode = 1030;
},
{
glyphname = uni0407;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = uni0308.case;
}
);
width = 309;
}
);
note = uni0407;
unicode = 1031;
},
{
glyphname = uni0408;
kernLeft = J;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
pos = (26,0);
ref = J;
}
);
width = 527;
}
);
note = uni0408;
unicode = 1032;
},
{
glyphname = uni0409;
kernLeft = uni0409;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni041B;
},
{
pos = (476,0);
ref = uni042C;
}
);
width = 1186;
}
);
note = uni0409;
unicode = 1033;
},
{
glyphname = uni040A;
kernLeft = B;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,415,l),
(687,700,l),
(614,700,l),
(614,412,l),
(191,412,l),
(191,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,348,l),
(614,348,l),
(614,0,l),
(891,0,ls),
(1010,0,o),
(1144,113,o),
(1144,213,qs),
(1144,309,o),
(1018,415,o),
(905,415,qs)
);
},
{
closed = 1;
nodes = (
(687,59,l),
(687,355,l),
(887,355,ls),
(975,355,o),
(1070,280,o),
(1070,210,qs),
(1070,139,o),
(974,59,o),
(887,59,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
9 6 2 4 7 1 1 8 4 1 101 5 1 3 3 32 75 10 1 8 8 0 93 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 7 1 4 7 85 9 6 2 4 0 1 8 4 1 101 5 1 3 3 32 75 10 1 8 8 0 93 2 1 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
19 19 0 0 19 27 19 26 25 23 0 18 0 17 17 17 17 17 17 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1184;
}
);
note = uni040A;
unicode = 1034;
},
{
glyphname = uni040B;
kernLeft = T;
kernRight = uni0402;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(443,420,o),
(330,373,q),
(330,636,l),
(594,636,l),
(594,700,l),
(11,700,l),
(11,636,l),
(257,636,l),
(257,0,l),
(330,0,l),
(330,305,l),
(441,354,o),
(528,354,qs),
(613,354,o),
(709,268,o),
(709,187,qs),
(709,0,l),
(782,0,l),
(782,195,ls),
(782,306,o),
(654,420,o),
(542,420,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
19 1 1 6 10 1 0 1 2 74 7 1 6 0 1 0 6 1 103 5 1 3 3 4 93 0 4 4 32 75 2 1 0 0 33 0 76 0 0 0 21 0 20 17 17 17 18 35 19 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 835;
}
);
note = uni040B;
unicode = 1035;
},
{
glyphname = uni040C;
kernLeft = B;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni041A;
},
{
pos = (652,0);
ref = acutecomb.case;
}
);
width = 702;
}
);
note = uni040C;
unicode = 1036;
},
{
glyphname = uni040D;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0418;
},
{
pos = (710,0);
ref = gravecomb.case;
}
);
width = 824;
}
);
note = uni040D;
unicode = 1037;
},
{
glyphname = uni040E;
kernLeft = X;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0423;
},
{
pos = (566,0);
ref = brevecombcy.case;
}
);
width = 680;
}
);
note = uni040E;
unicode = 1038;
},
{
glyphname = uni040F;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(614,700,l),
(614,64,l),
(191,64,l),
(191,700,l),
(118,700,l),
(118,0,l),
(368,0,l),
(368,-164,l),
(437,-164,l),
(437,0,l),
(687,0,l),
(687,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 132 5 1 3 3 32 75 0 4 4 0 93 2 1 0 0 33 0 76 17 17 17 17 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 806;
}
);
note = uni040F;
unicode = 1039;
},
{
glyphname = uni0410;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (13,0);
ref = A;
}
);
width = 744;
}
);
note = uni0410;
unicode = 1040;
},
{
glyphname = uni0411;
kernLeft = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,0,ls),
(534,0,o),
(673,108,o),
(673,209,qs),
(673,306,o),
(544,408,o),
(420,408,qs),
(191,408,l),
(191,637,l),
(630,637,l),
(630,700,l),
(118,700,l),
(118,0,l)
);
},
{
closed = 1;
nodes = (
(191,349,l),
(403,349,ls),
(502,349,o),
(599,278,o),
(599,206,qs),
(599,133,o),
(500,59,o),
(403,59,qs),
(191,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 2 0 5 4 2 5 101 0 1 1 0 93 0 0 0 32 75 6 1 4 4 3 93 0 3 3 33 3 76 14 13 20 18 13 21 14 21 36 33 17 16 7 7 24 
CALL[ ]	/* CallFunction */";
};
width = 727;
}
);
note = uni0411;
unicode = 1041;
},
{
glyphname = uni0412;
kernLeft = B;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(587,381,o),
(647,462,o),
(647,521,qs),
(647,608,o),
(521,700,o),
(409,700,qs),
(118,700,l),
(118,0,l),
(428,0,ls),
(553,0,o),
(682,98,o),
(682,189,qs),
(682,259,o),
(606,346,o),
(533,361,q)
);
},
{
closed = 1;
nodes = (
(405,641,ls),
(486,641,o),
(573,575,o),
(573,512,qs),
(573,449,o),
(486,383,o),
(405,383,qs),
(191,383,l),
(191,641,l)
);
},
{
closed = 1;
nodes = (
(191,59,l),
(191,326,l),
(428,326,ls),
(609,326,o),
(609,194,qs),
(609,59,o),
(428,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
14 1 4 2 1 74 0 2 0 4 5 2 4 101 0 3 3 1 93 0 1 1 32 75 6 1 5 5 0 93 0 0 0 33 0 76 24 24 24 30 24 29 35 36 38 33 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 749;
}
);
note = uni0412;
unicode = 1042;
},
{
glyphname = uni0413;
kernLeft = B;
kernRight = uni0403;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,700,l),
(118,0,l),
(191,0,l),
(190,636,l),
(563,636,l),
(563,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 2 93 0 2 2 32 75 0 1 1 33 1 76 17 17 16 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 572;
}
);
note = uni0413;
unicode = 1043;
},
{
glyphname = uni0414;
kernLeft = uni0409;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(656,700,l),
(184,700,l),
(176,473,ls),
(170,279,o),
(116,68,o),
(47,64,qs),
(12,64,l),
(11,-157,l),
(80,-157,l),
(81,0,l),
(692,0,l),
(692,-157,l),
(761,-157,l),
(761,64,l),
(656,64,l)
);
},
{
closed = 1;
nodes = (
(248,636,l),
(583,636,l),
(583,64,l),
(152,64,l),
(198,99,o),
(237,306,o),
(242,466,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
2 1 0 1 0 132 0 7 7 4 93 0 4 4 32 75 6 8 5 3 3 3 1 93 0 1 1 33 1 76 0 0 20 19 18 17 0 14 0 14 19 33 17 17 17 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 794;
}
);
note = uni0414;
unicode = 1044;
},
{
glyphname = uni0415;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = E;
}
);
width = 659;
}
);
note = uni0415;
unicode = 1045;
},
{
glyphname = uni0416;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(987,0,l),
(747,361,l),
(969,700,l),
(889,700,l),
(687,386,l),
(542,386,l),
(542,700,l),
(470,700,l),
(470,386,l),
(323,386,l),
(122,700,l),
(42,700,l),
(264,361,l),
(24,0,l),
(110,0,l),
(324,321,l),
(470,321,l),
(470,0,l),
(542,0,l),
(542,321,l),
(687,321,l),
(901,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
19 8 2 0 5 1 74 7 1 5 2 1 0 1 5 0 101 8 6 2 4 4 32 75 9 3 2 1 1 33 1 76 21 20 17 17 17 17 18 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 1011;
}
);
note = uni0416;
unicode = 1046;
},
{
glyphname = uni0417;
kernLeft = uni01B7;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,383,o),
(540,464,o),
(540,520,qs),
(540,578,o),
(471,664,o),
(353,710,o),
(282,710,qs),
(161,710,o),
(57,648,q),
(82,587,l),
(128,616,o),
(230,645,o),
(280,645,qs),
(360,645,o),
(466,574,o),
(466,512,qs),
(466,456,o),
(383,393,o),
(309,393,qs),
(163,393,l),
(163,333,l),
(313,333,ls),
(400,333,o),
(496,267,o),
(496,206,qs),
(496,160,o),
(439,93,o),
(343,57,o),
(286,57,qs),
(226,57,o),
(108,98,o),
(62,137,q),
(35,84,l),
(89,39,o),
(224,-6,o),
(294,-6,qs),
(368,-6,o),
(494,43,o),
(570,135,o),
(570,196,qs),
(570,259,o),
(491,349,o),
(422,366,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
33 1 4 5 32 1 3 4 42 1 2 3 10 9 2 1 2 4 74 0 3 0 2 1 3 2 101 0 4 4 5 95 0 5 5 37 75 0 1 1 0 95 0 0 0 38 0 76 36 36 33 37 37 37 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 636;
}
);
note = uni0417;
unicode = 1047;
},
{
glyphname = uni0418;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(185,0,l),
(633,579,l),
(633,0,l),
(706,0,l),
(706,700,l),
(639,700,l),
(191,120,l),
(191,700,l),
(118,700,l),
(118,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 74 1 1 0 0 32 75 3 1 2 2 33 2 76 18 17 18 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 824;
}
);
note = uni0418;
unicode = 1048;
},
{
glyphname = uni0419;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0418;
},
{
pos = (643,0);
ref = brevecombcy.case;
}
);
width = 824;
}
);
note = uni0419;
unicode = 1049;
},
{
glyphname = uni041A;
kernLeft = B;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(682,0,l),
(407,360,l),
(667,700,l),
(587,700,l),
(350,386,l),
(190,386,l),
(190,700,l),
(118,700,l),
(118,0,l),
(190,0,l),
(190,321,l),
(350,321,l),
(597,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
10 1 0 3 1 74 0 3 0 0 1 3 0 101 4 1 2 2 32 75 5 1 1 1 33 1 76 18 17 17 17 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = uni041A;
unicode = 1050;
},
{
glyphname = uni041B;
kernLeft = uni0409;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(182,400,ls),
(177,279,o),
(149,132,o),
(94,62,o),
(50,62,qs),
(34,62,o),
(17,66,q),
(11,0,l),
(40,-7,o),
(67,-7,qs),
(130,-7,o),
(206,80,o),
(243,257,o),
(248,402,qs),
(256,636,l),
(594,636,l),
(594,0,l),
(667,0,l),
(667,700,l),
(192,700,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
12 1 3 1 1 74 11 1 0 71 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
12 1 3 1 1 74 11 1 0 1 73 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 4 93 5 1 4 4 32 75 0 3 3 0 95 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 4 93 5 1 4 4 32 75 0 0 0 33 75 0 3 3 2 95 0 2 2 38 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 19 35 36 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 785;
}
);
note = uni041B;
unicode = 1051;
},
{
glyphname = uni041C;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(483,181,l),
(179,700,l),
(118,700,l),
(118,0,l),
(189,0,l),
(189,557,l),
(464,89,l),
(499,89,l),
(774,560,l),
(774,0,l),
(845,0,l),
(845,700,l),
(784,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
11 6 3 3 1 3 1 74 0 1 3 0 3 1 0 126 5 4 2 3 3 32 75 2 1 0 0 33 0 76 0 0 0 12 0 12 17 18 18 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 963;
}
);
note = uni041C;
unicode = 1052;
},
{
glyphname = uni041D;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = H;
}
);
width = 821;
}
);
note = uni041D;
unicode = 1053;
},
{
glyphname = uni041E;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = O;
}
);
width = 851;
}
);
note = uni041E;
unicode = 1054;
},
{
glyphname = uni041F;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(118,0,l),
(191,0,l),
(191,636,l),
(634,636,l),
(634,0,l),
(707,0,l),
(707,700,l),
(118,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 3 93 4 1 3 3 32 75 2 1 0 0 33 0 76 0 0 0 7 0 7 17 17 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 825;
}
);
note = uni041F;
unicode = 1055;
},
{
glyphname = uni0420;
kernLeft = B;
kernRight = P;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = P;
}
);
width = 710;
}
);
note = uni0420;
unicode = 1056;
},
{
glyphname = uni0421;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (6,0);
ref = C;
}
);
width = 716;
}
);
note = uni0421;
unicode = 1057;
},
{
glyphname = uni0422;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(11,700,l),
(11,636,l),
(257,636,l),
(257,0,l),
(330,0,l),
(330,636,l),
(576,636,l),
(576,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 3 93 0 3 3 32 75 0 1 1 33 1 76 17 17 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = uni0422;
unicode = 1058;
},
{
glyphname = uni0423;
kernLeft = X;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(344,226,l),
(100,700,l),
(21,700,l),
(305,161,l),
(285,127,ls),
(241,52,o),
(172,52,qs),
(142,52,o),
(106,66,q),
(85,6,l),
(131,-13,o),
(171,-13,qs),
(225,-13,o),
(316,48,o),
(350,111,qs),
(668,700,l),
(594,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
15 12 7 3 1 2 6 1 0 1 2 74 4 3 2 2 2 32 75 0 1 1 0 95 0 0 0 38 0 76 0 0 0 16 0 16 19 35 35 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni0423;
unicode = 1059;
},
{
glyphname = uni0424;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(669,624,o),
(493,630,q),
(493,700,l),
(424,700,l),
(424,630,l),
(247,624,o),
(50,466,o),
(50,351,qs),
(50,236,o),
(247,78,o),
(424,72,q),
(424,0,l),
(493,0,l),
(493,72,l),
(670,77,o),
(867,236,o),
(867,465,o)
);
},
{
closed = 1;
nodes = (
(493,570,l),
(637,565,o),
(796,439,o),
(796,351,qs),
(796,263,o),
(638,137,o),
(493,131,q)
);
},
{
closed = 1;
nodes = (
(121,439,o),
(278,564,o),
(424,570,q),
(424,131,l),
(280,138,o),
(121,263,o),
(121,351,qs)
);
}
);
width = 917;
}
);
note = uni0424;
unicode = 1060;
},
{
glyphname = uni0425;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(279,361,l),
(22,0,l),
(107,0,l),
(324,301,l),
(541,0,l),
(628,0,l),
(370,364,l),
(609,700,l),
(522,700,l),
(324,423,l),
(125,700,l),
(40,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
10 7 4 1 4 1 0 1 74 4 3 2 0 0 32 75 2 1 1 1 33 1 76 0 0 0 11 0 11 18 18 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uni0425;
unicode = 1061;
},
{
glyphname = uni0426;
kernLeft = B;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,700,l),
(614,700,l),
(614,64,l),
(191,64,l),
(191,700,l),
(118,700,l),
(118,0,l),
(729,0,l),
(729,-164,l),
(798,-164,l),
(798,64,l),
(687,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 132 4 1 2 2 32 75 6 5 2 3 3 1 93 0 1 1 33 1 76 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 827;
}
);
note = uni0426;
unicode = 1062;
},
{
glyphname = uni0427;
kernLeft = uni0427;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(540,356,l),
(431,306,o),
(326,306,qs),
(234,306,o),
(132,396,o),
(132,477,qs),
(132,700,l),
(59,700,l),
(59,469,ls),
(59,361,o),
(196,241,o),
(319,241,qs),
(426,241,o),
(540,290,q),
(540,0,l),
(612,0,l),
(612,700,l),
(540,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
16 1 3 2 3 1 1 3 2 74 0 3 0 1 0 3 1 103 5 4 2 2 2 32 75 0 0 0 33 0 76 0 0 0 17 0 17 35 19 34 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = uni0427;
unicode = 1063;
},
{
glyphname = uni0428;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(903,64,l),
(584,64,l),
(584,700,l),
(511,700,l),
(511,64,l),
(191,64,l),
(191,700,l),
(118,700,l),
(118,0,l),
(976,0,l),
(976,700,l),
(903,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
6 5 3 3 1 1 32 75 4 1 2 2 0 93 0 0 0 33 0 76 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1094;
}
);
note = uni0428;
unicode = 1064;
},
{
glyphname = uni0429;
kernLeft = B;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0428;
},
{
pos = (856,0);
ref = descendercy.case;
}
);
width = 1117;
}
);
note = uni0429;
unicode = 1065;
},
{
glyphname = uni042A;
kernLeft = T;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(302,450,l),
(302,700,l),
(11,700,l),
(11,636,l),
(229,636,l),
(229,0,l),
(506,0,ls),
(637,0,o),
(776,117,o),
(776,230,qs),
(776,338,o),
(646,450,o),
(522,450,qs)
);
},
{
closed = 1;
nodes = (
(302,59,l),
(302,390,l),
(505,390,ls),
(703,390,o),
(703,229,qs),
(703,145,o),
(602,59,o),
(505,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
6 1 3 0 4 5 3 4 101 0 1 1 2 93 0 2 2 32 75 7 1 5 5 0 93 0 0 0 33 0 76 13 13 0 0 13 20 13 19 18 16 0 12 0 11 17 17 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 820;
}
);
note = uni042A;
unicode = 1066;
},
{
glyphname = uni042B;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni042C;
},
{
pos = (669,0);
ref = uni0406;
}
);
width = 978;
}
);
note = uni042B;
unicode = 1067;
},
{
glyphname = uni042C;
kernLeft = B;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,450,l),
(191,700,l),
(118,700,l),
(118,0,l),
(396,0,ls),
(527,0,o),
(666,117,o),
(666,230,qs),
(666,338,o),
(535,450,o),
(411,450,qs)
);
},
{
closed = 1;
nodes = (
(191,59,l),
(191,390,l),
(394,390,ls),
(592,390,o),
(592,229,qs),
(592,145,o),
(491,59,o),
(394,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 1 2 0 3 4 2 3 101 0 1 1 32 75 6 1 4 4 0 93 0 0 0 33 0 76 11 11 0 0 11 18 11 17 16 14 0 10 0 9 17 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 710;
}
);
note = uni042C;
unicode = 1068;
},
{
glyphname = uni042D;
kernLeft = uni01B7;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(217,706,o),
(81,654,o),
(35,603,q),
(81,556,l),
(164,640,o),
(296,640,qs),
(368,640,o),
(488,575,o),
(563,460,o),
(571,387,q),
(211,387,l),
(211,326,l),
(572,326,l),
(567,250,o),
(492,129,o),
(370,60,o),
(296,60,qs),
(164,60,o),
(81,144,q),
(35,97,l),
(81,46,o),
(217,-6,o),
(299,-6,qs),
(397,-6,o),
(556,86,o),
(647,249,o),
(647,350,qs),
(647,451,o),
(556,614,o),
(397,706,o),
(299,706,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
27 26 2 3 4 11 10 2 1 2 2 74 0 3 0 2 1 3 2 101 0 4 4 5 95 6 1 5 5 37 75 0 1 1 0 95 0 0 0 38 0 76 0 0 0 30 0 29 35 17 19 36 38 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 706;
}
);
note = uni042D;
unicode = 1069;
},
{
glyphname = uni042E;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(591,706,o),
(439,625,o),
(344,480,o),
(336,389,q),
(191,389,l),
(191,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,322,l),
(335,322,l),
(341,228,o),
(435,78,o),
(589,-6,o),
(683,-6,qs),
(782,-6,o),
(942,86,o),
(1033,249,o),
(1033,350,qs),
(1033,451,o),
(942,614,o),
(782,706,o),
(683,706,qs)
);
},
{
closed = 1;
nodes = (
(606,60,o),
(480,135,o),
(408,267,o),
(408,350,qs),
(408,433,o),
(480,565,o),
(606,640,o),
(683,640,qs),
(761,640,o),
(887,565,o),
(959,433,o),
(959,350,qs),
(959,267,o),
(887,135,o),
(761,60,o),
(683,60,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 0 1 7 4 1 101 0 6 6 3 95 8 5 2 3 3 32 75 9 1 7 7 0 95 2 1 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 0 1 7 4 1 101 0 3 3 32 75 0 6 6 5 95 8 1 5 5 37 75 0 2 2 33 75 9 1 7 7 0 95 0 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 23 0 0 23 38 23 37 31 29 0 22 0 21 17 17 17 19 38 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1092;
}
);
note = uni042E;
unicode = 1070;
},
{
glyphname = uni042F;
kernLeft = X;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,700,o),
(66,570,o),
(66,452,qs),
(66,367,o),
(148,250,o),
(225,227,q),
(66,0,l),
(145,0,l),
(292,214,l),
(318,212,o),
(332,212,qs),
(541,212,l),
(541,0,l),
(614,0,l),
(614,700,l),
(342,700,ls)
);
},
{
closed = 1;
nodes = (
(140,543,o),
(247,636,o),
(345,636,qs),
(541,636,l),
(541,275,l),
(338,275,ls),
(241,275,o),
(140,368,o),
(140,454,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
9 1 1 4 1 74 0 4 0 1 0 4 1 101 0 5 5 3 93 6 1 3 3 32 75 2 1 0 0 33 0 76 0 0 22 20 19 17 0 15 0 14 18 33 17 7 7 23 
CALL[ ]	/* CallFunction */";
};
width = 732;
}
);
note = uni042F;
unicode = 1071;
},
{
glyphname = uni0430;
kernLeft = a;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-1,0);
ref = a;
}
);
width = 583;
}
);
note = uni0430;
unicode = 1072;
},
{
glyphname = uni0431;
kernLeft = at;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,513,o),
(168,444,o),
(136,383,q),
(141,507,o),
(247,634,o),
(360,659,qs),
(582,710,l),
(570,775,l),
(334,721,ls),
(197,689,o),
(68,509,o),
(68,340,qs),
(68,178,o),
(212,-6,o),
(343,-6,qs),
(421,-6,o),
(541,60,o),
(608,179,o),
(608,256,qs),
(608,331,o),
(544,448,o),
(429,513,o),
(356,513,qs)
);
},
{
closed = 1;
nodes = (
(290,53,o),
(202,104,o),
(153,196,o),
(153,254,qs),
(153,312,o),
(202,400,o),
(289,449,o),
(345,449,qs),
(401,449,o),
(488,400,o),
(536,312,o),
(536,254,qs),
(536,196,o),
(487,104,o),
(400,53,o),
(345,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
19 1 3 2 1 74 14 1 1 72 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 2 1 95 4 1 1 1 34 75 5 1 3 3 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
4 1 1 0 2 3 1 2 103 5 1 3 3 0 95 0 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
23 23 0 0 23 38 23 37 31 29 0 22 0 21 38 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uni0431;
unicode = 1073;
},
{
glyphname = uni0432;
kernLeft = i;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(478,287,o),
(525,348,o),
(525,391,qs),
(525,456,o),
(423,526,o),
(333,526,qs),
(101,526,l),
(101,0,l),
(340,0,ls),
(441,0,o),
(543,74,o),
(543,143,qs),
(543,247,o),
(436,272,q)
);
},
{
closed = 1;
nodes = (
(328,470,ls),
(389,470,o),
(454,426,o),
(454,382,qs),
(454,338,o),
(389,292,o),
(328,292,qs),
(170,292,l),
(170,470,l)
);
},
{
closed = 1;
nodes = (
(170,56,l),
(170,239,l),
(344,239,ls),
(411,239,o),
(473,194,o),
(473,147,qs),
(473,100,o),
(405,56,o),
(337,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
13 1 4 2 1 74 0 2 0 4 5 2 4 101 0 3 3 1 93 0 1 1 34 75 6 1 5 5 0 93 0 0 0 33 0 76 23 23 23 31 23 30 37 36 38 33 35 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uni0432;
unicode = 1074;
},
{
glyphname = uni0433;
kernLeft = i;
kernRight = uni0433;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,526,l),
(101,0,l),
(172,0,l),
(172,463,l),
(473,463,l),
(473,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 2 93 0 2 2 34 75 0 1 1 33 1 76 17 17 16 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 475;
}
);
note = uni0433;
unicode = 1075;
},
{
glyphname = uni0434;
kernLeft = uni0434;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,526,l),
(144,526,l),
(137,350,ls),
(130,215,o),
(92,65,o),
(39,62,qs),
(9,62,l),
(9,-127,l),
(76,-127,l),
(76,0,l),
(547,0,l),
(547,-127,l),
(614,-127,l),
(614,62,l),
(532,62,l)
);
},
{
closed = 1;
nodes = (
(208,463,l),
(461,463,l),
(461,62,l),
(133,62,l),
(169,89,o),
(197,234,o),
(202,346,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
2 1 0 1 1 0 111 0 7 7 4 93 0 4 4 34 75 6 8 5 3 3 3 1 93 0 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
2 1 0 1 0 132 0 7 7 4 93 0 4 4 34 75 6 8 5 3 3 3 1 93 0 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 20 19 18 17 0 14 0 14 19 33 17 17 17 9 7 25 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni0434;
unicode = 1076;
},
{
glyphname = uni0435;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = e;
}
);
width = 618;
}
);
note = uni0435;
unicode = 1077;
},
{
glyphname = uni0436;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(809,0,l),
(620,270,l),
(794,526,l),
(717,526,l),
(562,295,l),
(448,295,l),
(448,526,l),
(377,526,l),
(377,295,l),
(263,295,l),
(109,526,l),
(32,526,l),
(206,271,l),
(17,0,l),
(102,0,l),
(263,234,l),
(377,234,l),
(377,0,l),
(448,0,l),
(448,234,l),
(562,234,l),
(724,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
19 8 2 0 5 1 74 7 1 5 2 1 0 1 5 0 101 8 6 2 4 4 34 75 9 3 2 1 1 33 1 76 21 20 17 17 17 17 18 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 826;
}
);
note = uni0436;
unicode = 1078;
},
{
glyphname = uni0437;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,289,o),
(459,351,o),
(459,391,qs),
(459,433,o),
(404,497,o),
(307,532,o),
(247,532,qs),
(146,532,o),
(52,483,q),
(72,428,l),
(155,471,o),
(240,471,qs),
(305,471,o),
(386,423,o),
(386,381,qs),
(386,343,o),
(314,298,o),
(255,298,qs),
(169,298,l),
(169,246,l),
(259,246,ls),
(325,246,o),
(401,199,o),
(401,157,qs),
(401,110,o),
(308,55,o),
(235,55,qs),
(186,55,o),
(90,85,o),
(54,112,q),
(30,59,l),
(71,27,o),
(181,-6,o),
(238,-6,qs),
(303,-6,o),
(411,33,o),
(474,105,o),
(474,151,qs),
(474,197,o),
(413,261,o),
(357,274,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
31 1 4 5 30 1 3 4 40 1 2 3 10 9 2 1 2 4 74 0 3 0 2 1 3 2 101 0 4 4 5 95 0 5 5 39 75 0 1 1 0 95 0 0 0 38 0 76 35 36 33 36 37 37 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = uni0437;
unicode = 1079;
},
{
glyphname = uni0438;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(165,0,l),
(515,418,l),
(515,0,l),
(586,0,l),
(586,526,l),
(523,526,l),
(172,108,l),
(172,526,l),
(101,526,l),
(101,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
7 2 2 2 0 1 74 1 1 0 0 34 75 3 1 2 2 33 2 76 18 17 18 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 688;
}
);
note = uni0438;
unicode = 1080;
},
{
glyphname = uni0439;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0438;
},
{
pos = (562,1);
ref = brevecombcy;
}
);
width = 688;
}
);
note = uni0439;
unicode = 1081;
},
{
glyphname = uni043A;
kernLeft = i;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,0,l),
(348,271,l),
(555,526,l),
(478,526,l),
(293,295,l),
(172,295,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,234,l),
(292,234,l),
(486,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
10 1 0 3 1 74 0 3 0 0 1 3 0 101 4 1 2 2 34 75 5 1 1 1 33 1 76 18 17 17 17 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uni043A;
unicode = 1082;
},
{
glyphname = uni043B;
kernLeft = uni0434;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,338,ls),
(132,246,o),
(118,134,o),
(76,58,o),
(35,58,qs),
(28,58,o),
(10,62,q),
(5,1,l),
(35,-7,o),
(56,-7,qs),
(133,-7,o),
(193,169,o),
(201,333,qs),
(208,463,l),
(460,463,l),
(460,0,l),
(531,0,l),
(531,526,l),
(146,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
11 1 3 1 10 1 0 3 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 4 93 5 1 4 4 34 75 0 3 3 0 95 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
0 1 1 4 93 5 1 4 4 34 75 0 0 0 33 75 0 3 3 2 95 0 2 2 38 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 18 0 18 35 35 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = uni043B;
unicode = 1083;
},
{
glyphname = uni043C;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,147,l),
(173,526,l),
(101,526,l),
(101,0,l),
(166,0,l),
(166,417,l),
(379,64,l),
(411,64,l),
(624,416,l),
(624,0,l),
(689,0,l),
(689,526,l),
(623,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
11 6 3 3 1 3 1 74 0 1 3 0 3 1 0 126 5 4 2 3 3 34 75 2 1 0 0 33 0 76 0 0 0 12 0 12 17 18 18 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 790;
}
);
note = uni043C;
unicode = 1084;
},
{
glyphname = uni043D;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,232,l),
(503,232,l),
(503,0,l),
(574,0,l),
(574,526,l),
(503,526,l),
(503,293,l),
(172,293,l),
(172,526,l),
(101,526,l),
(101,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 101 2 1 0 0 34 75 5 1 3 3 33 3 76 17 17 17 17 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = uni043D;
unicode = 1085;
},
{
glyphname = uni043E;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = o;
}
);
width = 636;
}
);
note = uni043E;
unicode = 1086;
},
{
glyphname = uni043F;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(101,0,l),
(172,0,l),
(172,463,l),
(502,463,l),
(502,0,l),
(573,0,l),
(573,526,l),
(101,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 1 3 93 4 1 3 3 34 75 2 1 0 0 33 0 76 0 0 0 7 0 7 17 17 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni043F;
unicode = 1087;
},
{
glyphname = uni0440;
kernLeft = i;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = p;
}
);
width = 686;
}
);
note = uni0440;
unicode = 1088;
},
{
glyphname = uni0441;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = c;
}
);
width = 563;
}
);
note = uni0441;
unicode = 1089;
},
{
glyphname = uni0442;
kernLeft = uni0442;
kernRight = uni0433;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,526,l),
(2,463,l),
(201,463,l),
(201,0,l),
(272,0,l),
(272,463,l),
(471,463,l),
(471,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 3 93 0 3 3 34 75 0 1 1 33 1 76 17 17 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 473;
}
);
note = uni0442;
unicode = 1090;
},
{
glyphname = uni0443;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = y;
}
);
width = 558;
}
);
note = uni0443;
unicode = 1091;
},
{
glyphname = uni0444;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(736,385,o),
(574,523,o),
(426,530,q),
(426,742,l),
(357,742,l),
(357,530,l),
(210,524,o),
(49,386,o),
(49,264,qs),
(49,141,o),
(210,0,o),
(357,-6,q),
(357,-194,l),
(426,-194,l),
(426,-5,l),
(574,1,o),
(736,141,o),
(736,264,qs)
);
},
{
closed = 1;
nodes = (
(119,356,o),
(241,461,o),
(357,467,q),
(357,57,l),
(240,64,o),
(119,170,o),
(119,264,qs)
);
},
{
closed = 1;
nodes = (
(426,467,l),
(543,461,o),
(666,357,o),
(666,264,qs),
(666,169,o),
(543,63,o),
(426,57,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
0 4 3 4 131 8 1 7 7 3 95 5 1 3 3 34 75 10 9 2 6 6 0 95 2 1 0 0 33 75 0 1 1 36 1 76 25 25 25 31 25 31 23 17 20 17 17 20 17 17 17 11 7 29 
CALL[ ]	/* CallFunction */";
};
width = 785;
}
);
note = uni0444;
unicode = 1092;
},
{
glyphname = uni0445;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-4,0);
ref = x;
}
);
width = 526;
}
);
note = uni0445;
unicode = 1093;
},
{
glyphname = uni0446;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(564,526,l),
(493,526,l),
(493,62,l),
(172,62,l),
(172,526,l),
(101,526,l),
(101,0,l),
(582,0,l),
(582,-132,l),
(649,-132,l),
(649,62,l),
(564,62,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 1 0 132 4 1 2 2 34 75 6 5 2 3 3 1 94 0 1 1 33 1 76 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = uni0446;
unicode = 1094;
},
{
glyphname = uni0447;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(427,276,l),
(335,237,o),
(261,237,qs),
(194,237,o),
(118,298,o),
(118,357,qs),
(118,526,l),
(47,526,l),
(47,353,ls),
(47,266,o),
(153,179,o),
(248,179,qs),
(336,179,o),
(427,219,q),
(427,0,l),
(498,0,l),
(498,526,l),
(427,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
16 1 3 2 3 1 1 3 2 74 0 3 0 1 0 3 1 103 5 4 2 2 2 34 75 0 0 0 33 0 76 0 0 0 17 0 17 35 19 34 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uni0447;
unicode = 1095;
},
{
glyphname = uni0448;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(756,62,l),
(501,62,l),
(501,526,l),
(430,526,l),
(430,62,l),
(172,62,l),
(172,526,l),
(101,526,l),
(101,0,l),
(827,0,l),
(827,526,l),
(756,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
6 5 3 3 1 1 34 75 4 1 2 2 0 94 0 0 0 33 0 76 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 929;
}
);
note = uni0448;
unicode = 1096;
},
{
glyphname = uni0449;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0448;
},
{
pos = (692,0);
ref = descendercy;
}
);
width = 929;
}
);
note = uni0449;
unicode = 1097;
},
{
glyphname = uni044A;
kernLeft = uni0442;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(237,342,l),
(237,526,l),
(2,526,l),
(2,463,l),
(166,463,l),
(166,0,l),
(374,0,ls),
(477,0,o),
(587,89,o),
(587,174,qs),
(587,254,o),
(485,342,o),
(388,342,qs)
);
},
{
closed = 1;
nodes = (
(237,55,l),
(237,288,l),
(373,288,ls),
(515,288,o),
(515,174,qs),
(515,115,o),
(443,55,o),
(373,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
6 1 3 0 4 5 3 4 101 0 1 1 2 93 0 2 2 34 75 7 1 5 5 0 93 0 0 0 33 0 76 13 13 0 0 13 20 13 19 18 16 0 12 0 11 17 17 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = uni044A;
unicode = 1098;
},
{
glyphname = uni044B;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,342,l),
(172,526,l),
(101,526,l),
(101,0,l),
(309,-1,ls),
(413,-2,o),
(525,88,o),
(525,172,qs),
(525,253,o),
(421,339,o),
(322,340,qs)
);
},
{
closed = 1;
nodes = (
(684,0,l),
(684,526,l),
(613,526,l),
(613,0,l)
);
},
{
closed = 1;
nodes = (
(172,55,l),
(172,289,l),
(305,287,ls),
(379,286,o),
(453,230,o),
(453,172,qs),
(453,113,o),
(378,52,o),
(305,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
7 1 2 0 5 6 2 5 101 3 1 1 1 34 75 8 1 6 6 0 94 4 1 0 0 33 0 76 15 15 0 0 15 23 15 22 21 19 14 13 12 11 0 10 0 9 17 36 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 785;
}
);
note = uni044B;
unicode = 1099;
},
{
glyphname = uni044C;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,342,l),
(172,526,l),
(101,526,l),
(101,0,l),
(313,-1,ls),
(418,-2,o),
(529,88,o),
(529,172,qs),
(529,253,o),
(426,339,o),
(327,340,qs)
);
},
{
closed = 1;
nodes = (
(172,55,l),
(172,289,l),
(309,287,ls),
(383,286,o),
(457,230,o),
(457,172,qs),
(457,113,o),
(382,52,o),
(309,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
5 1 2 0 3 4 2 3 101 0 1 1 34 75 6 1 4 4 0 94 0 0 0 33 0 76 11 11 0 0 11 19 11 18 17 15 0 10 0 9 17 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 563;
}
);
note = uni044C;
unicode = 1100;
},
{
glyphname = uni044D;
kernLeft = uni01EF;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(178,530,o),
(68,489,o),
(30,450,q),
(72,409,l),
(139,472,o),
(241,472,qs),
(325,472,o),
(443,373,o),
(454,294,q),
(174,294,l),
(174,240,l),
(455,240,l),
(450,187,o),
(391,101,o),
(298,53,o),
(241,53,qs),
(139,53,o),
(72,116,q),
(30,74,l),
(68,35,o),
(178,-6,o),
(244,-6,qs),
(323,-6,o),
(450,64,o),
(523,187,o),
(523,263,qs),
(523,339,o),
(450,461,o),
(323,530,o),
(244,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
26 25 2 3 4 11 10 2 1 2 2 74 0 3 0 2 1 3 2 101 0 4 4 5 95 6 1 5 5 39 75 0 1 1 0 95 0 0 0 38 0 76 0 0 0 29 0 28 34 17 19 36 38 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 571;
}
);
note = uni044D;
unicode = 1101;
},
{
glyphname = uni044E;
kernLeft = i;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,530,o),
(372,472,o),
(301,367,o),
(293,299,q),
(172,299,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,234,l),
(292,234,l),
(298,164,o),
(369,56,o),
(483,-5,o),
(553,-5,qs),
(627,-5,o),
(746,64,o),
(814,186,o),
(814,263,qs),
(814,340,o),
(746,462,o),
(627,530,o),
(553,530,qs)
);
},
{
closed = 1;
nodes = (
(499,57,o),
(412,109,o),
(362,203,o),
(362,263,qs),
(362,323,o),
(412,417,o),
(499,468,o),
(553,468,qs),
(607,468,o),
(694,417,o),
(744,323,o),
(744,263,qs),
(744,203,o),
(694,109,o),
(607,57,o),
(553,57,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 0 1 7 4 1 101 0 6 6 3 95 8 5 2 3 3 34 75 9 1 7 7 0 95 2 1 0 0 40 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 0 1 7 4 1 101 0 6 6 3 95 8 5 2 3 3 34 75 0 2 2 33 75 9 1 7 7 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 23 0 0 23 38 23 37 31 29 0 22 0 21 17 17 17 19 38 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 865;
}
);
note = uni044E;
unicode = 1102;
},
{
glyphname = uni044F;
kernLeft = x;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(180,526,o),
(60,434,o),
(60,346,qs),
(60,283,o),
(126,201,o),
(187,184,q),
(56,0,l),
(133,0,l),
(255,174,l),
(275,174,l),
(440,174,l),
(440,0,l),
(505,0,l),
(505,526,l),
(284,526,ls)
);
},
{
closed = 1;
nodes = (
(132,463,o),
(286,463,qs),
(440,463,l),
(440,227,l),
(281,227,ls),
(132,227,o),
(132,344,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
8 1 1 4 1 74 0 4 0 1 0 4 1 101 0 5 5 3 93 6 1 3 3 34 75 2 1 0 0 33 0 76 0 0 20 18 17 15 0 14 0 13 17 33 17 7 7 23 
CALL[ ]	/* CallFunction */";
};
width = 606;
}
);
note = uni044F;
unicode = 1103;
},
{
glyphname = uni0450;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = e;
},
{
pos = (607,1);
ref = gravecomb;
}
);
width = 618;
}
);
note = uni0450;
unicode = 1104;
},
{
glyphname = uni0451;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = e;
},
{
pos = (607,1);
ref = uni0308;
}
);
width = 618;
}
);
note = uni0451;
unicode = 1105;
},
{
glyphname = uni0452;
kernLeft = b;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(301,530,o),
(198,478,o),
(170,430,q),
(170,607,l),
(419,607,l),
(419,659,l),
(170,659,l),
(170,742,l),
(102,742,l),
(102,659,l),
(-7,659,l),
(-7,607,l),
(102,607,l),
(102,0,l),
(173,0,l),
(173,276,ls),
(173,365,o),
(272,466,o),
(357,466,qs),
(432,466,o),
(514,380,o),
(514,298,qs),
(514,-39,ls),
(514,-88,o),
(469,-138,o),
(427,-138,qs),
(377,-138,o),
(345,-111,q),
(320,-165,l),
(339,-182,o),
(398,-199,o),
(432,-199,qs),
(505,-199,o),
(585,-113,o),
(585,-39,qs),
(585,305,ls),
(585,415,o),
(468,530,o),
(369,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
35 1 3 2 10 1 1 3 9 1 0 1 3 74 0 6 5 6 131 7 1 5 8 1 4 9 5 4 101 0 2 2 9 95 10 1 9 9 39 75 0 3 3 33 75 0 1 1 0 95 0 0 0 41 0 76 0 0 0 38 0 37 17 17 17 17 17 19 37 36 37 11 7 29 
CALL[ ]	/* CallFunction */";
};
width = 671;
}
);
note = uni0452;
unicode = 1106;
},
{
glyphname = uni0453;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0433;
},
{
pos = (590,-2);
ref = acutecomb;
}
);
width = 475;
}
);
note = uni0453;
unicode = 1107;
},
{
glyphname = uni0454;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (572,526);
ref = uni044D;
}
);
width = 572;
}
);
note = uni0454;
unicode = 1108;
},
{
glyphname = uni0455;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
pos = (21,0);
ref = s;
}
);
width = 528;
}
);
note = uni0455;
unicode = 1109;
},
{
glyphname = uni0456;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = dotlessi;
},
{
pos = (437,0);
ref = uni0307.i;
}
);
width = 273;
}
);
note = uni0456;
unicode = 1110;
},
{
glyphname = uni0457;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0308.narrow;
}
);
width = 269;
}
);
note = uni0457;
unicode = 1111;
},
{
glyphname = uni0458;
kernLeft = j;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-2,0);
ref = uni0237;
},
{
pos = (438,1);
ref = uni0307.i;
}
);
width = 274;
}
);
note = uni0458;
unicode = 1112;
},
{
glyphname = uni0459;
kernLeft = uni0434;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043B;
},
{
pos = (359,0);
ref = uni044C;
}
);
width = 922;
}
);
note = uni0459;
unicode = 1113;
},
{
glyphname = uni045A;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(563,314,l),
(563,526,l),
(492,526,l),
(492,314,l),
(172,314,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,253,l),
(492,253,l),
(492,0,l),
(710,0,ls),
(807,0,o),
(915,86,o),
(915,162,qs),
(915,235,o),
(816,314,o),
(724,314,qs)
);
},
{
closed = 1;
nodes = (
(563,54,l),
(563,256,l),
(708,256,ls),
(773,256,o),
(843,206,o),
(843,158,qs),
(843,108,o),
(772,54,o),
(708,54,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
9 6 2 4 7 1 1 8 4 1 101 5 1 3 3 34 75 10 1 8 8 0 94 2 1 0 0 33 0 76 19 19 0 0 19 27 19 26 25 23 0 18 0 17 17 17 17 17 17 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 944;
}
);
note = uni045A;
unicode = 1114;
},
{
glyphname = uni045B;
kernLeft = uni045B;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,530,o),
(202,480,o),
(173,435,q),
(173,610,l),
(422,610,l),
(422,655,l),
(173,655,l),
(173,742,l),
(102,742,l),
(102,655,l),
(-33,655,l),
(-33,610,l),
(102,610,l),
(102,0,l),
(173,0,l),
(173,276,ls),
(173,365,o),
(272,466,o),
(357,466,qs),
(432,466,o),
(514,380,o),
(514,298,qs),
(514,0,l),
(585,0,l),
(585,305,ls),
(585,415,o),
(468,530,o),
(369,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
24 1 0 1 1 74 0 5 4 5 131 6 1 4 7 1 3 8 4 3 101 0 1 1 8 95 9 1 8 8 39 75 2 1 0 0 33 0 76 0 0 0 27 0 26 17 17 17 17 17 19 35 19 10 7 28 
CALL[ ]	/* CallFunction */";
};
width = 670;
}
);
note = uni045B;
unicode = 1115;
},
{
glyphname = uni045C;
kernLeft = i;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043A;
},
{
pos = (599,1);
ref = acutecomb;
}
);
width = 581;
}
);
note = uni045C;
unicode = 1116;
},
{
glyphname = uni045D;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0438;
},
{
pos = (640,1);
ref = gravecomb;
}
);
width = 688;
}
);
note = uni045D;
unicode = 1117;
},
{
glyphname = uni045E;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = y;
},
{
pos = (486,1);
ref = brevecombcy;
}
);
width = 558;
}
);
note = uni045E;
unicode = 1118;
},
{
glyphname = uni045F;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,526,l),
(467,62,l),
(172,62,l),
(172,526,l),
(101,526,l),
(101,0,l),
(286,0,l),
(286,-132,l),
(354,-132,l),
(354,0,l),
(538,0,l),
(538,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
0 1 0 1 132 5 1 3 3 34 75 0 4 4 0 94 2 1 0 0 33 0 76 17 17 17 17 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 639;
}
);
note = uni045F;
unicode = 1119;
},
{
glyphname = uni0462;
kernLeft = T;
kernRight = uni0462;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(282,447,l),
(282,563,l),
(501,563,l),
(501,619,l),
(282,619,l),
(282,742,l),
(209,742,l),
(209,619,l),
(19,619,l),
(19,563,l),
(209,563,l),
(209,0,l),
(489,0,ls),
(619,0,o),
(758,118,o),
(758,228,qs),
(758,335,o),
(629,447,o),
(505,447,qs)
);
},
{
closed = 1;
nodes = (
(282,59,l),
(282,388,l),
(488,388,ls),
(683,388,o),
(683,226,qs),
(683,143,o),
(585,59,o),
(488,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 3 2 3 131 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 101 10 1 8 8 0 93 0 0 0 33 0 76 19 19 0 0 19 26 19 25 24 22 0 18 0 17 17 17 17 17 17 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 802;
}
);
note = uni0462;
unicode = 1122;
},
{
glyphname = uni0463;
kernLeft = uni0442;
kernRight = uni0463;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(206,342,l),
(206,491,l),
(403,491,l),
(403,545,l),
(206,545,l),
(206,742,l),
(135,742,l),
(135,545,l),
(2,545,l),
(2,491,l),
(135,491,l),
(135,0,l),
(347,-1,ls),
(451,-2,o),
(563,88,o),
(563,172,qs),
(563,253,o),
(459,339,o),
(360,340,qs)
);
},
{
closed = 1;
nodes = (
(206,55,l),
(206,289,l),
(343,287,ls),
(417,286,o),
(491,230,o),
(491,172,qs),
(491,113,o),
(416,52,o),
(343,53,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 3 2 3 131 9 1 6 0 7 8 6 7 101 5 1 1 1 2 93 4 1 2 2 34 75 10 1 8 8 0 93 0 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 3 2 3 131 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 101 10 1 8 8 0 93 0 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
19 19 0 0 19 27 19 26 25 23 0 18 0 17 17 17 17 17 17 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 596;
}
);
note = uni0463;
unicode = 1123;
},
{
glyphname = uni046A;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(703,369,o),
(530,369,qs),
(519,369,l),
(783,652,l),
(783,700,l),
(101,700,l),
(101,649,l),
(365,369,l),
(355,369,ls),
(183,369,o),
(96,163,qs),
(22,0,l),
(99,0,l),
(162,144,ls),
(230,313,o),
(371,313,qs),
(408,313,l),
(408,0,l),
(477,0,l),
(477,313,l),
(515,313,ls),
(582,313,o),
(687,229,o),
(722,144,qs),
(785,0,l),
(862,0,l),
(789,163,ls)
);
},
{
closed = 1;
nodes = (
(699,642,l),
(442,369,l),
(185,642,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
22 19 2 8 6 1 74 7 1 5 3 1 1 0 5 1 103 0 8 8 6 93 0 6 6 32 75 4 2 2 0 0 33 0 76 19 34 18 34 18 33 17 35 16 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 884;
}
);
note = uni046A;
unicode = 1130;
},
{
glyphname = uni046B;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(575,201,o),
(480,279,o),
(414,279,qs),
(410,279,l),
(600,479,l),
(600,526,l),
(78,526,l),
(78,479,l),
(268,279,l),
(267,279,ls),
(201,279,o),
(106,202,o),
(72,120,qs),
(20,0,l),
(91,0,l),
(134,103,ls),
(158,167,o),
(231,228,o),
(281,228,qs),
(308,228,l),
(308,0,l),
(370,0,l),
(370,228,l),
(401,228,ls),
(451,228,o),
(522,167,o),
(546,103,qs),
(590,0,l),
(661,0,l),
(609,120,ls)
);
},
{
closed = 1;
nodes = (
(525,475,l),
(339,279,l),
(154,475,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
24 21 2 8 6 1 74 7 1 5 3 1 1 0 5 1 103 0 8 8 6 93 0 6 6 34 75 4 2 2 0 0 33 0 76 20 34 19 19 19 33 17 35 16 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 680;
}
);
note = uni046B;
unicode = 1131;
},
{
glyphname = uni0472;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = O;
},
{
pos = (797,-87);
ref = uni0336;
scale = (0.8669,1);
}
);
width = 851;
}
);
note = uni0472;
unicode = 1138;
},
{
glyphname = uni0473;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04E9;
}
);
width = 646;
}
);
note = uni0473;
unicode = 1139;
},
{
glyphname = uni0474;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(380,0,l),
(563,505,ls),
(588,573,o),
(643,634,o),
(686,634,qs),
(706,634,o),
(728,628,q),
(737,701,l),
(702,709,o),
(676,709,qs),
(615,709,o),
(533,631,o),
(504,548,qs),
(344,106,l),
(99,700,l),
(19,700,l),
(307,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
9 2 2 3 2 1 74 8 1 0 72 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
8 1 0 1 9 2 2 3 2 2 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 2 2 0 95 1 1 0 0 32 75 0 3 3 33 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 32 75 0 2 2 1 95 0 1 1 37 75 0 3 3 33 3 76 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
19 35 36 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = uni0474;
unicode = 1140;
},
{
glyphname = uni0475;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(276,91,l),
(88,526,l),
(10,526,l),
(240,0,l),
(311,0,l),
(453,367,ls),
(474,420,o),
(506,460,o),
(530,460,qs),
(545,460,o),
(565,454,q),
(573,524,l),
(541,532,o),
(520,532,qs),
(478,532,o),
(421,476,o),
(397,413,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
4 1 1 0 15 5 2 2 1 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
4 1 1 3 15 5 2 2 1 2 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
0 1 1 0 95 3 1 0 0 39 75 0 2 2 33 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 3 3 34 75 0 1 1 0 95 0 0 0 39 75 0 2 2 33 2 76 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 19 35 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 576;
}
);
note = uni0475;
unicode = 1141;
},
{
glyphname = uni0476;
layers = (
{
layerId = m01;
width = 748;
}
);
note = uni0476;
unicode = 1142;
},
{
glyphname = uni0477;
layers = (
{
layerId = m01;
width = 576;
}
);
note = uni0477;
unicode = 1143;
},
{
glyphname = uni048A;
kernLeft = B;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,751,o),
(572,819,o),
(573,880,q),
(518,880,l),
(517,840,o),
(458,794,o),
(410,794,qs),
(361,794,o),
(303,840,o),
(302,880,q),
(247,880,l),
(248,819,o),
(335,751,o),
(410,751,qs)
);
},
{
closed = 1;
nodes = (
(706,700,l),
(639,700,l),
(191,120,l),
(191,700,l),
(118,700,l),
(118,0,l),
(185,0,l),
(633,579,l),
(633,0,l),
(720,0,l),
(679,-157,l),
(738,-157,l),
(805,64,l),
(706,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
24 19 2 9 7 1 74 2 1 0 1 0 131 0 4 5 4 132 0 1 10 1 3 7 1 3 103 8 1 7 7 32 75 11 1 9 9 5 93 6 1 5 5 33 5 76 14 14 0 0 14 27 14 27 26 25 23 22 21 20 18 17 16 15 0 13 0 12 18 34 18 12 7 23 
CALL[ ]	/* CallFunction */";
};
width = 848;
}
);
note = uni048A;
unicode = 1162;
},
{
glyphname = uni048B;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(404,603,o),
(490,673,o),
(492,732,q),
(442,732,l),
(441,693,o),
(383,647,o),
(340,647,qs),
(297,647,o),
(239,693,o),
(238,732,q),
(188,732,l),
(190,673,o),
(276,603,o),
(340,603,qs)
);
},
{
closed = 1;
nodes = (
(586,526,l),
(523,526,l),
(172,108,l),
(172,526,l),
(101,526,l),
(101,0,l),
(165,0,l),
(515,418,l),
(515,0,l),
(591,0,l),
(559,-115,l),
(617,-115,l),
(672,62,l),
(586,62,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
24 19 2 9 7 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 1 0 131 0 4 5 5 4 111 0 1 10 1 3 7 1 3 103 8 1 7 7 34 75 11 1 9 9 5 94 6 1 5 5 33 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 0 131 0 4 5 4 132 0 1 10 1 3 7 1 3 103 8 1 7 7 34 75 11 1 9 9 5 94 6 1 5 5 33 5 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
14 14 0 0 14 27 14 27 26 25 23 22 21 20 18 17 16 15 0 13 0 12 18 34 18 12 7 23 
CALL[ ]	/* CallFunction */";
};
width = 708;
}
);
note = uni048B;
unicode = 1163;
},
{
glyphname = uni048C;
kernLeft = B;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(216,447,l),
(216,563,l),
(439,563,l),
(439,619,l),
(216,619,l),
(216,742,l),
(143,742,l),
(143,619,l),
(33,619,l),
(33,563,l),
(143,563,l),
(143,0,l),
(422,0,ls),
(552,0,o),
(691,118,o),
(691,228,qs),
(691,335,o),
(562,447,o),
(438,447,qs)
);
},
{
closed = 1;
nodes = (
(216,59,l),
(216,388,l),
(422,388,ls),
(617,388,o),
(617,226,qs),
(617,143,o),
(519,59,o),
(422,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 3 2 3 131 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 101 10 1 8 8 0 93 0 0 0 33 0 76 19 19 0 0 19 26 19 25 24 22 0 18 0 17 17 17 17 17 17 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 735;
}
);
note = uni048C;
unicode = 1164;
},
{
glyphname = uni048D;
kernLeft = uni048D;
kernRight = uni0463;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,333,l),
(203,405,l),
(400,405,l),
(400,458,l),
(203,458,l),
(203,526,l),
(132,526,l),
(132,458,l),
(23,458,l),
(23,405,l),
(132,405,l),
(132,0,l),
(344,-1,ls),
(448,-3,o),
(560,85,o),
(560,169,qs),
(560,329,o),
(358,332,qs)
);
},
{
closed = 1;
nodes = (
(203,55,l),
(203,280,l),
(340,279,ls),
(416,277,o),
(488,227,o),
(488,170,qs),
(488,111,o),
(413,52,o),
(340,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 101 0 3 3 34 75 10 1 8 8 0 94 0 0 0 33 0 76 18 18 0 0 18 26 18 25 24 22 0 17 0 16 17 17 17 17 17 35 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 593;
}
);
note = uni048D;
unicode = 1165;
},
{
glyphname = uni048E;
kernLeft = B;
kernRight = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,572,o),
(514,700,o),
(380,700,qs),
(118,700,l),
(118,0,l),
(192,0,l),
(192,216,l),
(380,216,ls),
(451,216,o),
(505,234,q),
(612,94,l),
(654,128,l),
(556,256,l),
(609,286,o),
(666,389,o),
(666,458,qs)
);
},
{
closed = 1;
nodes = (
(192,280,l),
(192,636,l),
(378,636,ls),
(482,636,o),
(592,544,o),
(592,458,qs),
(592,356,o),
(514,310,q),
(390,472,l),
(349,438,l),
(462,290,l),
(428,280,o),
(378,280,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
20 19 18 17 4 4 3 5 2 2 0 4 4 3 2 1 0 3 74 5 1 4 0 0 1 4 0 101 0 3 3 2 93 0 2 2 32 75 0 1 1 33 1 76 16 16 16 28 16 27 43 33 17 38 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 732;
}
);
note = uni048E;
unicode = 1166;
},
{
glyphname = uni048F;
kernLeft = i;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(636,340,o),
(569,462,o),
(453,530,o),
(381,530,qs),
(308,530,o),
(199,462,o),
(170,399,q),
(170,526,l),
(102,526,l),
(102,-194,l),
(173,-194,l),
(173,120,l),
(202,60,o),
(310,-5,o),
(381,-5,qs),
(450,-5,o),
(510,28,q),
(581,-62,l),
(622,-30,l),
(552,59,l),
(592,95,o),
(636,199,o),
(636,262,qs)
);
},
{
closed = 1;
nodes = (
(313,57,o),
(223,108,o),
(172,202,o),
(172,262,qs),
(172,322,o),
(223,416,o),
(313,468,o),
(369,468,qs),
(425,468,o),
(515,416,o),
(566,322,o),
(566,262,qs),
(566,171,o),
(510,113,q),
(432,212,l),
(390,179,l),
(467,81,l),
(422,57,o),
(369,57,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
27 26 25 24 15 10 2 7 5 4 5 1 0 5 4 3 2 1 0 3 74 0 4 4 2 95 3 1 2 2 34 75 6 1 5 5 0 95 0 0 0 40 75 0 1 1 36 1 76 23 23 23 41 23 40 45 35 17 19 38 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 697;
}
);
note = uni048F;
unicode = 1167;
},
{
glyphname = uni0490;
kernLeft = B;
kernRight = uni0403;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,0,l),
(191,636,l),
(563,636,l),
(563,844,l),
(494,844,l),
(494,700,l),
(118,700,l),
(118,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 1 0 1 131 0 2 2 0 93 0 0 0 32 75 0 3 3 33 3 76 17 17 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uni0490;
unicode = 1168;
},
{
glyphname = uni0491;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,0,l),
(172,463,l),
(446,463,l),
(446,634,l),
(380,634,l),
(380,526,l),
(101,526,l),
(101,0,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 1 0 0 1 110 0 2 2 0 93 0 0 0 34 75 0 3 3 33 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 1 0 1 131 0 2 2 0 93 0 0 0 34 75 0 3 3 33 3 76 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 7 values pushed */
17 17 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 449;
}
);
note = uni0491;
unicode = 1169;
},
{
glyphname = uni0492;
kernLeft = uni0492;
kernRight = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(587,700,l),
(142,700,l),
(142,353,l),
(35,353,l),
(35,297,l),
(142,297,l),
(142,0,l),
(215,0,l),
(215,297,l),
(516,297,l),
(516,353,l),
(214,353,l),
(214,636,l),
(587,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
4 1 0 3 1 1 2 0 1 101 7 1 6 6 5 93 0 5 5 32 75 0 2 2 33 2 76 0 0 0 13 0 13 17 17 17 17 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 608;
}
);
note = uni0492;
unicode = 1170;
},
{
glyphname = uni0493;
kernLeft = uni0493;
kernRight = uni0433;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(488,526,l),
(116,526,l),
(116,259,l),
(46,259,l),
(46,207,l),
(116,207,l),
(116,0,l),
(187,0,l),
(187,207,l),
(417,207,l),
(417,259,l),
(187,259,l),
(187,463,l),
(488,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
4 1 0 3 1 1 2 0 1 101 7 1 6 6 5 93 0 5 5 34 75 0 2 2 33 2 76 0 0 0 13 0 13 17 17 17 17 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 502;
}
);
note = uni0493;
unicode = 1171;
},
{
glyphname = uni0494;
kernLeft = B;
kernRight = uni0462;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(191,636,l),
(583,636,l),
(583,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,275,l),
(237,306,o),
(331,337,o),
(376,337,qs),
(433,337,o),
(523,289,o),
(576,199,o),
(576,137,qs),
(576,75,o),
(526,-22,o),
(437,-76,o),
(382,-76,qs),
(361,-76,o),
(334,-71,q),
(321,-133,l),
(360,-140,o),
(385,-140,qs),
(460,-140,o),
(580,-69,o),
(648,60,o),
(648,142,qs),
(648,221,o),
(581,336,o),
(464,398,o),
(391,398,qs),
(290,398,o),
(191,341,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
32 1 3 0 25 1 4 3 12 1 2 4 11 1 1 2 4 74 0 0 0 3 4 0 3 103 0 2 0 1 2 1 99 0 6 6 5 93 0 5 5 32 75 0 4 4 33 4 76 17 17 19 38 35 38 32 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 701;
}
);
note = uni0494;
unicode = 1172;
},
{
glyphname = uni0495;
kernLeft = i;
kernRight = uni0463;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(172,463,l),
(460,463,l),
(460,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,174,l),
(246,221,o),
(322,221,qs),
(395,221,o),
(492,132,o),
(492,46,qs),
(492,-37,o),
(395,-135,o),
(313,-135,qs),
(291,-135,o),
(261,-130,q),
(245,-192,l),
(280,-199,o),
(316,-199,qs),
(390,-199,o),
(502,-137,o),
(564,-25,o),
(564,49,qs),
(564,122,o),
(504,227,o),
(400,281,o),
(336,281,qs),
(254,281,o),
(172,238,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
29 1 3 0 22 1 4 3 12 1 2 4 11 1 1 2 4 74 0 0 0 3 4 0 3 103 0 6 6 5 93 0 5 5 34 75 0 4 4 33 75 0 2 2 1 95 0 1 1 41 1 76 17 17 18 36 35 38 32 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 592;
}
);
note = uni0495;
unicode = 1173;
},
{
glyphname = uni0496;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0416;
},
{
pos = (839,0);
ref = descendercy.case.short;
}
);
width = 1052;
}
);
note = uni0496;
unicode = 1174;
},
{
glyphname = uni0497;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0436;
},
{
pos = (658,0);
ref = descendercy.short;
}
);
width = 862;
}
);
note = uni0497;
unicode = 1175;
},
{
glyphname = uni0498;
kernLeft = uni01B7;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0417;
},
{
pos = (162,0);
ref = verticalbarcy.case;
}
);
width = 636;
}
);
note = uni0498;
unicode = 1176;
},
{
glyphname = uni0499;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(474,197,o),
(413,261,o),
(357,274,q),
(404,289,o),
(459,351,o),
(459,391,qs),
(459,433,o),
(404,497,o),
(307,532,o),
(247,532,qs),
(146,532,o),
(52,483,q),
(72,428,l),
(155,471,o),
(240,471,qs),
(305,471,o),
(386,423,o),
(386,381,qs),
(386,343,o),
(314,298,o),
(255,298,qs),
(169,298,l),
(169,246,l),
(259,246,ls),
(325,246,o),
(401,199,o),
(401,157,qs),
(401,110,o),
(308,55,o),
(235,55,qs),
(186,55,o),
(90,85,o),
(54,112,q),
(30,59,l),
(66,31,o),
(161,-2,o),
(212,-5,q),
(212,-115,l),
(279,-115,l),
(279,-4,l),
(364,4,o),
(474,88,o),
(474,151,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
30 1 5 6 29 1 4 5 39 1 3 4 9 8 2 2 3 4 74 2 1 1 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 0 1 1 0 111 0 4 0 3 2 4 3 101 0 5 5 6 95 0 6 6 39 75 0 2 2 1 95 0 1 1 38 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 0 132 0 4 0 3 2 4 3 101 0 5 5 6 95 0 6 6 39 75 0 2 2 1 95 0 1 1 38 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 1 0 132 0 4 0 3 2 4 3 101 0 5 5 6 95 0 6 6 39 75 0 2 2 1 95 0 1 1 40 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
35 36 33 36 37 17 19 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = uni0499;
unicode = 1177;
},
{
glyphname = uni049A;
kernLeft = B;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni041A;
},
{
pos = (535,0);
ref = descendercy.case.short;
}
);
width = 748;
}
);
note = uni049A;
unicode = 1178;
},
{
glyphname = uni049B;
kernLeft = i;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043A;
},
{
pos = (420,0);
ref = descendercy.short;
}
);
width = 581;
}
);
note = uni049B;
unicode = 1179;
},
{
glyphname = uni049C;
kernLeft = B;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(705,0,l),
(450,359,l),
(686,700,l),
(606,700,l),
(392,386,l),
(333,386,l),
(333,538,l),
(276,538,l),
(276,386,l),
(190,386,l),
(190,700,l),
(118,700,l),
(118,0,l),
(190,0,l),
(190,321,l),
(276,321,l),
(276,171,l),
(333,171,l),
(333,321,l),
(392,321,l),
(619,0,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
18 1 0 5 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 5 2 1 0 1 5 0 101 8 1 4 4 32 75 0 1 1 6 93 0 6 6 34 75 9 1 3 3 33 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 5 2 1 0 1 5 0 101 0 6 0 1 3 6 1 101 8 1 4 4 32 75 9 1 3 3 33 3 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
20 19 17 17 17 17 17 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 728;
}
);
note = uni049C;
unicode = 1180;
},
{
glyphname = uni049D;
kernLeft = i;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(582,0,l),
(383,271,l),
(566,526,l),
(490,526,l),
(328,295,l),
(287,295,l),
(287,403,l),
(234,403,l),
(234,295,l),
(170,295,l),
(170,526,l),
(99,526,l),
(99,0,l),
(170,0,l),
(170,234,l),
(234,234,l),
(234,128,l),
(287,128,l),
(287,234,l),
(328,234,l),
(498,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
18 1 0 5 1 74 7 1 5 2 1 0 1 5 0 101 0 6 0 1 3 6 1 101 8 1 4 4 34 75 9 1 3 3 33 3 76 20 19 17 17 17 17 17 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uni049D;
unicode = 1181;
},
{
glyphname = uni049E;
kernLeft = B;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(704,0,l),
(429,360,l),
(689,700,l),
(609,700,l),
(372,386,l),
(212,386,l),
(212,552,l),
(395,552,l),
(395,606,l),
(212,606,l),
(212,700,l),
(140,700,l),
(140,606,l),
(37,606,l),
(37,552,l),
(140,552,l),
(140,0,l),
(212,0,l),
(212,321,l),
(372,321,l),
(619,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
18 1 0 7 1 74 5 1 3 6 1 2 7 3 2 101 0 7 0 0 1 7 0 101 8 1 4 4 32 75 9 1 1 1 33 1 76 20 19 17 17 17 17 17 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 724;
}
);
note = uni049E;
unicode = 1182;
},
{
glyphname = uni049F;
kernLeft = b;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,0,l),
(348,271,l),
(556,526,l),
(478,526,l),
(293,295,l),
(173,295,l),
(173,607,l),
(331,607,l),
(331,659,l),
(173,659,l),
(173,742,l),
(102,742,l),
(102,660,l),
(1,660,l),
(1,607,l),
(102,607,l),
(102,0,l),
(173,0,l),
(173,234,l),
(292,234,l),
(486,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
18 1 0 7 1 74 0 4 3 4 131 5 1 3 6 1 2 8 3 2 101 0 7 0 0 1 7 0 101 0 8 8 34 75 9 1 1 1 33 1 76 20 19 17 17 17 17 17 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uni049F;
unicode = 1183;
},
{
glyphname = uni04A0;
kernLeft = T;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(793,0,l),
(518,360,l),
(778,700,l),
(698,700,l),
(462,386,l),
(302,386,l),
(302,700,l),
(11,700,l),
(11,636,l),
(230,636,l),
(230,0,l),
(302,0,l),
(302,321,l),
(461,321,l),
(709,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
12 1 0 4 1 74 0 4 0 0 1 4 0 101 0 2 2 3 93 5 1 3 3 32 75 6 1 1 1 33 1 76 18 17 17 17 17 17 16 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 813;
}
);
note = uni04A0;
unicode = 1184;
},
{
glyphname = uni04A1;
kernLeft = uni0442;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(635,0,l),
(413,271,l),
(620,526,l),
(543,526,l),
(358,295,l),
(237,295,l),
(237,526,l),
(2,526,l),
(2,464,l),
(166,464,l),
(166,0,l),
(237,0,l),
(237,234,l),
(357,234,l),
(551,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
12 1 0 4 1 74 0 4 0 0 1 4 0 101 0 2 2 3 93 5 1 3 3 34 75 6 1 1 1 33 1 76 18 17 17 17 17 17 16 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 646;
}
);
note = uni04A1;
unicode = 1185;
},
{
glyphname = uni04A2;
kernLeft = B;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = H;
},
{
pos = (586,0);
ref = descendercy.case;
}
);
width = 845;
}
);
note = uni04A2;
unicode = 1186;
},
{
glyphname = uni04A3;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043D;
},
{
pos = (443,0);
ref = descendercy;
}
);
width = 694;
}
);
note = uni04A3;
unicode = 1187;
},
{
glyphname = uni04A4;
kernLeft = B;
kernRight = uni0403;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = H;
},
{
pos = (514,0);
ref = uni0413;
}
);
width = 1088;
}
);
note = uni04A4;
unicode = 1188;
},
{
glyphname = uni04A5;
kernLeft = i;
kernRight = uni0433;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043D;
},
{
pos = (402,0);
ref = uni0433;
}
);
width = 877;
}
);
note = uni04A5;
unicode = 1189;
},
{
glyphname = uni04A6;
kernLeft = B;
kernRight = uni04A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(707,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,636,l),
(634,636,l),
(634,0,l),
(707,0,l),
(707,277,l),
(798,337,o),
(890,337,qs),
(946,337,o),
(1036,289,o),
(1088,199,o),
(1088,137,qs),
(1088,75,o),
(1038,-23,o),
(950,-77,o),
(895,-77,qs),
(872,-77,o),
(846,-71,q),
(833,-133,l),
(865,-140,o),
(899,-140,qs),
(972,-140,o),
(1092,-68,o),
(1161,61,o),
(1161,142,qs),
(1161,220,o),
(1093,337,o),
(976,399,o),
(903,399,qs),
(807,399,o),
(707,344,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
33 1 3 0 24 1 4 3 12 1 2 4 11 1 1 2 4 74 0 0 0 3 4 0 3 103 0 2 0 1 2 1 99 0 5 5 7 93 0 7 7 32 75 6 1 4 4 33 4 76 17 17 17 18 38 35 38 32 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1204;
}
);
note = uni04A6;
unicode = 1190;
},
{
glyphname = uni04A7;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(557,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,463,l),
(486,463,l),
(486,0,l),
(557,0,l),
(557,177,l),
(627,221,o),
(703,221,qs),
(776,221,o),
(873,132,o),
(873,46,qs),
(873,-37,o),
(776,-135,o),
(694,-135,qs),
(671,-135,o),
(641,-130,q),
(626,-192,l),
(661,-199,o),
(697,-199,qs),
(771,-199,o),
(884,-137,o),
(946,-25,o),
(946,49,qs),
(946,122,o),
(885,227,o),
(781,281,o),
(717,281,qs),
(639,281,o),
(557,240,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
31 1 3 0 22 1 4 3 12 1 2 4 11 1 1 2 4 74 0 0 0 3 4 0 3 103 0 5 5 7 93 0 7 7 34 75 6 1 4 4 33 75 0 2 2 1 95 0 1 1 41 1 76 17 17 17 18 36 35 38 32 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 969;
}
);
note = uni04A7;
unicode = 1191;
},
{
glyphname = uni04A8;
kernLeft = at;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(888,61,l),
(830,44,o),
(768,44,qs),
(720,44,o),
(680,54,q),
(775,110,o),
(887,299,o),
(887,413,qs),
(887,501,o),
(820,637,o),
(700,713,o),
(622,713,qs),
(542,713,o),
(419,634,o),
(350,490,o),
(350,398,qs),
(350,288,o),
(447,108,o),
(531,54,q),
(497,48,o),
(459,48,qs),
(364,48,o),
(218,127,o),
(137,271,o),
(137,364,qs),
(137,461,o),
(224,625,o),
(302,674,q),
(247,710,l),
(160,656,o),
(63,475,o),
(63,366,qs),
(63,257,o),
(160,87,o),
(334,-8,o),
(446,-8,qs),
(529,-8,o),
(602,18,q),
(680,-13,o),
(766,-13,qs),
(830,-13,o),
(897,5,q)
);
},
{
closed = 1;
nodes = (
(424,472,o),
(473,585,o),
(562,646,o),
(621,646,qs),
(678,646,o),
(765,586,o),
(813,477,o),
(813,405,qs),
(813,292,o),
(704,119,o),
(611,79,q),
(525,120,o),
(424,288,o),
(424,398,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 12 2 5 3 44 40 36 22 4 2 5 41 3 2 0 2 3 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 12 2 5 3 44 40 36 22 4 2 5 41 3 2 1 2 3 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 5 5 3 95 0 3 3 37 75 4 1 2 2 0 95 1 1 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 3 95 0 3 3 37 75 4 1 2 2 1 95 0 1 1 38 75 4 1 2 2 0 95 0 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
43 39 39 45 34 32 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 972;
}
);
note = uni04A8;
unicode = 1192;
},
{
glyphname = uni04A9;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,55,l),
(673,43,o),
(626,43,qs),
(591,43,o),
(567,48,q),
(639,91,o),
(721,230,o),
(721,312,qs),
(721,378,o),
(667,479,o),
(570,535,o),
(507,535,qs),
(442,535,o),
(341,476,o),
(286,369,o),
(286,299,qs),
(286,221,o),
(356,92,o),
(417,50,q),
(396,47,o),
(373,47,qs),
(299,47,o),
(185,104,o),
(123,208,o),
(123,275,qs),
(123,345,o),
(189,462,o),
(250,501,q),
(196,534,l),
(128,494,o),
(52,358,o),
(52,277,qs),
(52,193,o),
(130,64,o),
(271,-7,o),
(363,-7,qs),
(426,-7,o),
(488,12,q),
(550,-12,o),
(621,-12,qs),
(671,-12,o),
(727,2,q)
);
},
{
closed = 1;
nodes = (
(356,379,o),
(439,475,o),
(506,475,qs),
(570,475,o),
(651,382,o),
(651,308,qs),
(651,226,o),
(568,101,o),
(497,71,q),
(432,102,o),
(356,222,o),
(356,300,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
13 12 2 5 3 44 40 36 22 4 2 5 41 3 2 0 2 3 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 19 values pushed */
13 12 2 5 3 44 40 36 22 4 2 5 41 3 2 1 2 3 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 5 5 3 95 0 3 3 39 75 4 1 2 2 0 95 1 1 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 5 5 3 95 0 3 3 39 75 4 1 2 2 1 95 0 1 1 38 75 4 1 2 2 0 95 0 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
42 39 39 45 34 32 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 794;
}
);
note = uni04A9;
unicode = 1193;
},
{
glyphname = uni04AA;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (6,0);
ref = C;
},
{
pos = (271,0);
ref = verticalbarcy.case;
}
);
width = 716;
}
);
note = uni04AA;
unicode = 1194;
},
{
glyphname = uni04AB;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = c;
},
{
pos = (178,0);
ref = verticalbarcy;
}
);
width = 563;
}
);
note = uni04AB;
unicode = 1195;
},
{
glyphname = uni04AC;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0422;
},
{
pos = (211,0);
ref = descendercy.case;
}
);
width = 588;
}
);
note = uni04AC;
unicode = 1196;
},
{
glyphname = uni04AD;
kernLeft = uni0442;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0442;
},
{
pos = (141,0);
ref = descendercy;
}
);
width = 473;
}
);
note = uni04AD;
unicode = 1197;
},
{
glyphname = uni04AE;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
pos = (8,0);
ref = Y;
}
);
width = 652;
}
);
note = uni04AE;
unicode = 1198;
},
{
glyphname = uni04AF;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,526,l),
(281,78,l),
(85,526,l),
(10,526,l),
(244,-3,l),
(244,-194,l),
(315,-194,l),
(315,-3,l),
(550,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 0 1 1 74 2 1 1 1 34 75 0 0 0 36 0 76 18 18 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 559;
}
);
note = uni04AF;
unicode = 1199;
},
{
glyphname = uni04B0;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (763,-245);
ref = uni0335;
scale = (1.1527,1.0786);
}
);
width = 635;
}
);
note = uni04B0;
unicode = 1200;
},
{
glyphname = uni04B1;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04AF;
},
{
pos = (632,-434);
ref = uni0335;
scale = (1.0583,1);
}
);
width = 559;
}
);
note = uni04B1;
unicode = 1201;
},
{
glyphname = uni04B2;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0425;
},
{
pos = (479,0);
ref = descendercy.case.short;
}
);
width = 690;
}
);
note = uni04B2;
unicode = 1202;
},
{
glyphname = uni04B3;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-4,0);
ref = x;
},
{
pos = (363,0);
ref = descendercy.short;
}
);
width = 526;
}
);
note = uni04B3;
unicode = 1203;
},
{
glyphname = uni04B4;
kernLeft = T;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(827,699,l),
(754,699,l),
(754,63,l),
(331,63,l),
(331,636,l),
(555,636,l),
(555,700,l),
(12,700,l),
(12,636,l),
(258,636,l),
(258,-1,l),
(869,-1,l),
(869,-165,l),
(938,-165,l),
(938,63,l),
(827,63,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
0 0 1 0 132 4 1 2 2 3 93 6 1 3 3 32 75 8 7 2 5 5 1 93 0 1 1 33 1 76 0 0 0 15 0 15 17 17 17 17 17 17 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 967;
}
);
note = uni04B4;
unicode = 1204;
},
{
glyphname = uni04B5;
kernLeft = uni0442;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(639,526,l),
(568,526,l),
(568,62,l),
(272,62,l),
(272,463,l),
(442,463,l),
(442,526,l),
(2,526,l),
(2,463,l),
(201,463,l),
(201,0,l),
(650,0,l),
(650,-115,l),
(717,-115,l),
(717,62,l),
(639,62,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 0 1 1 0 111 4 1 2 2 3 93 6 1 3 3 34 75 8 7 2 5 5 1 94 0 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 0 132 4 1 2 2 3 93 6 1 3 3 34 75 8 7 2 5 5 1 94 0 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 15 0 15 17 17 17 17 17 17 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 757;
}
);
note = uni04B5;
unicode = 1205;
},
{
glyphname = uni04B6;
kernLeft = uni0427;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0427;
},
{
pos = (494,0);
ref = descendercy.case;
}
);
width = 755;
}
);
note = uni04B6;
unicode = 1206;
},
{
glyphname = uni04B7;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0447;
},
{
pos = (367,0);
ref = descendercy;
}
);
width = 620;
}
);
note = uni04B7;
unicode = 1207;
},
{
glyphname = uni04B8;
kernLeft = uni0427;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(539,356,l),
(451,315,o),
(358,307,q),
(358,458,l),
(302,458,l),
(302,307,l),
(221,312,o),
(131,401,o),
(131,477,qs),
(131,700,l),
(58,700,l),
(58,469,ls),
(58,365,o),
(186,246,o),
(302,241,q),
(302,92,l),
(358,92,l),
(358,243,l),
(450,251,o),
(539,290,q),
(539,0,l),
(611,0,l),
(611,700,l),
(539,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
22 1 4 5 20 3 2 2 4 2 74 5 1 2 1 73 0 4 0 2 1 4 2 103 0 5 0 1 0 5 1 101 7 6 2 3 3 32 75 0 0 0 33 0 76 0 0 0 23 0 23 17 19 19 17 20 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = uni04B8;
unicode = 1208;
},
{
glyphname = uni04B9;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(426,276,l),
(355,246,o),
(297,239,q),
(297,352,l),
(245,352,l),
(245,237,l),
(184,241,o),
(117,302,o),
(117,357,qs),
(117,526,l),
(46,526,l),
(46,353,ls),
(46,267,o),
(151,180,o),
(245,179,q),
(245,74,l),
(297,74,l),
(297,182,l),
(363,191,o),
(426,219,q),
(426,0,l),
(497,0,l),
(497,526,l),
(426,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
22 1 4 5 5 3 2 2 4 2 74 20 1 4 1 73 0 4 0 2 1 4 2 103 0 5 0 1 0 5 1 101 7 6 2 3 3 34 75 0 0 0 33 0 76 0 0 0 23 0 23 17 19 19 17 20 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 599;
}
);
note = uni04B9;
unicode = 1209;
},
{
glyphname = uni04BA;
kernLeft = B;
kernRight = uni04A6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(305,459,o),
(191,410,q),
(191,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,344,l),
(300,394,o),
(404,394,qs),
(496,394,o),
(599,305,o),
(599,223,qs),
(599,0,l),
(672,0,l),
(672,231,ls),
(672,340,o),
(535,459,o),
(411,459,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
15 1 1 4 10 1 0 1 2 74 5 1 4 0 1 0 4 1 103 0 3 3 32 75 2 1 0 0 33 0 76 0 0 0 17 0 16 17 18 35 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 731;
}
);
note = uni04BA;
unicode = 1210;
},
{
glyphname = uni04BB;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = h;
}
);
width = 670;
}
);
note = uni04BB;
unicode = 1211;
},
{
glyphname = uni04BC;
kernLeft = uni04BC;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(931,455,o),
(836,617,o),
(675,706,o),
(578,706,qs),
(485,706,o),
(327,623,o),
(229,473,o),
(223,375,q),
(205,375,ls),
(157,375,o),
(104,428,o),
(104,469,qs),
(104,513,o),
(132,554,q),
(64,569,l),
(34,515,o),
(34,461,qs),
(34,397,o),
(119,312,o),
(196,312,qs),
(224,312,l),
(232,216,o),
(334,71,o),
(492,-6,o),
(582,-6,qs),
(655,-6,o),
(799,46,o),
(860,99,q),
(806,147,l),
(755,104,o),
(641,60,o),
(583,60,qs),
(512,60,o),
(387,122,o),
(306,237,o),
(298,312,q),
(928,312,l),
(931,348,o),
(931,352,qs)
);
},
{
closed = 1;
nodes = (
(652,641,o),
(774,574,o),
(850,453,o),
(855,375,q),
(297,375,l),
(303,453,o),
(380,574,o),
(504,641,o),
(578,641,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
24 23 2 4 7 38 1 0 4 10 9 2 1 0 3 74 6 1 4 3 1 0 1 4 0 103 8 1 7 7 5 95 0 5 5 37 75 0 1 1 2 95 0 2 2 38 2 76 39 39 39 47 39 46 23 35 41 35 37 35 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 974;
}
);
note = uni04BC;
unicode = 1212;
},
{
glyphname = uni04BD;
kernLeft = uni04BD;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(707,341,o),
(639,462,o),
(518,530,o),
(443,530,qs),
(372,530,o),
(257,470,o),
(185,363,o),
(179,294,q),
(165,294,ls),
(127,294,o),
(86,328,o),
(86,356,qs),
(86,385,o),
(107,416,q),
(47,431,l),
(23,386,o),
(23,347,qs),
(23,299,o),
(93,241,o),
(157,241,qs),
(178,241,l),
(183,170,o),
(258,58,o),
(383,-5,o),
(462,-5,qs),
(528,-5,o),
(636,39,o),
(672,81,q),
(631,127,l),
(601,93,o),
(515,58,o),
(464,58,qs),
(375,58,o),
(256,159,o),
(249,241,q),
(705,241,l),
(707,257,o),
(707,263,qs)
);
},
{
closed = 1;
nodes = (
(522,469,o),
(630,371,o),
(636,294,q),
(249,294,l),
(257,372,o),
(364,469,o),
(443,469,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
23 22 2 4 7 37 1 0 4 9 8 2 1 0 3 74 6 1 4 3 1 0 1 4 0 103 8 1 7 7 5 95 0 5 5 39 75 0 1 1 2 95 0 2 2 40 2 76 38 38 38 44 38 43 22 35 41 35 37 34 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 752;
}
);
note = uni04BD;
unicode = 1213;
},
{
glyphname = uni04BE;
kernLeft = uni04BC;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04BC;
},
{
pos = (444,0);
ref = verticalbarcy.case;
}
);
width = 974;
}
);
note = uni04BE;
unicode = 1214;
},
{
glyphname = uni04BF;
kernLeft = uni04BD;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04BD;
},
{
pos = (312,0);
ref = verticalbarcy;
}
);
width = 752;
}
);
note = uni04BF;
unicode = 1215;
},
{
glyphname = uni04C0;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = I;
}
);
width = 310;
}
);
note = uni04C0;
unicode = 1216;
},
{
glyphname = uni04C1;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0416;
},
{
pos = (740,0);
ref = brevecombcy.case;
}
);
width = 1011;
}
);
note = uni04C1;
unicode = 1217;
},
{
glyphname = uni04C2;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0436;
},
{
pos = (635,1);
ref = brevecombcy;
}
);
width = 826;
}
);
note = uni04C2;
unicode = 1218;
},
{
glyphname = uni04C3;
kernLeft = B;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,700,l),
(586,700,l),
(351,386,l),
(190,386,l),
(190,700,l),
(118,700,l),
(118,0,l),
(190,0,l),
(190,321,l),
(349,321,l),
(457,227,o),
(594,27,o),
(594,-42,qs),
(594,-87,o),
(547,-136,o),
(507,-136,qs),
(472,-136,o),
(430,-114,q),
(409,-171,l),
(464,-200,o),
(521,-200,qs),
(590,-200,o),
(673,-116,o),
(673,-44,qs),
(673,36,o),
(532,246,o),
(408,359,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
26 1 2 5 8 1 1 3 7 1 0 1 3 74 0 5 0 2 3 5 2 101 6 1 4 4 32 75 0 3 3 33 75 0 1 1 0 95 0 0 0 41 0 76 17 17 17 17 21 35 36 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = uni04C3;
unicode = 1219;
},
{
glyphname = uni04C4;
kernLeft = i;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,526,l),
(478,526,l),
(293,295,l),
(172,295,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,234,l),
(304,234,l),
(384,169,o),
(483,14,o),
(483,-47,qs),
(483,-89,o),
(434,-139,o),
(393,-139,qs),
(357,-139,o),
(314,-116,q),
(293,-170,l),
(349,-199,o),
(403,-199,qs),
(471,-199,o),
(554,-117,o),
(554,-50,qs),
(554,25,o),
(446,200,o),
(353,277,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
26 1 2 5 8 1 1 3 7 1 0 1 3 74 0 5 0 2 3 5 2 101 6 1 4 4 34 75 0 3 3 33 75 0 1 1 0 95 0 0 0 41 0 76 17 17 17 17 21 35 36 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uni04C4;
unicode = 1220;
},
{
glyphname = uni04C6;
kernLeft = uni0434;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(531,526,l),
(146,526,l),
(137,338,ls),
(132,246,o),
(118,134,o),
(76,58,o),
(35,58,qs),
(28,58,o),
(10,62,q),
(5,1,l),
(35,-7,o),
(56,-7,qs),
(133,-7,o),
(193,169,o),
(201,333,qs),
(208,463,l),
(460,463,l),
(460,0,l),
(536,0,l),
(504,-115,l),
(562,-115,l),
(617,62,l),
(531,62,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
13 1 4 2 12 1 1 4 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 1 1 0 111 0 2 2 5 93 0 5 5 34 75 7 6 2 4 4 1 95 3 1 1 1 33 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 0 1 0 132 0 2 2 5 93 0 5 5 34 75 7 6 2 4 4 1 95 3 1 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 0 3 0 132 0 2 2 5 93 0 5 5 34 75 7 6 2 4 4 1 93 0 1 1 33 75 7 6 2 4 4 3 95 0 3 3 38 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 22 0 22 20 35 35 17 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = uni04C6;
unicode = 1222;
},
{
glyphname = uni04C7;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,-200,o),
(545,-200,qs),
(609,-200,o),
(698,-123,o),
(698,-52,qs),
(698,700,l),
(625,700,l),
(625,384,l),
(191,384,l),
(191,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,319,l),
(625,319,l),
(625,-48,ls),
(625,-91,o),
(574,-138,o),
(536,-138,qs),
(494,-138,o),
(456,-111,q),
(432,-165,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
21 1 6 0 1 74 0 4 0 1 2 4 1 101 5 1 3 3 32 75 0 2 2 33 75 0 0 0 6 95 0 6 6 41 6 76 35 17 17 17 17 19 33 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 816;
}
);
note = uni04C7;
unicode = 1223;
},
{
glyphname = uni04C8;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,-199,o),
(581,-115,o),
(581,-43,qs),
(581,526,l),
(510,526,l),
(510,293,l),
(172,293,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,232,l),
(510,232,l),
(510,-39,ls),
(510,-87,o),
(464,-138,o),
(421,-138,qs),
(372,-138,o),
(342,-111,q),
(318,-165,l),
(337,-182,o),
(396,-199,o),
(430,-199,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
3 1 0 2 2 1 6 0 2 74 0 4 0 1 2 4 1 101 5 1 3 3 34 75 0 2 2 33 75 0 0 0 6 95 7 1 6 6 41 6 76 0 0 0 22 0 21 17 17 17 17 19 36 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 682;
}
);
note = uni04C8;
unicode = 1224;
},
{
glyphname = uni04C9;
kernLeft = B;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(703,700,l),
(630,700,l),
(630,388,l),
(192,388,l),
(192,700,l),
(118,700,l),
(118,0,l),
(192,0,l),
(192,323,l),
(630,323,l),
(630,0,l),
(719,0,l),
(678,-157,l),
(737,-157,l),
(804,64,l),
(703,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 1 0 132 0 5 0 2 7 5 2 101 6 1 4 4 32 75 8 1 7 7 1 93 3 1 1 1 33 1 76 0 0 0 15 0 15 17 17 17 17 17 17 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 845;
}
);
note = uni04C9;
unicode = 1225;
},
{
glyphname = uni04CA;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(574,526,l),
(503,526,l),
(503,293,l),
(172,293,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,232,l),
(503,232,l),
(503,0,l),
(579,0,l),
(547,-115,l),
(605,-115,l),
(660,62,l),
(574,62,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 1 0 111 0 5 0 2 7 5 2 101 6 1 4 4 34 75 8 1 7 7 1 94 3 1 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 0 1 0 132 0 5 0 2 7 5 2 101 6 1 4 4 34 75 8 1 7 7 1 94 3 1 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 15 0 15 17 17 17 17 17 17 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 695;
}
);
note = uni04CA;
unicode = 1226;
},
{
glyphname = uni04CB;
kernLeft = uni0427;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(537,369,l),
(425,319,o),
(324,319,qs),
(232,319,o),
(130,406,o),
(130,485,qs),
(130,700,l),
(58,700,l),
(58,477,ls),
(58,371,o),
(194,254,o),
(318,254,qs),
(422,254,o),
(537,303,q),
(537,64,l),
(417,64,l),
(417,-157,l),
(486,-157,l),
(486,0,l),
(610,0,l),
(610,700,l),
(537,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
20 1 5 4 7 1 3 5 2 74 0 1 0 1 132 0 5 0 3 2 5 3 103 7 6 2 4 4 32 75 0 2 2 0 93 0 0 0 33 0 76 0 0 0 21 0 21 35 19 34 17 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 728;
}
);
note = uni04CB;
unicode = 1227;
},
{
glyphname = uni04CC;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,287,l),
(339,249,o),
(259,249,qs),
(191,249,o),
(115,310,o),
(115,368,qs),
(115,526,l),
(44,526,l),
(44,364,ls),
(44,278,o),
(150,190,o),
(245,190,qs),
(335,190,o),
(425,231,q),
(425,59,l),
(333,59,l),
(333,-115,l),
(401,-115,l),
(401,0,l),
(496,0,l),
(496,526,l),
(425,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 5 4 7 1 3 5 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 0 1 111 0 5 0 3 2 5 3 103 7 6 2 4 4 34 75 0 2 2 0 94 0 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 1 132 0 5 0 3 2 5 3 103 7 6 2 4 4 34 75 0 2 2 0 94 0 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 21 0 21 35 19 34 17 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 597;
}
);
note = uni04CC;
unicode = 1228;
},
{
glyphname = uni04CD;
kernLeft = B;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(845,700,l),
(784,700,l),
(483,181,l),
(179,700,l),
(118,700,l),
(118,0,l),
(189,0,l),
(189,557,l),
(464,89,l),
(499,89,l),
(774,560,l),
(774,0,l),
(866,0,l),
(825,-157,l),
(884,-157,l),
(951,64,l),
(845,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
13 8 5 3 2 4 1 74 0 2 4 6 4 2 6 126 0 0 1 0 132 5 1 4 4 32 75 7 1 6 6 1 93 3 1 1 1 33 1 76 0 0 0 16 0 16 18 17 18 18 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 992;
}
);
note = uni04CD;
unicode = 1229;
},
{
glyphname = uni04CE;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(689,526,l),
(623,526,l),
(396,147,l),
(173,526,l),
(101,526,l),
(101,0,l),
(166,0,l),
(166,417,l),
(379,64,l),
(411,64,l),
(624,416,l),
(624,0,l),
(700,0,l),
(668,-115,l),
(726,-115,l),
(781,62,l),
(689,62,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
13 8 5 3 2 4 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 2 4 6 4 2 6 126 0 0 1 1 0 111 5 1 4 4 34 75 7 1 6 6 1 94 3 1 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 2 4 6 4 2 6 126 0 0 1 0 132 5 1 4 4 34 75 7 1 6 6 1 94 3 1 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 16 0 16 18 17 18 18 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 816;
}
);
note = uni04CE;
unicode = 1230;
},
{
glyphname = uni04CF;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = l;
}
);
width = 274;
}
);
note = uni04CF;
unicode = 1231;
},
{
glyphname = uni04D0;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (13,0);
ref = A;
},
{
pos = (605,0);
ref = brevecombcy.case;
}
);
width = 744;
}
);
note = uni04D0;
unicode = 1232;
},
{
glyphname = uni04D1;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-1,0);
ref = a;
},
{
pos = (506,1);
ref = brevecombcy;
}
);
width = 583;
}
);
note = uni04D1;
unicode = 1233;
},
{
glyphname = uni04D2;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (13,0);
ref = A;
},
{
pos = (672,0);
ref = uni0308.case;
}
);
width = 744;
}
);
note = uni04D2;
unicode = 1234;
},
{
glyphname = uni04D3;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-1,0);
ref = a;
},
{
pos = (584,1);
ref = uni0308;
}
);
width = 583;
}
);
note = uni04D3;
unicode = 1235;
},
{
glyphname = uni04D4;
kernLeft = A;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = AE;
}
);
width = 1026;
}
);
note = uni04D4;
unicode = 1236;
},
{
glyphname = uni04D5;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-1,0);
ref = ae;
}
);
width = 990;
}
);
note = uni04D5;
unicode = 1237;
},
{
glyphname = uni04D6;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = E;
},
{
pos = (592,0);
ref = brevecombcy.case;
}
);
width = 659;
}
);
note = uni04D6;
unicode = 1238;
},
{
glyphname = uni04D7;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = e;
},
{
pos = (529,1);
ref = brevecombcy;
}
);
width = 618;
}
);
note = uni04D7;
unicode = 1239;
},
{
glyphname = uni04D8;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(324,706,o),
(178,654,o),
(116,601,q),
(169,553,l),
(221,597,o),
(337,640,o),
(397,640,qs),
(471,640,o),
(599,577,o),
(682,461,o),
(690,384,q),
(46,384,l),
(43,366,o),
(43,348,qs),
(43,245,o),
(139,83,o),
(303,-6,o),
(402,-6,qs),
(501,-6,o),
(668,84,o),
(766,247,o),
(766,352,qs),
(766,459,o),
(665,620,o),
(497,706,o),
(399,706,qs)
);
},
{
closed = 1;
nodes = (
(326,59,o),
(200,127,o),
(122,250,o),
(118,329,q),
(691,329,l),
(686,251,o),
(607,128,o),
(478,59,o),
(402,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
22 21 2 1 2 1 74 0 1 0 4 5 1 4 101 0 2 2 3 95 6 1 3 3 37 75 7 1 5 5 0 95 0 0 0 38 0 76 26 26 0 0 26 34 26 33 30 29 0 25 0 24 35 21 38 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 824;
}
);
note = uni04D8;
unicode = 1240;
},
{
glyphname = uni04D9;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(228,531,o),
(123,487,o),
(88,445,q),
(128,399,l),
(158,433,o),
(240,468,o),
(289,468,qs),
(376,468,o),
(490,367,o),
(496,285,q),
(56,285,l),
(55,263,ls),
(55,185,o),
(121,64,o),
(237,-4,o),
(310,-4,qs),
(383,-4,o),
(500,64,o),
(567,186,o),
(567,263,qs),
(567,340,o),
(497,462,o),
(372,531,o),
(291,531,qs)
);
},
{
closed = 1;
nodes = (
(233,57,o),
(130,154,o),
(123,232,q),
(496,232,l),
(489,154,o),
(386,57,o),
(310,57,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
20 19 2 1 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 4 5 1 4 101 0 2 2 3 95 6 1 3 3 39 75 7 1 5 5 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 1 0 4 5 1 4 101 0 2 2 3 95 6 1 3 3 39 75 7 1 5 5 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
24 24 0 0 24 30 24 29 27 26 0 23 0 22 34 20 38 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 617;
}
);
note = uni04D9;
unicode = 1241;
},
{
glyphname = uni04DA;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04D8;
},
{
pos = (713,0);
ref = uni0308.case;
}
);
width = 824;
}
);
note = uni04DA;
unicode = 1242;
},
{
glyphname = uni04DB;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04D9;
},
{
pos = (610,1);
ref = uni0308;
}
);
width = 617;
}
);
note = uni04DB;
unicode = 1243;
},
{
glyphname = uni04DC;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0416;
},
{
pos = (807,0);
ref = uni0308.case;
}
);
width = 1011;
}
);
note = uni04DC;
unicode = 1244;
},
{
glyphname = uni04DD;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0436;
},
{
pos = (713,1);
ref = uni0308;
}
);
width = 826;
}
);
note = uni04DD;
unicode = 1245;
},
{
glyphname = uni04DE;
kernLeft = uni01B7;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0417;
},
{
pos = (616,0);
ref = uni0308.case;
}
);
width = 636;
}
);
note = uni04DE;
unicode = 1246;
},
{
glyphname = uni04DF;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0437;
},
{
pos = (556,1);
ref = uni0308;
}
);
width = 534;
}
);
note = uni04DF;
unicode = 1247;
},
{
glyphname = uni04E0;
kernLeft = uni01B7;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(529,649,l),
(529,700,l),
(58,700,l),
(58,637,l),
(442,637,l),
(232,393,l),
(232,341,l),
(284,341,ls),
(385,341,o),
(486,267,o),
(486,201,qs),
(486,134,o),
(385,59,o),
(293,59,qs),
(221,59,o),
(97,104,o),
(61,140,q),
(32,82,l),
(71,42,o),
(213,-6,o),
(295,-6,qs),
(381,-6,o),
(500,47,o),
(560,141,o),
(560,201,qs),
(560,288,o),
(435,396,o),
(316,400,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 1 3 4 21 1 2 5 10 9 2 1 2 3 74 6 1 5 0 2 1 5 2 103 0 3 3 4 93 0 4 4 32 75 0 1 1 0 95 0 0 0 38 0 76 0 0 0 27 0 27 17 18 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 615;
}
);
note = uni04E0;
unicode = 1248;
},
{
glyphname = uni04E1;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(449,474,l),
(449,526,l),
(2,526,l),
(2,462,l),
(364,462,l),
(166,209,l),
(166,158,l),
(216,158,ls),
(311,158,o),
(405,81,o),
(405,12,qs),
(405,-56,o),
(311,-134,o),
(224,-134,qs),
(157,-134,o),
(41,-88,o),
(7,-50,q),
(-22,-108,l),
(16,-150,o),
(150,-200,o),
(226,-200,qs),
(307,-200,o),
(421,-145,o),
(478,-49,o),
(478,12,qs),
(478,102,o),
(361,212,o),
(249,217,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 1 3 4 21 1 2 5 10 9 2 1 2 3 74 6 1 5 0 2 1 5 2 103 0 3 3 4 93 0 4 4 34 75 0 1 1 0 95 0 0 0 41 0 76 0 0 0 27 0 27 17 18 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uni04E1;
unicode = 1249;
},
{
glyphname = uni04E2;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0418;
},
{
pos = (710,0);
ref = uni0304.case;
}
);
width = 824;
}
);
note = uni04E2;
unicode = 1250;
},
{
glyphname = uni04E3;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0438;
},
{
pos = (640,1);
ref = uni0304;
}
);
width = 688;
}
);
note = uni04E3;
unicode = 1251;
},
{
glyphname = uni04E4;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0418;
},
{
pos = (710,0);
ref = uni0308.case;
}
);
width = 824;
}
);
note = uni04E4;
unicode = 1252;
},
{
glyphname = uni04E5;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0438;
},
{
pos = (640,1);
ref = uni0308;
}
);
width = 688;
}
);
note = uni04E5;
unicode = 1253;
},
{
glyphname = uni04E6;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = O;
},
{
pos = (725,0);
ref = uni0308.case;
}
);
width = 851;
}
);
note = uni04E6;
unicode = 1254;
},
{
glyphname = uni04E7;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = o;
},
{
pos = (617,1);
ref = uni0308;
}
);
width = 636;
}
);
note = uni04E7;
unicode = 1255;
},
{
glyphname = uni04E8;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = O;
},
{
pos = (689,-89);
ref = uni0336;
scale = (0.8669,1);
}
);
width = 851;
}
);
note = uni04E8;
unicode = 1256;
},
{
glyphname = uni04E9;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,530,o),
(120,462,o),
(50,340,o),
(50,263,qs),
(50,186,o),
(120,64,o),
(245,-5,o),
(323,-5,qs),
(401,-5,o),
(525,64,o),
(596,186,o),
(596,263,qs),
(596,340,o),
(525,462,o),
(401,530,o),
(323,530,qs)
);
},
{
closed = 1;
nodes = (
(406,473,o),
(518,372,o),
(527,289,q),
(119,289,l),
(127,372,o),
(240,473,o),
(323,473,qs)
);
},
{
closed = 1;
nodes = (
(240,53,o),
(127,155,o),
(119,238,q),
(527,238,l),
(519,155,o),
(406,53,o),
(323,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 2 0 4 5 2 4 101 7 1 3 3 1 95 6 1 1 1 39 75 8 1 5 5 0 95 0 0 0 40 0 76 23 23 16 16 0 0 23 29 23 28 26 25 16 22 16 21 19 18 0 15 0 14 38 9 7 21 
CALL[ ]	/* CallFunction */";
};
width = 646;
}
);
note = uni04E9;
unicode = 1257;
},
{
glyphname = uni04EA;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = O;
},
{
pos = (689,-89);
ref = uni0336;
scale = (0.8669,1);
},
{
pos = (725,0);
ref = uni0308.case;
}
);
width = 851;
}
);
note = uni04EA;
unicode = 1258;
},
{
glyphname = uni04EB;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04E9;
},
{
pos = (623,1);
ref = uni0308;
}
);
width = 646;
}
);
note = uni04EB;
unicode = 1259;
},
{
glyphname = uni04EC;
kernLeft = uni01B7;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni042D;
},
{
pos = (617,0);
ref = uni0308.case;
}
);
width = 706;
}
);
note = uni04EC;
unicode = 1260;
},
{
glyphname = uni04ED;
kernLeft = uni01EF;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni044D;
},
{
pos = (559,1);
ref = uni0308;
}
);
width = 571;
}
);
note = uni04ED;
unicode = 1261;
},
{
glyphname = uni04EE;
kernLeft = X;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0423;
},
{
pos = (633,0);
ref = uni0304.case;
}
);
width = 680;
}
);
note = uni04EE;
unicode = 1262;
},
{
glyphname = uni04EF;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = y;
},
{
pos = (564,1);
ref = uni0304;
}
);
width = 558;
}
);
note = uni04EF;
unicode = 1263;
},
{
glyphname = uni04F0;
kernLeft = X;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0423;
},
{
pos = (633,0);
ref = uni0308.case;
}
);
width = 680;
}
);
note = uni04F0;
unicode = 1264;
},
{
glyphname = uni04F1;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = y;
},
{
pos = (564,1);
ref = uni0308;
}
);
width = 558;
}
);
note = uni04F1;
unicode = 1265;
},
{
glyphname = uni04F2;
kernLeft = X;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0423;
},
{
pos = (633,0);
ref = uni030B.case;
}
);
width = 680;
}
);
note = uni04F2;
unicode = 1266;
},
{
glyphname = uni04F3;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
pos = (7,0);
ref = y;
},
{
pos = (564,1);
ref = uni030B;
}
);
width = 558;
}
);
note = uni04F3;
unicode = 1267;
},
{
glyphname = uni04F4;
kernLeft = uni0427;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0427;
},
{
pos = (637,0);
ref = uni0308.case;
}
);
width = 731;
}
);
note = uni04F4;
unicode = 1268;
},
{
glyphname = uni04F5;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0447;
},
{
pos = (570,1);
ref = uni0308;
}
);
width = 599;
}
);
note = uni04F5;
unicode = 1269;
},
{
glyphname = uni04F6;
kernLeft = B;
kernRight = uni0403;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0413;
},
{
pos = (72,0);
ref = descendercy.case;
}
);
width = 572;
}
);
note = uni04F6;
unicode = 1270;
},
{
glyphname = uni04F7;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0433;
},
{
pos = (41,0);
ref = descendercy;
}
);
width = 475;
}
);
note = uni04F7;
unicode = 1271;
},
{
glyphname = uni04F8;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni042C;
},
{
pos = (669,0);
ref = uni0406;
},
{
pos = (790,0);
ref = uni0308.case;
}
);
width = 978;
}
);
note = uni04F8;
unicode = 1272;
},
{
glyphname = uni04F9;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni044B;
},
{
pos = (708,1);
ref = uni0308;
}
);
width = 785;
}
);
note = uni04F9;
unicode = 1273;
},
{
glyphname = uni04FA;
kernLeft = B;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(588,700,l),
(142,700,l),
(142,353,l),
(35,353,l),
(35,297,l),
(142,297,l),
(142,0,l),
(249,0,l),
(249,-40,ls),
(249,-88,o),
(201,-138,o),
(159,-138,qs),
(112,-138,o),
(79,-112,q),
(55,-164,l),
(105,-199,o),
(170,-199,qs),
(237,-199,o),
(320,-119,o),
(320,-50,qs),
(320,64,l),
(215,64,l),
(215,297,l),
(516,297,l),
(516,353,l),
(215,353,l),
(215,636,l),
(588,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
13 1 4 5 12 1 3 4 2 74 7 1 0 6 1 1 2 0 1 101 10 1 9 9 8 93 0 8 8 32 75 0 2 2 5 93 0 5 5 33 75 0 4 4 3 95 0 3 3 41 3 76 0 0 0 27 0 27 17 17 17 19 35 35 17 17 17 11 7 29 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = uni04FA;
unicode = 1274;
},
{
glyphname = uni04FB;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,526,l),
(121,526,l),
(121,274,l),
(40,274,l),
(40,222,l),
(121,222,l),
(121,0,l),
(205,0,l),
(205,-38,ls),
(205,-88,o),
(160,-139,o),
(117,-139,qs),
(69,-139,o),
(36,-112,q),
(13,-164,l),
(32,-181,o),
(92,-199,o),
(125,-199,qs),
(197,-199,o),
(276,-116,o),
(276,-46,qs),
(276,62,l),
(192,62,l),
(192,222,l),
(413,222,l),
(413,274,l),
(192,274,l),
(192,463,l),
(454,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 70 values pushed */
14 1 4 5 13 1 3 4 2 74 7 1 0 6 1 1 2 0 1 101 10 1 9 9 8 93 0 8 8 34 75 0 2 2 5 93 0 5 5 33 75 0 4 4 3 95 0 3 3 41 3 76 0 0 0 28 0 28 17 17 17 19 36 35 17 17 17 11 7 29 
CALL[ ]	/* CallFunction */";
};
width = 478;
}
);
note = uni04FB;
unicode = 1275;
},
{
glyphname = uni04FC;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(614,700,l),
(533,700,l),
(328,415,l),
(122,700,l),
(37,700,l),
(282,360,l),
(20,0,l),
(106,0,l),
(326,307,l),
(399,217,o),
(483,106,o),
(541,-5,o),
(541,-46,qs),
(541,-91,o),
(494,-140,o),
(454,-140,qs),
(417,-140,o),
(377,-118,q),
(357,-171,l),
(412,-200,o),
(468,-200,qs),
(534,-200,o),
(620,-119,o),
(620,-49,qs),
(620,-3,o),
(567,106,o),
(486,217,o),
(414,308,qs),
(370,363,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
28 25 22 19 4 2 3 10 1 1 2 9 1 0 1 3 74 4 1 3 3 32 75 0 2 2 33 75 0 1 1 0 95 0 0 0 41 0 76 18 18 23 35 38 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = uni04FC;
unicode = 1276;
},
{
glyphname = uni04FD;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,526,l),
(419,526,l),
(263,322,l),
(109,526,l),
(29,526,l),
(222,270,l),
(17,0,l),
(98,0,l),
(264,219,l),
(363,103,o),
(439,-12,o),
(439,-55,qs),
(439,-91,o),
(390,-139,o),
(351,-139,qs),
(311,-139,o),
(272,-114,q),
(249,-168,l),
(305,-199,o),
(360,-199,qs),
(426,-199,o),
(510,-122,o),
(510,-59,qs),
(510,-20,o),
(470,66,o),
(385,178,o),
(305,273,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
26 23 20 17 4 2 3 9 1 1 2 8 1 0 1 3 74 4 1 3 3 34 75 0 2 2 33 75 0 1 1 0 95 0 0 0 41 0 76 18 18 22 35 37 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 524;
}
);
note = uni04FD;
unicode = 1277;
},
{
glyphname = uni04FE;
kernLeft = X;
kernRight = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(562,331,l),
(562,387,l),
(396,387,l),
(619,700,l),
(533,700,l),
(334,423,l),
(135,700,l),
(50,700,l),
(272,387,l),
(98,387,l),
(98,331,l),
(269,331,l),
(32,0,l),
(118,0,l),
(334,301,l),
(551,0,l),
(638,0,l),
(403,331,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
11 1 3 4 2 1 0 2 2 74 6 1 3 7 1 2 0 3 2 102 5 1 4 4 32 75 1 1 0 0 33 0 76 17 17 18 17 17 17 18 16 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 668;
}
);
note = uni04FE;
unicode = 1278;
},
{
glyphname = uni04FF;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(343,240,l),
(463,240,l),
(463,292,l),
(334,292,l),
(514,526,l),
(437,526,l),
(278,320,l),
(122,526,l),
(40,526,l),
(217,292,l),
(93,292,l),
(93,240,l),
(214,240,l),
(29,0,l),
(109,0,l),
(277,219,l),
(442,0,l),
(526,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
10 1 2 3 1 1 0 1 2 74 5 1 2 6 1 1 0 2 1 102 4 1 3 3 34 75 8 7 2 0 0 33 0 76 0 0 0 17 0 17 17 17 18 17 17 17 18 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 555;
}
);
note = uni04FF;
unicode = 1279;
},
{
glyphname = uni0510;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,98,o),
(410,57,o),
(350,57,qs),
(293,57,o),
(197,93,o),
(140,160,o),
(140,206,qs),
(140,267,o),
(235,333,o),
(322,333,qs),
(472,333,l),
(472,393,l),
(326,393,ls),
(252,393,o),
(169,456,o),
(169,512,qs),
(169,574,o),
(276,645,o),
(356,645,qs),
(406,645,o),
(508,616,o),
(554,587,q),
(578,648,l),
(474,710,o),
(353,710,qs),
(282,710,o),
(164,664,o),
(95,578,o),
(95,520,qs),
(95,464,o),
(157,383,o),
(213,366,q),
(144,349,o),
(65,259,o),
(65,196,qs),
(65,135,o),
(141,43,o),
(267,-6,o),
(341,-6,qs),
(411,-6,o),
(546,39,o),
(600,84,q),
(573,137,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
19 1 2 1 20 1 3 2 10 1 4 3 42 1 5 4 4 74 0 3 0 4 5 3 4 101 0 2 2 1 95 0 1 1 37 75 0 5 5 0 95 0 0 0 38 0 76 37 33 36 36 44 34 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 635;
}
);
note = uni0510;
unicode = 1296;
},
{
glyphname = uni0511;
kernLeft = uni0511;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,85,o),
(348,55,o),
(299,55,qs),
(226,55,o),
(133,110,o),
(133,157,qs),
(133,199,o),
(209,246,o),
(275,246,qs),
(365,246,l),
(365,298,l),
(279,298,ls),
(220,298,o),
(148,343,o),
(148,381,qs),
(148,423,o),
(229,471,o),
(294,471,qs),
(379,471,o),
(462,428,q),
(482,483,l),
(388,532,o),
(287,532,qs),
(227,532,o),
(130,497,o),
(75,433,o),
(75,391,qs),
(75,351,o),
(130,289,o),
(177,274,q),
(121,261,o),
(60,197,o),
(60,151,qs),
(60,105,o),
(123,33,o),
(231,-6,o),
(296,-6,qs),
(353,-6,o),
(463,27,o),
(504,59,q),
(480,112,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
19 1 2 1 20 1 3 2 10 1 4 3 40 1 5 4 4 74 0 3 0 4 5 3 4 101 0 2 2 1 95 0 1 1 39 75 0 5 5 0 95 0 0 0 38 0 76 36 33 36 35 44 34 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 534;
}
);
note = uni0511;
unicode = 1297;
},
{
glyphname = uni0512;
kernLeft = uni0409;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(454,-200,o),
(515,-200,qs),
(579,-200,o),
(668,-123,o),
(668,-52,qs),
(668,700,l),
(193,700,l),
(182,400,ls),
(177,279,o),
(149,132,o),
(94,62,o),
(50,62,qs),
(34,62,o),
(17,66,q),
(11,0,l),
(42,-7,o),
(67,-7,qs),
(130,-7,o),
(205,80,o),
(242,257,o),
(248,402,qs),
(257,636,l),
(595,636,l),
(595,-48,ls),
(595,-91,o),
(544,-138,o),
(506,-138,qs),
(464,-138,o),
(426,-111,q),
(402,-165,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
15 1 3 1 14 1 2 3 29 1 5 0 3 74 0 1 1 4 93 0 4 4 32 75 0 3 3 2 95 0 2 2 38 75 0 0 0 5 95 0 5 5 41 5 76 35 20 35 36 19 33 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 787;
}
);
note = uni0512;
unicode = 1298;
},
{
glyphname = uni0513;
kernLeft = uni0434;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,338,ls),
(132,246,o),
(118,134,o),
(76,58,o),
(35,58,qs),
(28,58,o),
(10,62,q),
(5,1,l),
(35,-7,o),
(56,-7,qs),
(133,-7,o),
(193,169,o),
(201,333,qs),
(208,463,l),
(460,463,l),
(460,-39,ls),
(460,-88,o),
(414,-138,o),
(370,-138,qs),
(322,-138,o),
(291,-111,q),
(267,-165,l),
(287,-182,o),
(346,-199,o),
(379,-199,qs),
(451,-199,o),
(531,-114,o),
(531,-42,qs),
(531,526,l),
(146,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
22 1 4 2 21 1 3 4 8 1 1 3 7 1 0 1 4 74 0 2 2 5 93 6 1 5 5 34 75 0 4 4 3 95 0 3 3 38 75 0 1 1 0 95 0 0 0 41 0 76 0 0 0 29 0 29 35 35 19 36 35 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 632;
}
);
note = uni0513;
unicode = 1299;
},
{
glyphname = uni051A;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = Q;
}
);
width = 855;
}
);
note = uni051A;
unicode = 1306;
},
{
glyphname = uni051B;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = q;
}
);
width = 686;
}
);
note = uni051B;
unicode = 1307;
},
{
glyphname = uni051C;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(774,100,l),
(573,700,l),
(505,700,l),
(301,102,l),
(103,700,l),
(26,700,l),
(259,0,l),
(336,0,l),
(538,594,l),
(737,0,l),
(814,0,l),
(1046,700,l),
(975,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 8 3 3 0 2 1 74 5 4 3 3 2 2 32 75 1 1 0 0 33 0 76 0 0 0 12 0 12 18 17 18 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1072;
}
);
note = uni051C;
unicode = 1308;
},
{
glyphname = uni051D;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(671,82,l),
(499,526,l),
(433,526,l),
(258,83,l),
(88,526,l),
(14,526,l),
(220,0,l),
(293,0,l),
(464,432,l),
(635,0,l),
(708,0,l),
(913,526,l),
(844,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 8 3 3 0 2 1 74 5 4 3 3 2 2 34 75 1 1 0 0 33 0 76 0 0 0 12 0 12 18 17 18 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 928;
}
);
note = uni051D;
unicode = 1309;
},
{
glyphname = uni0524;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni041F;
},
{
pos = (588,0);
ref = descendercy.case;
}
);
width = 849;
}
);
note = uni0524;
unicode = 1316;
},
{
glyphname = uni0525;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043F;
},
{
pos = (442,0);
ref = descendercy;
}
);
width = 674;
}
);
note = uni0525;
unicode = 1317;
},
{
glyphname = uni0526;
kernLeft = B;
kernRight = uni0402;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04BA;
},
{
pos = (553,0);
ref = descendercy.case;
}
);
width = 798;
}
);
note = uni0526;
unicode = 1318;
},
{
glyphname = uni0527;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(585,307,ls),
(585,416,o),
(471,530,o),
(374,530,qs),
(305,530,o),
(201,474,o),
(172,422,q),
(172,742,l),
(101,742,l),
(101,0,l),
(172,0,l),
(172,274,ls),
(172,362,o),
(271,464,o),
(357,464,qs),
(432,464,o),
(514,379,o),
(514,296,qs),
(514,0,l),
(596,0,l),
(596,-115,l),
(663,-115,l),
(663,62,l),
(585,62,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 6 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 4 5 4 131 0 0 1 1 0 111 0 2 2 5 95 0 5 5 39 75 7 1 6 6 1 93 3 1 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 4 5 4 131 0 0 1 0 132 0 2 2 5 95 0 5 5 39 75 7 1 6 6 1 93 3 1 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 23 0 23 35 17 19 35 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 692;
}
);
note = uni0527;
unicode = 1319;
},
{
glyphname = uni0528;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-21,-200,o),
(40,-200,qs),
(104,-200,o),
(192,-123,o),
(192,-52,qs),
(192,319,l),
(626,319,l),
(626,0,l),
(699,0,l),
(699,700,l),
(626,700,l),
(626,384,l),
(192,384,l),
(192,700,l),
(120,700,l),
(120,-48,ls),
(120,-91,o),
(69,-138,o),
(31,-138,qs),
(-12,-138,o),
(-49,-111,q),
(-73,-165,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
21 1 6 0 1 74 0 2 0 5 4 2 5 101 3 1 1 1 32 75 0 4 4 33 75 0 0 0 6 95 0 6 6 41 6 76 35 17 17 17 17 19 33 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 817;
}
);
note = uni0528;
unicode = 1320;
},
{
glyphname = uni0529;
kernLeft = j;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(503,295,l),
(173,295,l),
(173,526,l),
(102,526,l),
(102,-39,ls),
(102,-87,o),
(56,-138,o),
(13,-138,qs),
(-36,-138,o),
(-66,-111,q),
(-90,-165,l),
(-70,-182,o),
(-11,-199,o),
(23,-199,qs),
(94,-199,o),
(173,-115,o),
(173,-43,qs),
(173,233,l),
(503,233,l),
(503,0,l),
(574,0,l),
(574,526,l),
(503,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
12 1 3 0 11 1 2 3 2 74 0 5 0 1 0 5 1 101 7 6 2 4 4 34 75 0 0 0 33 75 0 3 3 2 95 0 2 2 41 2 76 0 0 0 22 0 22 17 19 36 35 17 17 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 675;
}
);
note = uni0529;
unicode = 1321;
},
{
glyphname = uni052E;
kernLeft = uni0409;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni041B;
},
{
pos = (548,0);
ref = descendercy.case;
}
);
width = 809;
}
);
note = uni052E;
unicode = 1326;
},
{
glyphname = uni052F;
kernLeft = uni0434;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043B;
},
{
pos = (400,0);
ref = descendercy;
}
);
width = 651;
}
);
note = uni052F;
unicode = 1327;
},
{
glyphname = uni1E00;
layers = (
{
layerId = m01;
width = 717;
}
);
note = uni1E00;
unicode = 7680;
},
{
glyphname = uni1E01;
layers = (
{
layerId = m01;
width = 590;
}
);
note = uni1E01;
unicode = 7681;
},
{
glyphname = uni1E02;
layers = (
{
layerId = m01;
width = 754;
}
);
note = uni1E02;
unicode = 7682;
},
{
glyphname = uni1E03;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E03;
unicode = 7683;
},
{
glyphname = uni1E04;
layers = (
{
layerId = m01;
width = 754;
}
);
note = uni1E04;
unicode = 7684;
},
{
glyphname = uni1E05;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E05;
unicode = 7685;
},
{
glyphname = uni1E06;
layers = (
{
layerId = m01;
width = 754;
}
);
note = uni1E06;
unicode = 7686;
},
{
glyphname = uni1E07;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E07;
unicode = 7687;
},
{
glyphname = uni1E08;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
ref = C;
},
{
pos = (704,0);
ref = uni0327;
},
{
pos = (710,0);
ref = acutecomb.case;
}
);
width = 719;
}
);
note = uni1E08;
unicode = 7688;
},
{
glyphname = uni1E09;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
ref = c;
},
{
pos = (597,0);
ref = uni0327;
},
{
pos = (599,1);
ref = acutecomb;
}
);
width = 563;
}
);
note = uni1E09;
unicode = 7689;
},
{
glyphname = uni1E0A;
layers = (
{
layerId = m01;
width = 826;
}
);
note = uni1E0A;
unicode = 7690;
},
{
glyphname = uni1E0B;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E0B;
unicode = 7691;
},
{
glyphname = uni1E0C;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (688,0);
ref = dotbelowcomb;
}
);
width = 826;
}
);
note = uni1E0C;
unicode = 7692;
},
{
glyphname = uni1E0D;
kernLeft = c;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (640,0);
ref = dotbelowcomb;
}
);
width = 678;
}
);
note = uni1E0D;
unicode = 7693;
},
{
glyphname = uni1E0E;
kernLeft = B;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (688,0);
ref = uni0331;
}
);
width = 826;
}
);
note = uni1E0E;
unicode = 7694;
},
{
glyphname = uni1E0F;
kernLeft = c;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (640,0);
ref = uni0331;
}
);
width = 678;
}
);
note = uni1E0F;
unicode = 7695;
},
{
glyphname = uni1E10;
layers = (
{
layerId = m01;
width = 826;
}
);
note = uni1E10;
unicode = 7696;
},
{
glyphname = uni1E11;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E11;
unicode = 7697;
},
{
glyphname = uni1E12;
layers = (
{
layerId = m01;
width = 826;
}
);
note = uni1E12;
unicode = 7698;
},
{
glyphname = uni1E13;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E13;
unicode = 7699;
},
{
glyphname = uni1E14;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,150);
ref = uni0304.loclVIET;
},
{
pos = (655,282);
ref = gravecomb.loclVIET;
}
);
width = 669;
}
);
note = uni1E14;
unicode = 7700;
},
{
glyphname = uni1E15;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0304.loclVIET;
},
{
pos = (603,133);
ref = gravecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1E15;
unicode = 7701;
},
{
glyphname = uni1E16;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,150);
ref = uni0304.loclVIET;
},
{
pos = (655,282);
ref = acutecomb.loclVIET;
}
);
width = 669;
}
);
note = uni1E16;
unicode = 7702;
},
{
glyphname = uni1E17;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0304.loclVIET;
},
{
pos = (603,133);
ref = acutecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1E17;
unicode = 7703;
},
{
glyphname = uni1E18;
layers = (
{
layerId = m01;
width = 669;
}
);
note = uni1E18;
unicode = 7704;
},
{
glyphname = uni1E19;
layers = (
{
layerId = m01;
width = 604;
}
);
note = uni1E19;
unicode = 7705;
},
{
glyphname = uni1E1A;
layers = (
{
layerId = m01;
width = 669;
}
);
note = uni1E1A;
unicode = 7706;
},
{
glyphname = uni1E1B;
layers = (
{
layerId = m01;
width = 604;
}
);
note = uni1E1B;
unicode = 7707;
},
{
glyphname = uni1E1C;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (668,0);
ref = uni0327;
},
{
pos = (655,0);
ref = uni0306.case;
}
);
width = 669;
}
);
note = uni1E1C;
unicode = 7708;
},
{
glyphname = uni1E1D;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,0);
ref = uni0327;
},
{
pos = (603,1);
ref = uni0306;
}
);
width = 604;
}
);
note = uni1E1D;
unicode = 7709;
},
{
glyphname = uni1E1E;
layers = (
{
layerId = m01;
width = 633;
}
);
note = uni1E1E;
unicode = 7710;
},
{
glyphname = uni1E1F;
layers = (
{
layerId = m01;
width = 339;
}
);
note = uni1E1F;
unicode = 7711;
},
{
glyphname = uni1E20;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G;
},
{
pos = (708,0);
ref = uni0304.case;
}
);
width = 773;
}
);
note = uni1E20;
unicode = 7712;
},
{
glyphname = uni1E21;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
},
{
pos = (625,1);
ref = uni0304;
}
);
width = 686;
}
);
note = uni1E21;
unicode = 7713;
},
{
glyphname = uni1E22;
layers = (
{
layerId = m01;
width = 813;
}
);
note = uni1E22;
unicode = 7714;
},
{
glyphname = uni1E23;
layers = (
{
layerId = m01;
width = 677;
}
);
note = uni1E23;
unicode = 7715;
},
{
glyphname = uni1E24;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (706,0);
ref = dotbelowcomb;
}
);
width = 813;
}
);
note = uni1E24;
unicode = 7716;
},
{
glyphname = uni1E25;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (640,0);
ref = dotbelowcomb;
}
);
width = 677;
}
);
note = uni1E25;
unicode = 7717;
},
{
glyphname = uni1E26;
layers = (
{
layerId = m01;
width = 813;
}
);
note = uni1E26;
unicode = 7718;
},
{
glyphname = uni1E27;
layers = (
{
layerId = m01;
width = 677;
}
);
note = uni1E27;
unicode = 7719;
},
{
glyphname = uni1E28;
layers = (
{
layerId = m01;
width = 1000;
}
);
note = uni1E28;
unicode = 7720;
},
{
glyphname = uni1E29;
layers = (
{
layerId = m01;
width = 1000;
}
);
note = uni1E29;
unicode = 7721;
},
{
glyphname = uni1E2A;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = H;
},
{
pos = (706,0);
ref = uni032E;
}
);
width = 813;
}
);
note = uni1E2A;
unicode = 7722;
},
{
glyphname = uni1E2B;
kernLeft = b;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = h;
},
{
pos = (640,0);
ref = uni032E;
}
);
width = 677;
}
);
note = uni1E2B;
unicode = 7723;
},
{
glyphname = uni1E2C;
layers = (
{
layerId = m01;
width = 302;
}
);
note = uni1E2C;
unicode = 7724;
},
{
glyphname = uni1E2D;
layers = (
{
layerId = m01;
width = 269;
}
);
note = uni1E2D;
unicode = 7725;
},
{
glyphname = uni1E2E;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,150);
ref = uni0308.loclVIET;
},
{
pos = (451,282);
ref = acutecomb.loclVIET;
}
);
width = 302;
}
);
note = uni1E2E;
unicode = 7726;
},
{
glyphname = uni1E2F;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0308.loclVIET;
},
{
pos = (435,133);
ref = acutecomb.loclVIET;
}
);
width = 269;
}
);
note = uni1E2F;
unicode = 7727;
},
{
glyphname = uni1E30;
layers = (
{
layerId = m01;
width = 711;
}
);
note = uni1E30;
unicode = 7728;
},
{
glyphname = uni1E31;
layers = (
{
layerId = m01;
width = 601;
}
);
note = uni1E31;
unicode = 7729;
},
{
glyphname = uni1E32;
layers = (
{
layerId = m01;
width = 711;
}
);
note = uni1E32;
unicode = 7730;
},
{
glyphname = uni1E33;
layers = (
{
layerId = m01;
width = 601;
}
);
note = uni1E33;
unicode = 7731;
},
{
glyphname = uni1E34;
layers = (
{
layerId = m01;
width = 711;
}
);
note = uni1E34;
unicode = 7732;
},
{
glyphname = uni1E35;
layers = (
{
layerId = m01;
width = 601;
}
);
note = uni1E35;
unicode = 7733;
},
{
glyphname = uni1E36;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (658,0);
ref = dotbelowcomb;
}
);
width = 589;
}
);
note = uni1E36;
unicode = 7734;
},
{
glyphname = uni1E37;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (435,0);
ref = dotbelowcomb;
}
);
width = 269;
}
);
note = uni1E37;
unicode = 7735;
},
{
glyphname = uni1E38;
layers = (
{
layerId = m01;
width = 589;
}
);
note = uni1E38;
unicode = 7736;
},
{
glyphname = uni1E39;
layers = (
{
layerId = m01;
width = 269;
}
);
note = uni1E39;
unicode = 7737;
},
{
glyphname = uni1E3A;
kernLeft = B;
kernRight = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (658,0);
ref = uni0331;
}
);
width = 589;
}
);
note = uni1E3A;
unicode = 7738;
},
{
glyphname = uni1E3B;
kernLeft = b;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = l;
},
{
pos = (435,0);
ref = uni0331;
}
);
width = 269;
}
);
note = uni1E3B;
unicode = 7739;
},
{
glyphname = uni1E3C;
layers = (
{
layerId = m01;
width = 589;
}
);
note = uni1E3C;
unicode = 7740;
},
{
glyphname = uni1E3D;
layers = (
{
layerId = m01;
width = 269;
}
);
note = uni1E3D;
unicode = 7741;
},
{
glyphname = uni1E3E;
layers = (
{
layerId = m01;
width = 955;
}
);
note = uni1E3E;
unicode = 7742;
},
{
glyphname = uni1E3F;
layers = (
{
layerId = m01;
width = 1061;
}
);
note = uni1E3F;
unicode = 7743;
},
{
glyphname = uni1E40;
layers = (
{
layerId = m01;
width = 955;
}
);
note = uni1E40;
unicode = 7744;
},
{
glyphname = uni1E41;
layers = (
{
layerId = m01;
width = 1061;
}
);
note = uni1E41;
unicode = 7745;
},
{
glyphname = uni1E42;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = M;
},
{
pos = (777,0);
ref = dotbelowcomb;
}
);
width = 955;
}
);
note = uni1E42;
unicode = 7746;
},
{
glyphname = uni1E43;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = m;
},
{
pos = (832,0);
ref = dotbelowcomb;
}
);
width = 1061;
}
);
note = uni1E43;
unicode = 7747;
},
{
glyphname = uni1E44;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = uni0307.case;
}
);
width = 813;
}
);
note = uni1E44;
unicode = 7748;
},
{
glyphname = uni1E45;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,1);
ref = uni0307;
}
);
width = 677;
}
);
note = uni1E45;
unicode = 7749;
},
{
glyphname = uni1E46;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = dotbelowcomb;
}
);
width = 813;
}
);
note = uni1E46;
unicode = 7750;
},
{
glyphname = uni1E47;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,0);
ref = dotbelowcomb;
}
);
width = 677;
}
);
note = uni1E47;
unicode = 7751;
},
{
glyphname = uni1E48;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = N;
},
{
pos = (706,0);
ref = uni0331;
}
);
width = 813;
}
);
note = uni1E48;
unicode = 7752;
},
{
glyphname = uni1E49;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = n;
},
{
pos = (640,0);
ref = uni0331;
}
);
width = 677;
}
);
note = uni1E49;
unicode = 7753;
},
{
glyphname = uni1E4A;
layers = (
{
layerId = m01;
width = 813;
}
);
note = uni1E4A;
unicode = 7754;
},
{
glyphname = uni1E4B;
layers = (
{
layerId = m01;
width = 677;
}
);
note = uni1E4B;
unicode = 7755;
},
{
glyphname = uni1E4C;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = tildecomb.loclVIET;
},
{
pos = (720,282);
ref = acutecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1E4C;
unicode = 7756;
},
{
glyphname = uni1E4D;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = tildecomb.loclVIET;
},
{
pos = (613,133);
ref = acutecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1E4D;
unicode = 7757;
},
{
glyphname = uni1E4E;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = tildecomb.loclVIET;
},
{
pos = (720,282);
ref = uni0308.loclVIET;
}
);
width = 839;
}
);
note = uni1E4E;
unicode = 7758;
},
{
glyphname = uni1E4F;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = tildecomb.loclVIET;
},
{
pos = (613,133);
ref = uni0308.loclVIET;
}
);
width = 627;
}
);
note = uni1E4F;
unicode = 7759;
},
{
glyphname = uni1E50;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0304.loclVIET;
},
{
pos = (720,282);
ref = gravecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1E50;
unicode = 7760;
},
{
glyphname = uni1E51;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0304.loclVIET;
},
{
pos = (613,133);
ref = gravecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1E51;
unicode = 7761;
},
{
glyphname = uni1E52;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0304.loclVIET;
},
{
pos = (720,282);
ref = acutecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1E52;
unicode = 7762;
},
{
glyphname = uni1E53;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0304.loclVIET;
},
{
pos = (613,133);
ref = acutecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1E53;
unicode = 7763;
},
{
glyphname = uni1E54;
layers = (
{
layerId = m01;
width = 718;
}
);
note = uni1E54;
unicode = 7764;
},
{
glyphname = uni1E55;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E55;
unicode = 7765;
},
{
glyphname = uni1E56;
layers = (
{
layerId = m01;
width = 718;
}
);
note = uni1E56;
unicode = 7766;
},
{
glyphname = uni1E57;
layers = (
{
layerId = m01;
width = 678;
}
);
note = uni1E57;
unicode = 7767;
},
{
glyphname = uni1E58;
layers = (
{
layerId = m01;
width = 723;
}
);
note = uni1E58;
unicode = 7768;
},
{
glyphname = uni1E59;
layers = (
{
layerId = m01;
width = 401;
}
);
note = uni1E59;
unicode = 7769;
},
{
glyphname = uni1E5A;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = dotbelowcomb;
}
);
width = 723;
}
);
note = uni1E5A;
unicode = 7770;
},
{
glyphname = uni1E5B;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (435,0);
ref = dotbelowcomb;
}
);
width = 401;
}
);
note = uni1E5B;
unicode = 7771;
},
{
glyphname = uni1E5C;
layers = (
{
layerId = m01;
width = 723;
}
);
note = uni1E5C;
unicode = 7772;
},
{
glyphname = uni1E5D;
layers = (
{
layerId = m01;
width = 401;
}
);
note = uni1E5D;
unicode = 7773;
},
{
glyphname = uni1E5E;
kernLeft = B;
kernRight = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = R;
},
{
pos = (669,0);
ref = uni0331;
}
);
width = 723;
}
);
note = uni1E5E;
unicode = 7774;
},
{
glyphname = uni1E5F;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = r;
},
{
pos = (435,0);
ref = uni0331;
}
);
width = 401;
}
);
note = uni1E5F;
unicode = 7775;
},
{
glyphname = uni1E60;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = uni0307.case;
}
);
width = 615;
}
);
note = uni1E60;
unicode = 7776;
},
{
glyphname = uni1E61;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,1);
ref = uni0307;
}
);
width = 489;
}
);
note = uni1E61;
unicode = 7777;
},
{
glyphname = uni1E62;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = dotbelowcomb;
}
);
width = 615;
}
);
note = uni1E62;
unicode = 7778;
},
{
glyphname = uni1E63;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,0);
ref = dotbelowcomb;
}
);
width = 489;
}
);
note = uni1E63;
unicode = 7779;
},
{
glyphname = uni1E64;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,150);
ref = acutecomb.loclVIET;
},
{
pos = (621,282);
ref = uni0307.loclVIET;
}
);
width = 615;
}
);
note = uni1E64;
unicode = 7780;
},
{
glyphname = uni1E65;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,1);
ref = acutecomb.loclVIET;
},
{
pos = (543,133);
ref = uni0307.loclVIET;
}
);
width = 489;
}
);
note = uni1E65;
unicode = 7781;
},
{
glyphname = uni1E66;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,150);
ref = uni030C.loclVIET;
},
{
pos = (621,259);
ref = uni0307.loclVIET;
}
);
width = 615;
}
);
note = uni1E66;
unicode = 7782;
},
{
glyphname = uni1E67;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,1);
ref = uni030C.loclVIET;
},
{
pos = (543,110);
ref = uni0307.loclVIET;
}
);
width = 489;
}
);
note = uni1E67;
unicode = 7783;
},
{
glyphname = uni1E68;
kernLeft = dollar;
kernRight = dollar;
layers = (
{
layerId = m01;
shapes = (
{
ref = S;
},
{
pos = (621,0);
ref = dotbelowcomb;
},
{
pos = (621,0);
ref = uni0307.case;
}
);
width = 615;
}
);
note = uni1E68;
unicode = 7784;
},
{
glyphname = uni1E69;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = s;
},
{
pos = (543,0);
ref = dotbelowcomb;
},
{
pos = (543,1);
ref = uni0307;
}
);
width = 489;
}
);
note = uni1E69;
unicode = 7785;
},
{
glyphname = uni1E6A;
layers = (
{
layerId = m01;
width = 574;
}
);
note = uni1E6A;
unicode = 7786;
},
{
glyphname = uni1E6B;
layers = (
{
layerId = m01;
width = 406;
}
);
note = uni1E6B;
unicode = 7787;
},
{
glyphname = uni1E6C;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (587,0);
ref = dotbelowcomb;
}
);
width = 574;
}
);
note = uni1E6C;
unicode = 7788;
},
{
glyphname = uni1E6D;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (549,0);
ref = dotbelowcomb;
}
);
width = 406;
}
);
note = uni1E6D;
unicode = 7789;
},
{
glyphname = uni1E6E;
kernLeft = T;
kernRight = T;
layers = (
{
layerId = m01;
shapes = (
{
ref = T;
},
{
pos = (587,0);
ref = uni0331;
}
);
width = 574;
}
);
note = uni1E6E;
unicode = 7790;
},
{
glyphname = uni1E6F;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (549,0);
ref = uni0331;
}
);
width = 406;
}
);
note = uni1E6F;
unicode = 7791;
},
{
glyphname = uni1E70;
layers = (
{
layerId = m01;
width = 574;
}
);
note = uni1E70;
unicode = 7792;
},
{
glyphname = uni1E71;
layers = (
{
layerId = m01;
width = 406;
}
);
note = uni1E71;
unicode = 7793;
},
{
glyphname = uni1E72;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni1E72;
unicode = 7794;
},
{
glyphname = uni1E73;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni1E73;
unicode = 7795;
},
{
glyphname = uni1E74;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni1E74;
unicode = 7796;
},
{
glyphname = uni1E75;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni1E75;
unicode = 7797;
},
{
glyphname = uni1E76;
layers = (
{
layerId = m01;
width = 792;
}
);
note = uni1E76;
unicode = 7798;
},
{
glyphname = uni1E77;
layers = (
{
layerId = m01;
width = 673;
}
);
note = uni1E77;
unicode = 7799;
},
{
glyphname = uni1E78;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,150);
ref = tildecomb.loclVIET;
},
{
pos = (696,282);
ref = acutecomb.loclVIET;
}
);
width = 792;
}
);
note = uni1E78;
unicode = 7800;
},
{
glyphname = uni1E79;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = tildecomb.loclVIET;
},
{
pos = (634,133);
ref = acutecomb.loclVIET;
}
);
width = 673;
}
);
note = uni1E79;
unicode = 7801;
},
{
glyphname = uni1E7A;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,151);
ref = uni0304.loclVIET;
},
{
pos = (696,283);
ref = uni0308.loclVIET;
}
);
width = 792;
}
);
note = uni1E7A;
unicode = 7802;
},
{
glyphname = uni1E7B;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0304.loclVIET;
},
{
pos = (634,133);
ref = uni0308.loclVIET;
}
);
width = 673;
}
);
note = uni1E7B;
unicode = 7803;
},
{
glyphname = uni1E7C;
layers = (
{
layerId = m01;
width = 698;
}
);
note = uni1E7C;
unicode = 7804;
},
{
glyphname = uni1E7D;
layers = (
{
layerId = m01;
width = 542;
}
);
note = uni1E7D;
unicode = 7805;
},
{
glyphname = uni1E7E;
layers = (
{
layerId = m01;
width = 698;
}
);
note = uni1E7E;
unicode = 7806;
},
{
glyphname = uni1E7F;
layers = (
{
layerId = m01;
width = 542;
}
);
note = uni1E7F;
unicode = 7807;
},
{
glyphname = Wgrave;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (856,0);
ref = gravecomb.case;
}
);
width = 1111;
}
);
note = Wgrave;
unicode = 7808;
},
{
glyphname = wgrave;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (738,-2);
ref = gravecomb;
}
);
width = 879;
}
);
note = wgrave;
unicode = 7809;
},
{
glyphname = Wacute;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (856,0);
ref = acutecomb.case;
}
);
width = 1111;
}
);
note = Wacute;
unicode = 7810;
},
{
glyphname = wacute;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (738,-2);
ref = acutecomb;
}
);
width = 879;
}
);
note = wacute;
unicode = 7811;
},
{
glyphname = Wdieresis;
kernLeft = V;
kernRight = V;
layers = (
{
layerId = m01;
shapes = (
{
ref = W;
},
{
pos = (856,0);
ref = uni0308.case;
}
);
width = 1111;
}
);
note = Wdieresis;
unicode = 7812;
},
{
glyphname = wdieresis;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = w;
},
{
pos = (738,-2);
ref = uni0308;
}
);
width = 879;
}
);
note = wdieresis;
unicode = 7813;
},
{
glyphname = uni1E86;
layers = (
{
layerId = m01;
width = 1111;
}
);
note = uni1E86;
unicode = 7814;
},
{
glyphname = uni1E87;
layers = (
{
layerId = m01;
width = 879;
}
);
note = uni1E87;
unicode = 7815;
},
{
glyphname = uni1E88;
layers = (
{
layerId = m01;
width = 1111;
}
);
note = uni1E88;
unicode = 7816;
},
{
glyphname = uni1E89;
layers = (
{
layerId = m01;
width = 879;
}
);
note = uni1E89;
unicode = 7817;
},
{
glyphname = uni1E8A;
layers = (
{
layerId = m01;
width = 656;
}
);
note = uni1E8A;
unicode = 7818;
},
{
glyphname = uni1E8B;
layers = (
{
layerId = m01;
width = 534;
}
);
note = uni1E8B;
unicode = 7819;
},
{
glyphname = uni1E8C;
layers = (
{
layerId = m01;
width = 656;
}
);
note = uni1E8C;
unicode = 7820;
},
{
glyphname = uni1E8D;
layers = (
{
layerId = m01;
width = 534;
}
);
note = uni1E8D;
unicode = 7821;
},
{
glyphname = uni1E8E;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = uni0307.case;
}
);
width = 635;
}
);
note = uni1E8E;
unicode = 7822;
},
{
glyphname = uni1E8F;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = uni0307;
}
);
width = 542;
}
);
note = uni1E8F;
unicode = 7823;
},
{
glyphname = uni1E90;
layers = (
{
layerId = m01;
width = 651;
}
);
note = uni1E90;
unicode = 7824;
},
{
glyphname = uni1E91;
layers = (
{
layerId = m01;
width = 511;
}
);
note = uni1E91;
unicode = 7825;
},
{
glyphname = uni1E92;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z;
},
{
pos = (640,0);
ref = dotbelowcomb;
}
);
width = 651;
}
);
note = uni1E92;
unicode = 7826;
},
{
glyphname = uni1E93;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z;
},
{
pos = (564,0);
ref = dotbelowcomb;
}
);
width = 511;
}
);
note = uni1E93;
unicode = 7827;
},
{
glyphname = uni1E94;
layers = (
{
layerId = m01;
width = 651;
}
);
note = uni1E94;
unicode = 7828;
},
{
glyphname = uni1E95;
layers = (
{
layerId = m01;
width = 511;
}
);
note = uni1E95;
unicode = 7829;
},
{
glyphname = uni1E96;
layers = (
{
layerId = m01;
width = 677;
}
);
note = uni1E96;
unicode = 7830;
},
{
glyphname = uni1E97;
kernLeft = t;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t;
},
{
pos = (447,116);
ref = uni0308;
}
);
width = 406;
}
);
note = uni1E97;
unicode = 7831;
},
{
glyphname = uni1E98;
layers = (
{
layerId = m01;
width = 879;
}
);
note = uni1E98;
unicode = 7832;
},
{
glyphname = uni1E99;
layers = (
{
layerId = m01;
width = 542;
}
);
note = uni1E99;
unicode = 7833;
},
{
glyphname = uni1E9B;
layers = (
{
layerId = m01;
width = 295;
}
);
note = uni1E9B;
unicode = 7835;
},
{
glyphname = uni1E9E;
kernLeft = uni1E9E;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,406,l),
(636,592,l),
(636,640,l),
(593,675,o),
(474,710,o),
(406,710,qs),
(266,710,o),
(108,551,o),
(108,411,qs),
(108,0,l),
(182,0,l),
(182,408,ls),
(182,524,o),
(299,647,o),
(407,647,qs),
(505,647,o),
(571,608,q),
(356,373,l),
(371,336,l),
(409,347,o),
(456,347,qs),
(536,347,o),
(626,273,o),
(626,202,qs),
(626,131,o),
(537,57,o),
(459,57,qs),
(388,57,o),
(337,82,q),
(324,20,l),
(355,6,o),
(422,-6,o),
(467,-6,qs),
(572,-6,o),
(701,102,o),
(701,200,qs),
(701,298,o),
(571,406,o),
(467,406,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
36 35 21 3 6 3 20 1 2 6 19 9 2 1 2 8 1 0 1 4 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
36 35 21 3 6 3 20 1 2 6 19 9 2 1 2 8 1 4 1 4 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 6 0 2 1 6 2 103 0 3 3 5 95 0 5 5 72 75 0 1 1 0 95 4 1 0 0 73 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
7 1 6 0 2 1 6 2 103 0 3 3 5 95 0 5 5 72 75 0 4 4 67 75 0 1 1 0 95 0 0 0 73 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 38 0 37 35 19 36 36 36 36 8 10 26 
CALL[ ]	/* CallFunction */";
};
width = 756;
}
);
note = uni1E9E;
unicode = 7838;
},
{
glyphname = uni1EA0;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = dotbelowcomb;
}
);
width = 717;
}
);
note = uni1EA0;
unicode = 7840;
},
{
glyphname = uni1EA1;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (587,0);
ref = dotbelowcomb;
}
);
width = 590;
}
);
note = uni1EA1;
unicode = 7841;
},
{
glyphname = uni1EA2;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = hookabovecomb.case;
}
);
width = 717;
}
);
note = uni1EA2;
unicode = 7842;
},
{
glyphname = uni1EA3;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = hookabovecomb;
}
);
width = 590;
}
);
note = uni1EA3;
unicode = 7843;
},
{
glyphname = uni1EA4;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0302.loclVIET;
},
{
pos = (811,234);
ref = acutecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EA4;
unicode = 7844;
},
{
glyphname = uni1EA5;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0302.loclVIET;
},
{
pos = (737,85);
ref = acutecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EA5;
unicode = 7845;
},
{
glyphname = uni1EA6;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0302.loclVIET;
},
{
pos = (811,234);
ref = gravecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EA6;
unicode = 7846;
},
{
glyphname = uni1EA7;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0302.loclVIET;
},
{
pos = (737,85);
ref = gravecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EA7;
unicode = 7847;
},
{
glyphname = uni1EA8;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0302.loclVIET;
},
{
pos = (779,224);
ref = hookabovecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EA8;
unicode = 7848;
},
{
glyphname = uni1EA9;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0302.loclVIET;
},
{
pos = (705,75);
ref = hookabovecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EA9;
unicode = 7849;
},
{
glyphname = uni1EAA;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0302.loclVIET;
},
{
pos = (659,268);
ref = tildecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EAA;
unicode = 7850;
},
{
glyphname = uni1EAB;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0302.loclVIET;
},
{
pos = (585,119);
ref = tildecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EAB;
unicode = 7851;
},
{
glyphname = uni1EAC;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = dotbelowcomb;
},
{
pos = (659,0);
ref = uni0302.case;
}
);
width = 717;
}
);
note = uni1EAC;
unicode = 7852;
},
{
glyphname = uni1EAD;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (587,0);
ref = dotbelowcomb;
},
{
pos = (585,1);
ref = uni0302;
}
);
width = 590;
}
);
note = uni1EAD;
unicode = 7853;
},
{
glyphname = uni1EAE;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0306.loclVIET;
},
{
pos = (659,263);
ref = acutecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EAE;
unicode = 7854;
},
{
glyphname = uni1EAF;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0306.loclVIET;
},
{
pos = (585,114);
ref = acutecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EAF;
unicode = 7855;
},
{
glyphname = uni1EB0;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0306.loclVIET;
},
{
pos = (659,263);
ref = gravecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EB0;
unicode = 7856;
},
{
glyphname = uni1EB1;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0306.loclVIET;
},
{
pos = (585,114);
ref = gravecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EB1;
unicode = 7857;
},
{
glyphname = uni1EB2;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0306.loclVIET;
},
{
pos = (659,244);
ref = hookabovecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EB2;
unicode = 7858;
},
{
glyphname = uni1EB3;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0306.loclVIET;
},
{
pos = (585,95);
ref = hookabovecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EB3;
unicode = 7859;
},
{
glyphname = uni1EB4;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,150);
ref = uni0306.loclVIET;
},
{
pos = (659,263);
ref = tildecomb.loclVIET;
}
);
width = 717;
}
);
note = uni1EB4;
unicode = 7860;
},
{
glyphname = uni1EB5;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (585,1);
ref = uni0306.loclVIET;
},
{
pos = (585,114);
ref = tildecomb.loclVIET;
}
);
width = 590;
}
);
note = uni1EB5;
unicode = 7861;
},
{
glyphname = uni1EB6;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,0);
ref = dotbelowcomb;
},
{
pos = (659,0);
ref = uni0306.case;
}
);
width = 717;
}
);
note = uni1EB6;
unicode = 7862;
},
{
glyphname = uni1EB7;
kernLeft = a;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (587,0);
ref = dotbelowcomb;
},
{
pos = (585,1);
ref = uni0306;
}
);
width = 590;
}
);
note = uni1EB7;
unicode = 7863;
},
{
glyphname = uni1EB8;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (668,0);
ref = dotbelowcomb;
}
);
width = 669;
}
);
note = uni1EB8;
unicode = 7864;
},
{
glyphname = uni1EB9;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,0);
ref = dotbelowcomb;
}
);
width = 604;
}
);
note = uni1EB9;
unicode = 7865;
},
{
glyphname = uni1EBA;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = hookabovecomb.case;
}
);
width = 669;
}
);
note = uni1EBA;
unicode = 7866;
},
{
glyphname = uni1EBB;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = hookabovecomb;
}
);
width = 604;
}
);
note = uni1EBB;
unicode = 7867;
},
{
glyphname = uni1EBC;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,0);
ref = tildecomb.case;
}
);
width = 669;
}
);
note = uni1EBC;
unicode = 7868;
},
{
glyphname = uni1EBD;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = tildecomb;
}
);
width = 604;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = uni1EBE;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,150);
ref = uni0302.loclVIET;
},
{
pos = (807,234);
ref = acutecomb.loclVIET;
}
);
width = 669;
}
);
note = uni1EBE;
unicode = 7870;
},
{
glyphname = uni1EBF;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0302.loclVIET;
},
{
pos = (755,85);
ref = acutecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EBF;
unicode = 7871;
},
{
glyphname = uni1EC0;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,150);
ref = uni0302.loclVIET;
},
{
pos = (807,234);
ref = gravecomb.loclVIET;
}
);
width = 669;
}
);
note = uni1EC0;
unicode = 7872;
},
{
glyphname = uni1EC1;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0302.loclVIET;
},
{
pos = (755,85);
ref = gravecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EC1;
unicode = 7873;
},
{
glyphname = uni1EC2;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,150);
ref = uni0302.loclVIET;
},
{
pos = (775,224);
ref = hookabovecomb.loclVIET;
}
);
width = 669;
}
);
note = uni1EC2;
unicode = 7874;
},
{
glyphname = uni1EC3;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0302.loclVIET;
},
{
pos = (723,75);
ref = hookabovecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EC3;
unicode = 7875;
},
{
glyphname = uni1EC4;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (655,150);
ref = uni0302.loclVIET;
},
{
pos = (655,268);
ref = tildecomb.loclVIET;
}
);
width = 669;
}
);
note = uni1EC4;
unicode = 7876;
},
{
glyphname = uni1EC5;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,1);
ref = uni0302.loclVIET;
},
{
pos = (603,119);
ref = tildecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EC5;
unicode = 7877;
},
{
glyphname = uni1EC6;
kernLeft = B;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (668,0);
ref = dotbelowcomb;
},
{
pos = (655,0);
ref = uni0302.case;
}
);
width = 669;
}
);
note = uni1EC6;
unicode = 7878;
},
{
glyphname = uni1EC7;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (603,0);
ref = dotbelowcomb;
},
{
pos = (603,1);
ref = uni0302;
}
);
width = 604;
}
);
note = uni1EC7;
unicode = 7879;
},
{
glyphname = uni1EC8;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = hookabovecomb.case;
}
);
width = 302;
}
);
note = uni1EC8;
unicode = 7880;
},
{
glyphname = uni1EC9;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = hookabovecomb;
}
);
width = 269;
}
);
note = uni1EC9;
unicode = 7881;
},
{
glyphname = uni1ECA;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (451,0);
ref = dotbelowcomb;
}
);
width = 302;
}
);
note = uni1ECA;
unicode = 7882;
},
{
glyphname = uni1ECB;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,0);
ref = uni0307.i;
},
{
pos = (435,0);
ref = dotbelowcomb;
}
);
width = 269;
}
);
note = uni1ECB;
unicode = 7883;
},
{
glyphname = uni1ECC;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = dotbelowcomb;
}
);
width = 839;
}
);
note = uni1ECC;
unicode = 7884;
},
{
glyphname = uni1ECD;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,0);
ref = dotbelowcomb;
}
);
width = 627;
}
);
note = uni1ECD;
unicode = 7885;
},
{
glyphname = uni1ECE;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = hookabovecomb.case;
}
);
width = 839;
}
);
note = uni1ECE;
unicode = 7886;
},
{
glyphname = uni1ECF;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = hookabovecomb;
}
);
width = 627;
}
);
note = uni1ECF;
unicode = 7887;
},
{
glyphname = uni1ED0;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0302.loclVIET;
},
{
pos = (872,234);
ref = acutecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1ED0;
unicode = 7888;
},
{
glyphname = uni1ED1;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0302.loclVIET;
},
{
pos = (765,85);
ref = acutecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1ED1;
unicode = 7889;
},
{
glyphname = uni1ED2;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0302.loclVIET;
},
{
pos = (872,234);
ref = gravecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1ED2;
unicode = 7890;
},
{
glyphname = uni1ED3;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0302.loclVIET;
},
{
pos = (765,85);
ref = gravecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1ED3;
unicode = 7891;
},
{
glyphname = uni1ED4;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0302.loclVIET;
},
{
pos = (840,224);
ref = hookabovecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1ED4;
unicode = 7892;
},
{
glyphname = uni1ED5;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0302.loclVIET;
},
{
pos = (733,75);
ref = hookabovecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1ED5;
unicode = 7893;
},
{
glyphname = uni1ED6;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,150);
ref = uni0302.loclVIET;
},
{
pos = (720,268);
ref = tildecomb.loclVIET;
}
);
width = 839;
}
);
note = uni1ED6;
unicode = 7894;
},
{
glyphname = uni1ED7;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,1);
ref = uni0302.loclVIET;
},
{
pos = (613,119);
ref = tildecomb.loclVIET;
}
);
width = 627;
}
);
note = uni1ED7;
unicode = 7895;
},
{
glyphname = uni1ED8;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (720,0);
ref = dotbelowcomb;
},
{
pos = (720,0);
ref = uni0302.case;
}
);
width = 839;
}
);
note = uni1ED8;
unicode = 7896;
},
{
glyphname = uni1ED9;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (613,0);
ref = dotbelowcomb;
},
{
pos = (613,1);
ref = uni0302;
}
);
width = 627;
}
);
note = uni1ED9;
unicode = 7897;
},
{
glyphname = uni1EDA;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = Ohorn;
},
{
pos = (720,0);
ref = acutecomb.case;
}
);
width = 839;
}
);
note = uni1EDA;
unicode = 7898;
},
{
glyphname = uni1EDB;
kernLeft = c;
kernRight = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn;
},
{
pos = (614,1);
ref = acutecomb;
}
);
width = 627;
}
);
note = uni1EDB;
unicode = 7899;
},
{
glyphname = uni1EDC;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = Ohorn;
},
{
pos = (720,0);
ref = gravecomb.case;
}
);
width = 839;
}
);
note = uni1EDC;
unicode = 7900;
},
{
glyphname = uni1EDD;
kernLeft = c;
kernRight = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn;
},
{
pos = (614,1);
ref = gravecomb;
}
);
width = 627;
}
);
note = uni1EDD;
unicode = 7901;
},
{
glyphname = uni1EDE;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = Ohorn;
},
{
pos = (720,0);
ref = hookabovecomb.case;
}
);
width = 839;
}
);
note = uni1EDE;
unicode = 7902;
},
{
glyphname = uni1EDF;
kernLeft = c;
kernRight = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn;
},
{
pos = (614,1);
ref = hookabovecomb;
}
);
width = 627;
}
);
note = uni1EDF;
unicode = 7903;
},
{
glyphname = uni1EE0;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = Ohorn;
},
{
pos = (720,0);
ref = tildecomb.case;
}
);
width = 839;
}
);
note = uni1EE0;
unicode = 7904;
},
{
glyphname = uni1EE1;
kernLeft = c;
kernRight = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn;
},
{
pos = (569,0);
ref = tildecomb;
scale = (0.9504,1);
}
);
width = 627;
}
);
note = uni1EE1;
unicode = 7905;
},
{
glyphname = uni1EE2;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = Ohorn;
},
{
pos = (720,0);
ref = dotbelowcomb;
}
);
width = 839;
}
);
note = uni1EE2;
unicode = 7906;
},
{
glyphname = uni1EE3;
kernLeft = c;
kernRight = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn;
},
{
pos = (614,0);
ref = dotbelowcomb;
}
);
width = 627;
}
);
note = uni1EE3;
unicode = 7907;
},
{
glyphname = uni1EE4;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = dotbelowcomb;
}
);
width = 792;
}
);
note = uni1EE4;
unicode = 7908;
},
{
glyphname = uni1EE5;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,0);
ref = dotbelowcomb;
}
);
width = 673;
}
);
note = uni1EE5;
unicode = 7909;
},
{
glyphname = uni1EE6;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (696,0);
ref = hookabovecomb.case;
}
);
width = 792;
}
);
note = uni1EE6;
unicode = 7910;
},
{
glyphname = uni1EE7;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = hookabovecomb;
}
);
width = 673;
}
);
note = uni1EE7;
unicode = 7911;
},
{
glyphname = uni1EE8;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (964,175);
ref = uni031B;
},
{
pos = (696,0);
ref = acutecomb.case;
}
);
width = 797;
}
);
note = uni1EE8;
unicode = 7912;
},
{
glyphname = uni1EE9;
kernLeft = u;
kernRight = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (839,1);
ref = uni031B;
},
{
pos = (634,1);
ref = acutecomb;
}
);
width = 679;
}
);
note = uni1EE9;
unicode = 7913;
},
{
glyphname = uni1EEA;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (964,175);
ref = uni031B;
},
{
pos = (696,0);
ref = gravecomb.case;
}
);
width = 797;
}
);
note = uni1EEA;
unicode = 7914;
},
{
glyphname = uni1EEB;
kernLeft = u;
kernRight = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (839,1);
ref = uni031B;
},
{
pos = (634,1);
ref = gravecomb;
}
);
width = 679;
}
);
note = uni1EEB;
unicode = 7915;
},
{
glyphname = uni1EEC;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (964,175);
ref = uni031B;
},
{
pos = (696,0);
ref = hookabovecomb.case;
}
);
width = 797;
}
);
note = uni1EEC;
unicode = 7916;
},
{
glyphname = uni1EED;
kernLeft = u;
kernRight = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (839,1);
ref = uni031B;
},
{
pos = (634,1);
ref = hookabovecomb;
}
);
width = 679;
}
);
note = uni1EED;
unicode = 7917;
},
{
glyphname = uni1EEE;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (964,175);
ref = uni031B;
},
{
pos = (696,0);
ref = tildecomb.case;
}
);
width = 797;
}
);
note = uni1EEE;
unicode = 7918;
},
{
glyphname = uni1EEF;
kernLeft = u;
kernRight = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (839,1);
ref = uni031B;
},
{
pos = (634,1);
ref = tildecomb;
}
);
width = 679;
}
);
note = uni1EEF;
unicode = 7919;
},
{
glyphname = uni1EF0;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (964,175);
ref = uni031B;
},
{
pos = (696,0);
ref = dotbelowcomb;
}
);
width = 797;
}
);
note = uni1EF0;
unicode = 7920;
},
{
glyphname = uni1EF1;
kernLeft = u;
kernRight = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (839,1);
ref = uni031B;
},
{
pos = (634,0);
ref = dotbelowcomb;
}
);
width = 679;
}
);
note = uni1EF1;
unicode = 7921;
},
{
glyphname = Ygrave;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = gravecomb.case;
}
);
width = 635;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = ygrave;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = gravecomb;
}
);
width = 542;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = uni1EF4;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = dotbelowcomb;
}
);
width = 635;
}
);
note = uni1EF4;
unicode = 7924;
},
{
glyphname = uni1EF5;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (688,0);
ref = dotbelowcomb;
}
);
width = 542;
}
);
note = uni1EF5;
unicode = 7925;
},
{
glyphname = uni1EF6;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = hookabovecomb.case;
}
);
width = 635;
}
);
note = uni1EF6;
unicode = 7926;
},
{
glyphname = uni1EF7;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = hookabovecomb;
}
);
width = 542;
}
);
note = uni1EF7;
unicode = 7927;
},
{
glyphname = uni1EF8;
kernLeft = Y;
kernRight = Y;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (617,0);
ref = tildecomb.case;
}
);
width = 635;
}
);
note = uni1EF8;
unicode = 7928;
},
{
glyphname = uni1EF9;
kernLeft = v;
kernRight = v;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (557,1);
ref = tildecomb;
}
);
width = 542;
}
);
note = uni1EF9;
unicode = 7929;
},
{
glyphname = uni1F00;
layers = (
{
layerId = m01;
shapes = (
{
pos = (414,92);
ref = uni1FBF;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F00;
unicode = 7936;
},
{
glyphname = uni1F01;
layers = (
{
layerId = m01;
shapes = (
{
pos = (413,88);
ref = uni1FFE;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F01;
unicode = 7937;
},
{
glyphname = uni1F02;
layers = (
{
layerId = m01;
shapes = (
{
pos = (296,52);
ref = uni1FCD;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F02;
unicode = 7938;
},
{
glyphname = uni1F03;
layers = (
{
layerId = m01;
shapes = (
{
pos = (292,48);
ref = uni1FDD;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F03;
unicode = 7939;
},
{
glyphname = uni1F04;
layers = (
{
layerId = m01;
shapes = (
{
pos = (320,50);
ref = uni1FCE;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F04;
unicode = 7940;
},
{
glyphname = uni1F05;
layers = (
{
layerId = m01;
shapes = (
{
pos = (291,46);
ref = uni1FDE;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F05;
unicode = 7941;
},
{
glyphname = uni1F06;
layers = (
{
layerId = m01;
shapes = (
{
pos = (428,88);
ref = uni1FCF;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F06;
unicode = 7942;
},
{
glyphname = uni1F07;
layers = (
{
layerId = m01;
shapes = (
{
pos = (406,86);
ref = uni1FDF;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F07;
unicode = 7943;
},
{
glyphname = uni1F08;
layers = (
{
layerId = m01;
shapes = (
{
pos = (279,-41);
ref = uni1FBF;
},
{
ref = Alpha;
}
);
width = 717;
}
);
note = uni1F08;
unicode = 7944;
},
{
glyphname = uni1F09;
layers = (
{
layerId = m01;
shapes = (
{
pos = (244,-45);
ref = uni1FFE;
},
{
ref = Alpha;
}
);
width = 717;
}
);
note = uni1F09;
unicode = 7945;
},
{
glyphname = uni1F0A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (179,-43);
ref = uni1FCD;
},
{
pos = (214,0);
ref = Alpha;
}
);
width = 931;
}
);
note = uni1F0A;
unicode = 7946;
},
{
glyphname = uni1F0B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (214,0);
ref = Alpha;
},
{
pos = (203,-35);
ref = uni1FDD;
}
);
width = 931;
}
);
note = uni1F0B;
unicode = 7947;
},
{
glyphname = uni1F0C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (214,0);
ref = Alpha;
},
{
pos = (205,-49);
ref = uni1FCE;
}
);
width = 931;
}
);
note = uni1F0C;
unicode = 7948;
},
{
glyphname = uni1F0D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (214,0);
ref = Alpha;
},
{
pos = (220,-45);
ref = uni1FDE;
}
);
width = 931;
}
);
note = uni1F0D;
unicode = 7949;
},
{
glyphname = uni1F0E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (286,-125);
ref = uni1FCF;
},
{
pos = (120,0);
ref = Alpha;
}
);
width = 837;
}
);
note = uni1F0E;
unicode = 7950;
},
{
glyphname = uni1F0F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (120,0);
ref = Alpha;
},
{
pos = (280,-127);
ref = uni1FDF;
}
);
width = 837;
}
);
note = uni1F0F;
unicode = 7951;
},
{
glyphname = uni1F10;
layers = (
{
layerId = m01;
shapes = (
{
pos = (377,96);
ref = uni1FBF;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F10;
unicode = 7952;
},
{
glyphname = uni1F11;
layers = (
{
layerId = m01;
shapes = (
{
pos = (376,92);
ref = uni1FFE;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F11;
unicode = 7953;
},
{
glyphname = uni1F12;
layers = (
{
layerId = m01;
shapes = (
{
pos = (268,58);
ref = uni1FCD;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F12;
unicode = 7954;
},
{
glyphname = uni1F13;
layers = (
{
layerId = m01;
shapes = (
{
pos = (228,64);
ref = uni1FDD;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F13;
unicode = 7955;
},
{
glyphname = uni1F14;
layers = (
{
layerId = m01;
shapes = (
{
pos = (286,66);
ref = uni1FCE;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F14;
unicode = 7956;
},
{
glyphname = uni1F15;
layers = (
{
layerId = m01;
shapes = (
{
pos = (259,62);
ref = uni1FDE;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F15;
unicode = 7957;
},
{
glyphname = uni1F18;
layers = (
{
layerId = m01;
shapes = (
{
pos = (211,-41);
ref = uni1FBF;
},
{
pos = (104,0);
ref = Epsilon;
}
);
width = 773;
}
);
note = uni1F18;
unicode = 7960;
},
{
glyphname = uni1F19;
layers = (
{
layerId = m01;
shapes = (
{
pos = (210,-45);
ref = uni1FFE;
},
{
pos = (104,0);
ref = Epsilon;
}
);
width = 773;
}
);
note = uni1F19;
unicode = 7961;
},
{
glyphname = uni1F1A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (191,-47);
ref = uni1FCD;
},
{
pos = (308,0);
ref = Epsilon;
}
);
width = 977;
}
);
note = uni1F1A;
unicode = 7962;
},
{
glyphname = uni1F1B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (308,0);
ref = Epsilon;
},
{
pos = (165,-41);
ref = uni1FDD;
}
);
width = 977;
}
);
note = uni1F1B;
unicode = 7963;
},
{
glyphname = uni1F1C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (189,-47);
ref = uni1FCE;
},
{
pos = (308,0);
ref = Epsilon;
}
);
width = 977;
}
);
note = uni1F1C;
unicode = 7964;
},
{
glyphname = uni1F1D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (188,-51);
ref = uni1FDE;
},
{
pos = (308,0);
ref = Epsilon;
}
);
width = 977;
}
);
note = uni1F1D;
unicode = 7965;
},
{
glyphname = uni1F20;
layers = (
{
layerId = m01;
shapes = (
{
pos = (473,92);
ref = uni1FBF;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F20;
unicode = 7968;
},
{
glyphname = uni1F21;
layers = (
{
layerId = m01;
shapes = (
{
pos = (472,88);
ref = uni1FFE;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F21;
unicode = 7969;
},
{
glyphname = uni1F22;
layers = (
{
layerId = m01;
shapes = (
{
pos = (356,78);
ref = uni1FCD;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F22;
unicode = 7970;
},
{
glyphname = uni1F23;
layers = (
{
layerId = m01;
shapes = (
{
pos = (318,86);
ref = uni1FDD;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F23;
unicode = 7971;
},
{
glyphname = uni1F24;
layers = (
{
layerId = m01;
shapes = (
{
pos = (362,76);
ref = uni1FCE;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F24;
unicode = 7972;
},
{
glyphname = uni1F25;
layers = (
{
layerId = m01;
shapes = (
{
pos = (355,94);
ref = uni1FDE;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F25;
unicode = 7973;
},
{
glyphname = uni1F26;
layers = (
{
layerId = m01;
shapes = (
{
pos = (463,88);
ref = uni1FCF;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F26;
unicode = 7974;
},
{
glyphname = uni1F27;
layers = (
{
layerId = m01;
shapes = (
{
pos = (455,84);
ref = uni1FDF;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F27;
unicode = 7975;
},
{
glyphname = uni1F28;
layers = (
{
layerId = m01;
shapes = (
{
pos = (195,-41);
ref = uni1FBF;
},
{
pos = (88,0);
ref = Eta;
}
);
width = 901;
}
);
note = uni1F28;
unicode = 7976;
},
{
glyphname = uni1F29;
layers = (
{
layerId = m01;
shapes = (
{
pos = (194,-45);
ref = uni1FFE;
},
{
pos = (88,0);
ref = Eta;
}
);
width = 901;
}
);
note = uni1F29;
unicode = 7977;
},
{
glyphname = uni1F2A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (213,-49);
ref = uni1FCD;
},
{
pos = (350,0);
ref = Eta;
}
);
width = 1163;
}
);
note = uni1F2A;
unicode = 7978;
},
{
glyphname = uni1F2B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (207,-50);
ref = uni1FDD;
},
{
pos = (350,-3);
ref = Eta;
}
);
width = 1163;
}
);
note = uni1F2B;
unicode = 7979;
},
{
glyphname = uni1F2C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (350,-3);
ref = Eta;
},
{
pos = (187,-41);
ref = uni1FCE;
}
);
width = 1163;
}
);
note = uni1F2C;
unicode = 7980;
},
{
glyphname = uni1F2D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (350,-3);
ref = Eta;
},
{
pos = (174,-41);
ref = uni1FDE;
}
);
width = 1163;
}
);
note = uni1F2D;
unicode = 7981;
},
{
glyphname = uni1F2E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (310,-128);
ref = uni1FCF;
},
{
pos = (294,0);
ref = Eta;
}
);
width = 1107;
}
);
note = uni1F2E;
unicode = 7982;
},
{
glyphname = uni1F2F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (301,-155);
ref = uni1FDF;
},
{
pos = (294,0);
ref = Eta;
}
);
width = 1107;
}
);
note = uni1F2F;
unicode = 7983;
},
{
glyphname = uni1F30;
layers = (
{
layerId = m01;
shapes = (
{
pos = (258,92);
ref = uni1FBF;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F30;
unicode = 7984;
},
{
glyphname = uni1F31;
layers = (
{
layerId = m01;
shapes = (
{
pos = (240,88);
ref = uni1FFE;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F31;
unicode = 7985;
},
{
glyphname = uni1F32;
layers = (
{
layerId = m01;
shapes = (
{
pos = (168,66);
ref = uni1FCD;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F32;
unicode = 7986;
},
{
glyphname = uni1F33;
layers = (
{
layerId = m01;
shapes = (
{
pos = (171,54);
ref = uni1FDD;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F33;
unicode = 7987;
},
{
glyphname = uni1F34;
layers = (
{
layerId = m01;
shapes = (
{
pos = (186,51);
ref = uni1FCE;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F34;
unicode = 7988;
},
{
glyphname = uni1F35;
layers = (
{
layerId = m01;
shapes = (
{
pos = (167,51);
ref = uni1FDE;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F35;
unicode = 7989;
},
{
glyphname = uni1F36;
layers = (
{
layerId = m01;
shapes = (
{
pos = (260,75);
ref = uni1FCF;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F36;
unicode = 7990;
},
{
glyphname = uni1F37;
layers = (
{
layerId = m01;
shapes = (
{
pos = (230,51);
ref = uni1FDF;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F37;
unicode = 7991;
},
{
glyphname = uni1F38;
layers = (
{
layerId = m01;
shapes = (
{
pos = (205,-41);
ref = uni1FBF;
},
{
pos = (98,0);
ref = Iota;
}
);
width = 400;
}
);
note = uni1F38;
unicode = 7992;
},
{
glyphname = uni1F39;
layers = (
{
layerId = m01;
shapes = (
{
pos = (204,-45);
ref = uni1FFE;
},
{
pos = (98,0);
ref = Iota;
}
);
width = 400;
}
);
note = uni1F39;
unicode = 7993;
},
{
glyphname = uni1F3A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (193,-47);
ref = uni1FCD;
},
{
pos = (328,0);
ref = Iota;
}
);
width = 630;
}
);
note = uni1F3A;
unicode = 7994;
},
{
glyphname = uni1F3B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (199,-47);
ref = uni1FDD;
},
{
pos = (328,0);
ref = Iota;
}
);
width = 630;
}
);
note = uni1F3B;
unicode = 7995;
},
{
glyphname = uni1F3C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (187,-55);
ref = uni1FCE;
},
{
pos = (328,0);
ref = Iota;
}
);
width = 630;
}
);
note = uni1F3C;
unicode = 7996;
},
{
glyphname = uni1F3D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (192,-51);
ref = uni1FDE;
},
{
pos = (328,0);
ref = Iota;
}
);
width = 630;
}
);
note = uni1F3D;
unicode = 7997;
},
{
glyphname = uni1F3E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (306,-141);
ref = uni1FCF;
},
{
pos = (276,0);
ref = Iota;
}
);
width = 578;
}
);
note = uni1F3E;
unicode = 7998;
},
{
glyphname = uni1F3F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (306,-155);
ref = uni1FDF;
},
{
pos = (276,0);
ref = Iota;
}
);
width = 578;
}
);
note = uni1F3F;
unicode = 7999;
},
{
glyphname = uni1F40;
layers = (
{
layerId = m01;
shapes = (
{
pos = (420,92);
ref = uni1FBF;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F40;
unicode = 8000;
},
{
glyphname = uni1F41;
layers = (
{
layerId = m01;
shapes = (
{
pos = (419,88);
ref = uni1FFE;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F41;
unicode = 8001;
},
{
glyphname = uni1F42;
layers = (
{
layerId = m01;
shapes = (
{
pos = (281,84);
ref = uni1FCD;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F42;
unicode = 8002;
},
{
glyphname = uni1F43;
layers = (
{
layerId = m01;
shapes = (
{
pos = (289,80);
ref = uni1FDD;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F43;
unicode = 8003;
},
{
glyphname = uni1F44;
layers = (
{
layerId = m01;
shapes = (
{
pos = (314,76);
ref = uni1FCE;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F44;
unicode = 8004;
},
{
glyphname = uni1F45;
layers = (
{
layerId = m01;
shapes = (
{
pos = (326,72);
ref = uni1FDE;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F45;
unicode = 8005;
},
{
glyphname = uni1F48;
layers = (
{
layerId = m01;
shapes = (
{
pos = (217,-45);
ref = uni1FBF;
},
{
pos = (112,0);
ref = Omicron;
}
);
width = 951;
}
);
note = uni1F48;
unicode = 8008;
},
{
glyphname = uni1F49;
layers = (
{
layerId = m01;
shapes = (
{
pos = (188,-49);
ref = uni1FFE;
},
{
pos = (112,0);
ref = Omicron;
}
);
width = 951;
}
);
note = uni1F49;
unicode = 8009;
},
{
glyphname = uni1F4A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (215,-53);
ref = uni1FCD;
},
{
pos = (386,0);
ref = Omicron;
}
);
width = 1225;
}
);
note = uni1F4A;
unicode = 8010;
},
{
glyphname = uni1F4B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (213,-59);
ref = uni1FDD;
},
{
pos = (386,0);
ref = Omicron;
}
);
width = 1225;
}
);
note = uni1F4B;
unicode = 8011;
},
{
glyphname = uni1F4C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (247,-61);
ref = uni1FCE;
},
{
pos = (386,0);
ref = Omicron;
}
);
width = 1225;
}
);
note = uni1F4C;
unicode = 8012;
},
{
glyphname = uni1F4D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (248,-55);
ref = uni1FDE;
},
{
pos = (386,0);
ref = Omicron;
}
);
width = 1225;
}
);
note = uni1F4D;
unicode = 8013;
},
{
glyphname = uni1F50;
layers = (
{
layerId = m01;
shapes = (
{
pos = (430,92);
ref = uni1FBF;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F50;
unicode = 8016;
},
{
glyphname = uni1F51;
layers = (
{
layerId = m01;
shapes = (
{
pos = (430,88);
ref = uni1FFE;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F51;
unicode = 8017;
},
{
glyphname = uni1F52;
layers = (
{
layerId = m01;
shapes = (
{
pos = (310,87);
ref = uni1FCD;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F52;
unicode = 8018;
},
{
glyphname = uni1F53;
layers = (
{
layerId = m01;
shapes = (
{
pos = (298,81);
ref = uni1FDD;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F53;
unicode = 8019;
},
{
glyphname = uni1F54;
layers = (
{
layerId = m01;
shapes = (
{
pos = (349,72);
ref = uni1FCE;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F54;
unicode = 8020;
},
{
glyphname = uni1F55;
layers = (
{
layerId = m01;
shapes = (
{
pos = (330,72);
ref = uni1FDE;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F55;
unicode = 8021;
},
{
glyphname = uni1F56;
layers = (
{
layerId = m01;
shapes = (
{
pos = (442,75);
ref = uni1FCF;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F56;
unicode = 8022;
},
{
glyphname = uni1F57;
layers = (
{
layerId = m01;
shapes = (
{
pos = (424,93);
ref = uni1FDF;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F57;
unicode = 8023;
},
{
glyphname = uni1F59;
layers = (
{
layerId = m01;
shapes = (
{
pos = (203,-45);
ref = uni1FFE;
},
{
pos = (210,0);
ref = Upsilon;
}
);
width = 845;
}
);
note = uni1F59;
unicode = 8025;
},
{
glyphname = uni1F5B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (196,-53);
ref = uni1FDD;
},
{
pos = (354,0);
ref = Upsilon;
}
);
width = 989;
}
);
note = uni1F5B;
unicode = 8027;
},
{
glyphname = uni1F5D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (196,-53);
ref = uni1FDE;
},
{
pos = (429,0);
ref = Upsilon;
}
);
width = 1064;
}
);
note = uni1F5D;
unicode = 8029;
},
{
glyphname = uni1F5F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (290,-140);
ref = uni1FDF;
},
{
pos = (330,0);
ref = Upsilon;
}
);
width = 965;
}
);
note = uni1F5F;
unicode = 8031;
},
{
glyphname = uni1F60;
layers = (
{
layerId = m01;
shapes = (
{
pos = (531,94);
ref = uni1FBF;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F60;
unicode = 8032;
},
{
glyphname = uni1F61;
layers = (
{
layerId = m01;
shapes = (
{
pos = (530,90);
ref = uni1FFE;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F61;
unicode = 8033;
},
{
glyphname = uni1F62;
layers = (
{
layerId = m01;
shapes = (
{
pos = (417,100);
ref = uni1FCD;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F62;
unicode = 8034;
},
{
glyphname = uni1F63;
layers = (
{
layerId = m01;
shapes = (
{
pos = (401,85);
ref = uni1FDD;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F63;
unicode = 8035;
},
{
glyphname = uni1F64;
layers = (
{
layerId = m01;
shapes = (
{
pos = (446,79);
ref = uni1FCE;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F64;
unicode = 8036;
},
{
glyphname = uni1F65;
layers = (
{
layerId = m01;
shapes = (
{
pos = (454,76);
ref = uni1FDE;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F65;
unicode = 8037;
},
{
glyphname = uni1F66;
layers = (
{
layerId = m01;
shapes = (
{
pos = (542,86);
ref = uni1FCF;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F66;
unicode = 8038;
},
{
glyphname = uni1F67;
layers = (
{
layerId = m01;
shapes = (
{
pos = (509,74);
ref = uni1FDF;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F67;
unicode = 8039;
},
{
glyphname = uni1F68;
layers = (
{
layerId = m01;
shapes = (
{
pos = (207,-59);
ref = uni1FBF;
},
{
pos = (87,0);
ref = uni03A9;
}
);
width = 989;
}
);
note = uni1F68;
unicode = 8040;
},
{
glyphname = uni1F69;
layers = (
{
layerId = m01;
shapes = (
{
pos = (182,-69);
ref = uni1FFE;
},
{
pos = (87,0);
ref = uni03A9;
}
);
width = 989;
}
);
note = uni1F69;
unicode = 8041;
},
{
glyphname = uni1F6A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (190,-71);
ref = uni1FCD;
},
{
pos = (366,0);
ref = uni03A9;
}
);
width = 1268;
}
);
note = uni1F6A;
unicode = 8042;
},
{
glyphname = uni1F6B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (193,-65);
ref = uni1FDD;
},
{
pos = (366,0);
ref = uni03A9;
}
);
width = 1268;
}
);
note = uni1F6B;
unicode = 8043;
},
{
glyphname = uni1F6C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (206,-56);
ref = uni1FCE;
},
{
pos = (300,0);
ref = uni03A9;
}
);
width = 1202;
}
);
note = uni1F6C;
unicode = 8044;
},
{
glyphname = uni1F6D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (205,-59);
ref = uni1FDE;
},
{
pos = (300,0);
ref = uni03A9;
}
);
width = 1202;
}
);
note = uni1F6D;
unicode = 8045;
},
{
glyphname = uni1F6E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (296,-143);
ref = uni1FCF;
},
{
pos = (282,0);
ref = uni03A9;
}
);
width = 1184;
}
);
note = uni1F6E;
unicode = 8046;
},
{
glyphname = uni1F6F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (293,-155);
ref = uni1FDF;
},
{
pos = (282,0);
ref = uni03A9;
}
);
width = 1184;
}
);
note = uni1F6F;
unicode = 8047;
},
{
glyphname = uni1F70;
layers = (
{
layerId = m01;
shapes = (
{
pos = (582,68);
ref = uni1FEF;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1F70;
unicode = 8048;
},
{
glyphname = uni1F71;
layers = (
{
layerId = m01;
shapes = (
{
ref = alpha;
},
{
pos = (600,81);
ref = tonos;
}
);
width = 678;
}
);
note = uni1F71;
unicode = 8049;
},
{
glyphname = uni1F72;
layers = (
{
layerId = m01;
shapes = (
{
pos = (562,68);
ref = uni1FEF;
},
{
ref = epsilon;
}
);
width = 534;
}
);
note = uni1F72;
unicode = 8050;
},
{
glyphname = uni1F73;
layers = (
{
layerId = m01;
shapes = (
{
ref = epsilon;
},
{
pos = (577,81);
ref = tonos;
}
);
width = 534;
}
);
note = uni1F73;
unicode = 8051;
},
{
glyphname = uni1F74;
layers = (
{
layerId = m01;
shapes = (
{
pos = (613,68);
ref = uni1FEF;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1F74;
unicode = 8052;
},
{
glyphname = uni1F75;
layers = (
{
layerId = m01;
shapes = (
{
ref = eta;
},
{
pos = (600,81);
ref = tonos;
}
);
width = 677;
}
);
note = uni1F75;
unicode = 8053;
},
{
glyphname = uni1F76;
layers = (
{
layerId = m01;
shapes = (
{
pos = (410,68);
ref = uni1FEF;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F76;
unicode = 8054;
},
{
glyphname = uni1F77;
layers = (
{
layerId = m01;
shapes = (
{
pos = (464,81);
ref = tonos;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1F77;
unicode = 8055;
},
{
glyphname = uni1F78;
layers = (
{
layerId = m01;
shapes = (
{
pos = (595,68);
ref = uni1FEF;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F78;
unicode = 8056;
},
{
glyphname = uni1F79;
layers = (
{
layerId = m01;
shapes = (
{
pos = (634,81);
ref = tonos;
},
{
ref = omicron;
}
);
width = 627;
}
);
note = uni1F79;
unicode = 8057;
},
{
glyphname = uni1F7A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (616,68);
ref = uni1FEF;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F7A;
unicode = 8058;
},
{
glyphname = uni1F7B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,81);
ref = tonos;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1F7B;
unicode = 8059;
},
{
glyphname = uni1F7C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (707,68);
ref = uni1FEF;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F7C;
unicode = 8060;
},
{
glyphname = uni1F7D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (745,81);
ref = tonos;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1F7D;
unicode = 8061;
},
{
glyphname = uni1F80;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F00;
}
);
width = 678;
}
);
note = uni1F80;
unicode = 8064;
},
{
glyphname = uni1F81;
layers = (
{
layerId = m01;
shapes = (
{
pos = (550,-79);
ref = uni0345;
},
{
ref = uni1F01;
}
);
width = 678;
}
);
note = uni1F81;
unicode = 8065;
},
{
glyphname = uni1F82;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F02;
}
);
width = 678;
}
);
note = uni1F82;
unicode = 8066;
},
{
glyphname = uni1F83;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F03;
}
);
width = 678;
}
);
note = uni1F83;
unicode = 8067;
},
{
glyphname = uni1F84;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F04;
}
);
width = 678;
}
);
note = uni1F84;
unicode = 8068;
},
{
glyphname = uni1F85;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F05;
}
);
width = 678;
}
);
note = uni1F85;
unicode = 8069;
},
{
glyphname = uni1F86;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F06;
}
);
width = 678;
}
);
note = uni1F86;
unicode = 8070;
},
{
glyphname = uni1F87;
layers = (
{
layerId = m01;
shapes = (
{
pos = (556,-79);
ref = uni0345;
},
{
ref = uni1F07;
}
);
width = 678;
}
);
note = uni1F87;
unicode = 8071;
},
{
glyphname = uni1F88;
layers = (
{
layerId = m01;
shapes = (
{
pos = (706,1);
ref = uni1FBE;
},
{
ref = uni1F08;
}
);
width = 1140;
}
);
note = uni1F88;
unicode = 8072;
},
{
glyphname = uni1F89;
layers = (
{
layerId = m01;
shapes = (
{
pos = (706,1);
ref = uni1FBE;
},
{
ref = uni1F09;
}
);
width = 1140;
}
);
note = uni1F89;
unicode = 8073;
},
{
glyphname = uni1F8A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (920,1);
ref = uni1FBE;
},
{
ref = uni1F0A;
}
);
width = 1378;
}
);
note = uni1F8A;
unicode = 8074;
},
{
glyphname = uni1F8B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (920,1);
ref = uni1FBE;
},
{
ref = uni1F0B;
}
);
width = 1378;
}
);
note = uni1F8B;
unicode = 8075;
},
{
glyphname = uni1F8C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (920,1);
ref = uni1FBE;
},
{
ref = uni1F0C;
}
);
width = 1378;
}
);
note = uni1F8C;
unicode = 8076;
},
{
glyphname = uni1F8D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (920,1);
ref = uni1FBE;
},
{
ref = uni1F0D;
}
);
width = 1378;
}
);
note = uni1F8D;
unicode = 8077;
},
{
glyphname = uni1F8E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (826,1);
ref = uni1FBE;
},
{
ref = uni1F0E;
}
);
width = 1244;
}
);
note = uni1F8E;
unicode = 8078;
},
{
glyphname = uni1F8F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (826,1);
ref = uni1FBE;
},
{
ref = uni1F0F;
}
);
width = 1244;
}
);
note = uni1F8F;
unicode = 8079;
},
{
glyphname = uni1F90;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F20;
}
);
width = 677;
}
);
note = uni1F90;
unicode = 8080;
},
{
glyphname = uni1F91;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F21;
}
);
width = 677;
}
);
note = uni1F91;
unicode = 8081;
},
{
glyphname = uni1F92;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F22;
}
);
width = 677;
}
);
note = uni1F92;
unicode = 8082;
},
{
glyphname = uni1F93;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F23;
}
);
width = 677;
}
);
note = uni1F93;
unicode = 8083;
},
{
glyphname = uni1F94;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F24;
}
);
width = 677;
}
);
note = uni1F94;
unicode = 8084;
},
{
glyphname = uni1F95;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F25;
}
);
width = 677;
}
);
note = uni1F95;
unicode = 8085;
},
{
glyphname = uni1F96;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F26;
}
);
width = 677;
}
);
note = uni1F96;
unicode = 8086;
},
{
glyphname = uni1F97;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F27;
}
);
width = 677;
}
);
note = uni1F97;
unicode = 8087;
},
{
glyphname = uni1F98;
layers = (
{
layerId = m01;
shapes = (
{
pos = (778,1);
ref = uni1FBE;
},
{
ref = uni1F28;
}
);
width = 1195;
}
);
note = uni1F98;
unicode = 8088;
},
{
glyphname = uni1F99;
layers = (
{
layerId = m01;
shapes = (
{
pos = (778,1);
ref = uni1FBE;
},
{
ref = uni1F29;
}
);
width = 1195;
}
);
note = uni1F99;
unicode = 8089;
},
{
glyphname = uni1F9A;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1040,1);
ref = uni1FBE;
},
{
ref = uni1F2A;
}
);
width = 1478;
}
);
note = uni1F9A;
unicode = 8090;
},
{
glyphname = uni1F9B;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1038,1);
ref = uni1FBE;
},
{
ref = uni1F2B;
}
);
width = 1478;
}
);
note = uni1F9B;
unicode = 8091;
},
{
glyphname = uni1F9C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1038,1);
ref = uni1FBE;
},
{
ref = uni1F2C;
}
);
width = 1478;
}
);
note = uni1F9C;
unicode = 8092;
},
{
glyphname = uni1F9D;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1038,1);
ref = uni1FBE;
},
{
ref = uni1F2D;
}
);
width = 1478;
}
);
note = uni1F9D;
unicode = 8093;
},
{
glyphname = uni1F9E;
layers = (
{
layerId = m01;
shapes = (
{
pos = (984,1);
ref = uni1FBE;
},
{
ref = uni1F2E;
}
);
width = 1415;
}
);
note = uni1F9E;
unicode = 8094;
},
{
glyphname = uni1F9F;
layers = (
{
layerId = m01;
shapes = (
{
pos = (978,1);
ref = uni1FBE;
},
{
ref = uni1F2F;
}
);
width = 1415;
}
);
note = uni1F9F;
unicode = 8095;
},
{
glyphname = uni1FA0;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F60;
}
);
width = 862;
}
);
note = uni1FA0;
unicode = 8096;
},
{
glyphname = uni1FA1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F61;
}
);
width = 862;
}
);
note = uni1FA1;
unicode = 8097;
},
{
glyphname = uni1FA2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F62;
}
);
width = 862;
}
);
note = uni1FA2;
unicode = 8098;
},
{
glyphname = uni1FA3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F63;
}
);
width = 862;
}
);
note = uni1FA3;
unicode = 8099;
},
{
glyphname = uni1FA4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F64;
}
);
width = 862;
}
);
note = uni1FA4;
unicode = 8100;
},
{
glyphname = uni1FA5;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F65;
}
);
width = 862;
}
);
note = uni1FA5;
unicode = 8101;
},
{
glyphname = uni1FA6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F66;
}
);
width = 862;
}
);
note = uni1FA6;
unicode = 8102;
},
{
glyphname = uni1FA7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F67;
}
);
width = 862;
}
);
note = uni1FA7;
unicode = 8103;
},
{
glyphname = uni1FA8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (968,1);
ref = uni1FBE;
},
{
ref = uni1F68;
}
);
width = 1376;
}
);
note = uni1FA8;
unicode = 8104;
},
{
glyphname = uni1FA9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (971,1);
ref = uni1FBE;
},
{
ref = uni1F69;
}
);
width = 1376;
}
);
note = uni1FA9;
unicode = 8105;
},
{
glyphname = uni1FAA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1250,1);
ref = uni1FBE;
},
{
ref = uni1F6A;
}
);
width = 1664;
}
);
note = uni1FAA;
unicode = 8106;
},
{
glyphname = uni1FAB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1250,1);
ref = uni1FBE;
},
{
ref = uni1F6B;
}
);
width = 1664;
}
);
note = uni1FAB;
unicode = 8107;
},
{
glyphname = uni1FAC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1184,1);
ref = uni1FBE;
},
{
ref = uni1F6C;
}
);
width = 1600;
}
);
note = uni1FAC;
unicode = 8108;
},
{
glyphname = uni1FAD;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1184,1);
ref = uni1FBE;
},
{
ref = uni1F6D;
}
);
width = 1600;
}
);
note = uni1FAD;
unicode = 8109;
},
{
glyphname = uni1FAE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1166,1);
ref = uni1FBE;
},
{
ref = uni1F6E;
}
);
width = 1590;
}
);
note = uni1FAE;
unicode = 8110;
},
{
glyphname = uni1FAF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1166,1);
ref = uni1FBE;
},
{
ref = uni1F6F;
}
);
width = 1590;
}
);
note = uni1FAF;
unicode = 8111;
},
{
glyphname = uni1FB0;
layers = (
{
layerId = m01;
shapes = (
{
pos = (624,50);
ref = uni0306;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1FB0;
unicode = 8112;
},
{
glyphname = uni1FB1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (618,20);
ref = uni0304;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1FB1;
unicode = 8113;
},
{
glyphname = uni1FB2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (550,-79);
ref = uni0345;
},
{
ref = uni1F70;
}
);
width = 678;
}
);
note = uni1FB2;
unicode = 8114;
},
{
glyphname = uni1FB3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (550,-79);
ref = uni0345;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1FB3;
unicode = 8115;
},
{
glyphname = uni1FB4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (550,-79);
ref = uni0345;
},
{
ref = uni1F71;
}
);
width = 678;
}
);
note = uni1FB4;
unicode = 8116;
},
{
glyphname = uni1FB6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (608,-17);
ref = uni1FC0;
},
{
ref = alpha;
}
);
width = 678;
}
);
note = uni1FB6;
unicode = 8118;
},
{
glyphname = uni1FB7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (550,-79);
ref = uni0345;
},
{
ref = uni1FB6;
}
);
width = 678;
}
);
note = uni1FB7;
unicode = 8119;
},
{
glyphname = uni1FB8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (658,164);
ref = uni0306;
},
{
ref = Alpha;
}
);
width = 717;
}
);
note = uni1FB8;
unicode = 8120;
},
{
glyphname = uni1FB9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (658,121);
ref = uni0304;
},
{
ref = Alpha;
}
);
width = 717;
}
);
note = uni1FB9;
unicode = 8121;
},
{
glyphname = uni1FBA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (506,-25);
ref = uni1FEF;
},
{
pos = (80,0);
ref = Alpha;
}
);
width = 797;
}
);
note = uni1FBA;
unicode = 8122;
},
{
glyphname = uni1FBB;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (384,-29);
ref = tonos;
}
);
width = 717;
}
);
note = uni1FBB;
unicode = 8123;
},
{
glyphname = uni1FBC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (706,1);
ref = uni1FBE;
},
{
ref = Alpha;
}
);
width = 717;
}
);
note = uni1FBC;
unicode = 8124;
},
{
glyphname = uni1FBD;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-213,0);
ref = quoteright;
}
);
width = 0;
}
);
note = uni1FBD;
unicode = 8125;
},
{
glyphname = uni1FBE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(139,39,qs),
(179,-1,o),
(253,-1,qs),
(285,-1,o),
(344,18,o),
(364,36,q),
(339,87,l),
(324,74,o),
(283,60,o),
(261,60,qs),
(217,60,o),
(170,109,o),
(170,156,qs),
(170,526,l),
(99,526,l),
(99,157,o),
(99,157,q),
(99,80,o)
);
}
);
width = 404;
}
);
note = uni1FBE;
unicode = 8126;
},
{
glyphname = uni1FBF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-213,0);
ref = quoteright;
}
);
width = 0;
}
);
note = uni1FBF;
unicode = 8127;
},
{
glyphname = uni1FC0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-402,607,l),
(-401,645,o),
(-343,692,o),
(-300,692,qs),
(-257,692,o),
(-199,645,o),
(-198,607,q),
(-148,607,l),
(-150,666,o),
(-236,735,o),
(-300,735,qs),
(-364,735,o),
(-450,666,o),
(-452,607,q)
);
}
);
width = 0;
}
);
note = uni1FC0;
unicode = 8128;
},
{
glyphname = uni1FC1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (600,169);
ref = uni1FC0;
},
{
ref = dieresis;
}
);
width = 600;
}
);
note = uni1FC1;
unicode = 8129;
},
{
glyphname = uni1FC2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F74;
}
);
width = 677;
}
);
note = uni1FC2;
unicode = 8130;
},
{
glyphname = uni1FC3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1FC3;
unicode = 8131;
},
{
glyphname = uni1FC4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1F75;
}
);
width = 677;
}
);
note = uni1FC4;
unicode = 8132;
},
{
glyphname = uni1FC6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (667,-17);
ref = uni1FC0;
},
{
ref = eta;
}
);
width = 677;
}
);
note = uni1FC6;
unicode = 8134;
},
{
glyphname = uni1FC7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (398,-83);
ref = uni0345;
},
{
ref = uni1FC6;
}
);
width = 677;
}
);
note = uni1FC7;
unicode = 8135;
},
{
glyphname = uni1FC8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (517,-25);
ref = uni1FEF;
},
{
pos = (228,0);
ref = Epsilon;
}
);
width = 897;
}
);
note = uni1FC8;
unicode = 8136;
},
{
glyphname = uni1FC9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (168,0);
ref = E;
}
);
width = 837;
}
);
note = uni1FC9;
unicode = 8137;
},
{
glyphname = uni1FCA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (521,-29);
ref = uni1FEF;
},
{
pos = (232,0);
ref = Eta;
}
);
width = 1045;
}
);
note = uni1FCA;
unicode = 8138;
},
{
glyphname = uni1FCB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (174,0);
ref = H;
}
);
width = 961;
}
);
note = uni1FCB;
unicode = 8139;
},
{
glyphname = uni1FCC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (690,1);
ref = uni1FBE;
},
{
ref = Eta;
}
);
width = 813;
}
);
note = uni1FCC;
unicode = 8140;
},
{
glyphname = uni1FCD;
layers = (
{
layerId = m01;
shapes = (
{
pos = (451,16);
ref = uni1FEF;
},
{
ref = uni1FBF;
}
);
width = 0;
}
);
note = uni1FCD;
unicode = 8141;
},
{
glyphname = uni1FCE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (349,16);
ref = uni1FFD;
},
{
ref = uni1FBF;
}
);
width = 0;
}
);
note = uni1FCE;
unicode = 8142;
},
{
glyphname = uni1FCF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (194,107);
ref = uni1FC0;
},
{
ref = uni1FBF;
}
);
width = 0;
}
);
note = uni1FCF;
unicode = 8143;
},
{
glyphname = uni1FD0;
layers = (
{
layerId = m01;
shapes = (
{
pos = (435,0);
ref = uni0306;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1FD0;
unicode = 8144;
},
{
glyphname = uni1FD1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (435,0);
ref = uni0304;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1FD1;
unicode = 8145;
},
{
glyphname = uni1FD2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (396,85);
ref = uni1FED;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1FD2;
unicode = 8146;
},
{
glyphname = uni1FD3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (66,0);
ref = iota;
},
{
pos = (593,86);
ref = dieresistonos;
}
);
width = 520;
}
);
note = uni1FD3;
unicode = 8147;
},
{
glyphname = uni1FD6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (434,-17);
ref = uni1FC0;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1FD6;
unicode = 8150;
},
{
glyphname = uni1FD7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-177,-44);
ref = uni1FC1;
},
{
ref = iota;
}
);
width = 404;
}
);
note = uni1FD7;
unicode = 8151;
},
{
glyphname = uni1FD8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (451,164);
ref = uni0306;
},
{
ref = Iota;
}
);
width = 302;
}
);
note = uni1FD8;
unicode = 8152;
},
{
glyphname = uni1FD9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (451,121);
ref = uni0304;
},
{
ref = Iota;
}
);
width = 302;
}
);
note = uni1FD9;
unicode = 8153;
},
{
glyphname = uni1FDA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (489,-25);
ref = uni1FEF;
},
{
pos = (200,0);
ref = Iota;
}
);
width = 502;
}
);
note = uni1FDA;
unicode = 8154;
},
{
glyphname = uni1FDB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (384,-29);
ref = tonos;
},
{
pos = (183,0);
ref = I;
}
);
width = 454;
}
);
note = uni1FDB;
unicode = 8155;
},
{
glyphname = uni1FDD;
layers = (
{
layerId = m01;
shapes = (
{
pos = (452,20);
ref = uni1FEF;
},
{
ref = uni1FFE;
}
);
width = 0;
}
);
note = uni1FDD;
unicode = 8157;
},
{
glyphname = uni1FDE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (350,20);
ref = uni1FFD;
},
{
ref = uni1FFE;
}
);
width = 0;
}
);
note = uni1FDE;
unicode = 8158;
},
{
glyphname = uni1FDF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (194,107);
ref = uni1FC0;
},
{
ref = uni1FFE;
}
);
width = 0;
}
);
note = uni1FDF;
unicode = 8159;
},
{
glyphname = uni1FE0;
layers = (
{
layerId = m01;
shapes = (
{
pos = (634,0);
ref = uni0306;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1FE0;
unicode = 8160;
},
{
glyphname = uni1FE1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (634,0);
ref = uni0304;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1FE1;
unicode = 8161;
},
{
glyphname = uni1FE2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (660,77);
ref = uni1FED;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1FE2;
unicode = 8162;
},
{
glyphname = uni1FE3;
layers = (
{
layerId = m01;
shapes = (
{
ref = upsilon;
},
{
pos = (660,86);
ref = dieresistonos;
}
);
width = 673;
}
);
note = uni1FE3;
unicode = 8163;
},
{
glyphname = uni1FE4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (471,92);
ref = uni1FBF;
},
{
ref = rho;
}
);
width = 696;
}
);
note = uni1FE4;
unicode = 8164;
},
{
glyphname = uni1FE5;
layers = (
{
layerId = m01;
shapes = (
{
pos = (470,88);
ref = uni1FFE;
},
{
ref = rho;
}
);
width = 696;
}
);
note = uni1FE5;
unicode = 8165;
},
{
glyphname = uni1FE6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (624,-17);
ref = uni1FC0;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1FE6;
unicode = 8166;
},
{
glyphname = uni1FE7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (30,-32);
ref = uni1FC1;
},
{
ref = upsilon;
}
);
width = 673;
}
);
note = uni1FE7;
unicode = 8167;
},
{
glyphname = uni1FE8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (618,164);
ref = uni0306;
},
{
ref = Upsilon;
}
);
width = 635;
}
);
note = uni1FE8;
unicode = 8168;
},
{
glyphname = uni1FE9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (618,121);
ref = uni0304;
},
{
ref = Upsilon;
}
);
width = 635;
}
);
note = uni1FE9;
unicode = 8169;
},
{
glyphname = uni1FEA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (521,-29);
ref = uni1FEF;
},
{
pos = (261,0);
ref = Y;
}
);
width = 899;
}
);
note = uni1FEA;
unicode = 8170;
},
{
glyphname = uni1FEB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (382,-25);
ref = uni1FFD;
},
{
pos = (308,0);
ref = Upsilon;
}
);
width = 943;
}
);
note = uni1FEB;
unicode = 8171;
},
{
glyphname = uni1FEC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (210,-45);
ref = uni1FFE;
},
{
pos = (104,0);
ref = Rho;
}
);
width = 822;
}
);
note = uni1FEC;
unicode = 8172;
},
{
glyphname = uni1FED;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-486,547,o),
(-461,572,o),
(-461,590,qs),
(-461,608,o),
(-487,633,o),
(-504,633,qs),
(-522,633,o),
(-547,608,o),
(-547,590,qs),
(-547,571,o),
(-522,547,o),
(-504,547,qs)
);
},
{
closed = 1;
nodes = (
(-138,547,o),
(-114,571,o),
(-114,590,qs),
(-114,608,o),
(-138,633,o),
(-156,633,qs),
(-174,633,o),
(-186,620,q),
(-200,608,o),
(-200,590,qs),
(-200,572,o),
(-174,547,o),
(-156,547,qs)
);
},
{
closed = 1;
nodes = (
(-215,501,l),
(-352,731,l),
(-447,731,l),
(-285,501,l)
);
}
);
width = 600;
}
);
note = uni1FED;
unicode = 8173;
},
{
glyphname = uni1FEE;
layers = (
{
layerId = m01;
shapes = (
{
ref = dieresistonos;
}
);
width = 600;
}
);
note = uni1FEE;
unicode = 8174;
},
{
glyphname = uni1FEF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-235,501,l),
(-372,731,l),
(-467,731,l),
(-305,501,l)
);
}
);
width = 0;
}
);
note = uni1FEF;
unicode = 8175;
},
{
glyphname = uni1FF2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1F7C;
}
);
width = 862;
}
);
note = uni1FF2;
unicode = 8178;
},
{
glyphname = uni1FF3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1FF3;
unicode = 8179;
},
{
glyphname = uni1FF4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = omegatonos;
}
);
width = 862;
}
);
note = uni1FF4;
unicode = 8180;
},
{
glyphname = uni1FF6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (725,-15);
ref = uni1FC0;
},
{
ref = omega;
}
);
width = 862;
}
);
note = uni1FF6;
unicode = 8182;
},
{
glyphname = uni1FF7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (681,-80);
ref = uni0345;
},
{
ref = uni1FF6;
}
);
width = 862;
}
);
note = uni1FF7;
unicode = 8183;
},
{
glyphname = uni1FF8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (523,-41);
ref = uni1FEF;
},
{
pos = (264,0);
ref = Omicron;
}
);
width = 1103;
}
);
note = uni1FF8;
unicode = 8184;
},
{
glyphname = uni1FF9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (117,0);
ref = O;
},
{
pos = (384,-29);
ref = tonos;
}
);
width = 955;
}
);
note = uni1FF9;
unicode = 8185;
},
{
glyphname = uni1FFA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (494,-37);
ref = uni1FEF;
},
{
pos = (224,0);
ref = uni03A9;
}
);
width = 1126;
}
);
note = uni1FFA;
unicode = 8186;
},
{
glyphname = uni1FFB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (150,0);
ref = uni03A9;
},
{
pos = (384,-29);
ref = tonos;
}
);
width = 1074;
}
);
note = uni1FFB;
unicode = 8187;
},
{
glyphname = uni1FFC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (884,1);
ref = uni1FBE;
},
{
ref = uni03A9;
}
);
width = 902;
}
);
note = uni1FFC;
unicode = 8188;
},
{
glyphname = uni1FFD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-295,503,l),
(-133,731,l),
(-228,731,l),
(-365,503,l)
);
}
);
width = 0;
}
);
note = uni1FFD;
unicode = 8189;
},
{
glyphname = uni1FFE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-158,685,o),
(-151,658,o),
(-145,640,qs),
(-102,502,l),
(-54,502,l),
(-89,646,o),
(-89,646,q),
(-72,651,o),
(-52,678,o),
(-52,697,qs),
(-52,721,o),
(-82,751,o),
(-105,751,qs),
(-128,751,o),
(-158,720,o),
(-158,697,qs)
);
}
);
width = 0;
}
);
note = uni1FFE;
unicode = 8190;
},
{
glyphname = uni2007;
layers = (
{
layerId = m01;
width = 700;
}
);
note = uni2007;
unicode = 8199;
},
{
glyphname = uni2008;
layers = (
{
layerId = m01;
width = 212;
}
);
note = uni2008;
unicode = 8200;
},
{
glyphname = uni2009;
layers = (
{
layerId = m01;
width = 131;
}
);
note = uni2009;
unicode = 8201;
},
{
glyphname = uni200A;
layers = (
{
layerId = m01;
width = 100;
}
);
note = uni200A;
unicode = 8202;
},
{
glyphname = uni200B;
layers = (
{
layerId = m01;
width = 0;
}
);
note = uni200B;
unicode = 8203;
},
{
glyphname = uni2010;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
ref = hyphen;
}
);
width = 382;
}
);
note = uni2010;
unicode = 8208;
},
{
glyphname = figuredash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(652,330,l),
(652,381,l),
(48,381,l),
(48,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = figuredash;
unicode = 8210;
},
{
glyphname = endash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,246,l),
(500,297,l),
(0,297,l),
(0,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = endash;
unicode = 8211;
},
{
glyphname = emdash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1000,246,l),
(1000,297,l),
(0,297,l),
(0,246,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = emdash;
unicode = 8212;
},
{
glyphname = uni2015;
layers = (
{
layerId = m01;
shapes = (
{
ref = emdash;
}
);
width = 1000;
}
);
note = uni2015;
unicode = 8213;
},
{
glyphname = quoteleft;
kernLeft = uni02BB;
kernRight = uni02BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(156,742,l),
(108,742,l),
(66,604,ls),
(58,582,o),
(53,559,o),
(53,547,qs),
(53,524,o),
(82,493,o),
(106,493,qs),
(128,493,o),
(158,523,o),
(158,547,qs),
(158,566,o),
(139,593,o),
(122,598,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
14 1 0 1 1 74 0 0 0 1 93 0 1 1 68 0 76 22 36 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
kernLeft = quoteright;
kernRight = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,747,o),
(54,717,o),
(54,693,qs),
(54,674,o),
(74,647,o),
(91,642,q),
(56,498,l),
(104,498,l),
(147,636,ls),
(153,654,o),
(160,681,o),
(160,693,qs),
(160,716,o),
(130,747,o),
(107,747,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 1 0 1 1 74 0 0 0 1 95 2 1 1 1 74 0 76 0 0 0 14 0 13 22 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = quoteright;
unicode = 8217;
},
{
glyphname = quotesinglbase;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,104,o),
(54,73,o),
(54,50,qs),
(54,31,o),
(74,4,o),
(90,-1,q),
(56,-146,l),
(104,-146,l),
(146,-8,l),
(153,10,o),
(160,38,o),
(160,50,qs),
(160,73,o),
(130,104,o),
(107,104,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
8 1 0 1 1 74 2 1 1 0 0 1 87 2 1 1 1 0 93 0 0 1 0 77 0 0 0 14 0 13 22 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = quotesinglbase;
unicode = 8218;
},
{
glyphname = quotedblleft;
kernLeft = uni02BB;
kernRight = uni02BB;
layers = (
{
layerId = m01;
shapes = (
{
ref = quoteleft;
},
{
pos = (170,0);
ref = quoteleft;
}
);
width = 382;
}
);
note = quotedblleft;
unicode = 8220;
},
{
glyphname = quotedblright;
kernLeft = quoteright;
kernRight = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
ref = quoteright;
},
{
pos = (170,0);
ref = quoteright;
}
);
width = 382;
}
);
note = quotedblright;
unicode = 8221;
},
{
glyphname = quotedblbase;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
ref = quotesinglbase;
},
{
pos = (170,0);
ref = quotesinglbase;
}
);
width = 382;
}
);
note = quotedblbase;
unicode = 8222;
},
{
glyphname = dagger;
kernLeft = dagger;
kernRight = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(309,-194,l),
(309,387,l),
(517,387,l),
(517,450,l),
(309,450,l),
(309,700,l),
(238,700,l),
(238,450,l),
(30,450,l),
(30,387,l),
(238,387,l),
(238,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
3 1 1 4 1 0 5 1 0 101 0 2 2 66 75 0 5 5 71 5 76 17 17 17 17 17 16 6 10 26 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = dagger;
unicode = 8224;
},
{
glyphname = daggerdbl;
kernLeft = dagger;
kernRight = dagger;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,450,l),
(309,450,l),
(309,700,l),
(238,700,l),
(238,450,l),
(30,450,l),
(30,387,l),
(238,387,l),
(238,119,l),
(30,119,l),
(30,56,l),
(238,56,l),
(238,-194,l),
(309,-194,l),
(309,56,l),
(517,56,l),
(517,119,l),
(309,119,l),
(309,387,l),
(517,387,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
8 1 6 10 9 2 5 0 6 5 101 4 1 0 3 1 1 2 0 1 101 0 7 7 66 75 0 2 2 71 2 76 0 0 0 19 0 19 17 17 17 17 17 17 17 17 17 11 10 29 
CALL[ ]	/* CallFunction */";
};
width = 547;
}
);
note = daggerdbl;
unicode = 8225;
},
{
glyphname = bullet;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(179,197,o),
(223,242,o),
(223,274,qs),
(223,306,o),
(179,349,o),
(148,349,qs),
(117,349,o),
(73,306,o),
(73,274,qs),
(73,241,o),
(117,197,o),
(148,197,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 295;
}
);
note = bullet;
unicode = 8226;
},
{
glyphname = ellipsis;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
ref = period;
},
{
pos = (217,0);
ref = period;
},
{
pos = (435,0);
ref = period;
}
);
width = 647;
}
);
note = ellipsis;
unicode = 8230;
},
{
glyphname = perthousand;
kernLeft = percent;
kernRight = percent;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(270,325,o),
(358,429,o),
(358,515,qs),
(358,601,o),
(270,705,o),
(200,705,qs),
(129,705,o),
(42,600,o),
(42,515,qs),
(42,430,o),
(129,325,o),
(200,325,qs)
);
},
{
closed = 1;
nodes = (
(205,0,l),
(683,700,l),
(624,700,l),
(146,0,l)
);
},
{
closed = 1;
nodes = (
(150,370,o),
(92,448,o),
(92,515,qs),
(92,582,o),
(150,660,o),
(200,660,qs),
(249,660,o),
(308,583,o),
(308,515,qs),
(308,447,o),
(249,370,o),
(200,370,qs)
);
},
{
closed = 1;
nodes = (
(700,-5,o),
(787,100,o),
(787,185,qs),
(787,270,o),
(700,375,o),
(629,375,qs),
(559,375,o),
(471,270,o),
(471,185,qs),
(471,100,o),
(559,-5,o),
(629,-5,qs)
);
},
{
closed = 1;
nodes = (
(1061,-5,o),
(1148,100,o),
(1148,185,qs),
(1148,270,o),
(1061,375,o),
(990,375,qs),
(919,375,o),
(832,271,o),
(832,185,qs),
(832,99,o),
(919,-5,o),
(990,-5,qs)
);
},
{
closed = 1;
nodes = (
(580,40,o),
(521,117,o),
(521,185,qs),
(521,253,o),
(580,330,o),
(629,330,qs),
(679,330,o),
(737,252,o),
(737,185,qs),
(737,118,o),
(679,40,o),
(629,40,qs)
);
},
{
closed = 1;
nodes = (
(940,40,o),
(882,117,o),
(882,185,qs),
(882,253,o),
(940,330,o),
(990,330,qs),
(1039,330,o),
(1098,252,o),
(1098,185,qs),
(1098,118,o),
(1039,40,o),
(990,40,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
8 6 15 3 5 12 10 14 3 1 11 5 1 104 0 4 4 0 95 2 1 0 0 72 75 19 13 18 3 11 11 3 95 17 9 16 7 4 3 3 67 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
8 1 6 12 1 10 1 6 10 104 15 1 5 14 1 1 11 5 1 103 0 2 2 66 75 0 4 4 0 95 0 0 0 72 75 0 3 3 67 75 19 13 18 3 11 11 7 95 17 9 16 3 7 7 76 7 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 54 values pushed */
64 64 52 52 40 40 28 28 16 16 0 0 64 75 64 74 70 68 52 63 52 62 58 56 40 51 40 50 46 44 28 39 28 38 34 32 16 27 16 26 22 20 15 14 13 12 0 11 0 10 36 20 10 21 
CALL[ ]	/* CallFunction */";
};
width = 1190;
}
);
note = perthousand;
unicode = 8240;
},
{
glyphname = minute;
kernLeft = quotedbl;
kernRight = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,436,l),
(132,700,l),
(69,700,l),
(74,436,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 93 0 0 0 66 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = minute;
unicode = 8242;
},
{
glyphname = second;
kernLeft = quotedbl;
kernRight = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,436,l),
(132,700,l),
(69,700,l),
(74,436,l)
);
},
{
closed = 1;
nodes = (
(298,436,l),
(303,700,l),
(240,700,l),
(245,436,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 1 0 93 2 1 0 0 66 1 76 17 17 17 16 4 10 24 
CALL[ ]	/* CallFunction */";
};
width = 373;
}
);
note = second;
unicode = 8243;
},
{
glyphname = guilsinglleft;
kernLeft = plus;
kernRight = guillemotleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(261,74,l),
(119,263,l),
(261,453,l),
(195,453,l),
(50,263,l),
(195,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 18 17 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = guilsinglleft;
unicode = 8249;
},
{
glyphname = guilsinglright;
kernLeft = guillemotright;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(249,263,l),
(104,453,l),
(38,453,l),
(180,263,l),
(38,74,l),
(104,74,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
4 1 2 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 5 0 5 18 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = guilsinglright;
unicode = 8250;
},
{
glyphname = uni203E;
layers = (
{
layerId = m01;
width = 1000;
}
);
note = uni203E;
unicode = 8254;
},
{
glyphname = fraction;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-125,0,l),
(353,700,l),
(294,700,l),
(-184,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 66 75 0 1 1 67 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 169;
}
);
note = fraction;
unicode = 8260;
},
{
glyphname = uni2052;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(155,602,o),
(184,631,o),
(184,651,qs),
(184,672,o),
(155,700,o),
(135,700,qs),
(114,700,o),
(85,672,o),
(85,651,qs),
(85,631,o),
(115,602,o),
(135,602,qs)
);
},
{
closed = 1;
nodes = (
(160,0,l),
(410,700,l),
(354,700,l),
(104,0,l)
);
},
{
closed = 1;
nodes = (
(398,0,o),
(428,29,o),
(428,49,qs),
(428,69,o),
(398,98,o),
(378,98,qs),
(358,98,o),
(329,69,o),
(329,49,qs),
(329,29,o),
(358,0,o),
(378,0,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
6 1 1 1 0 95 2 1 0 0 66 75 0 4 4 3 95 7 5 2 3 3 67 3 76 16 16 0 0 16 27 16 26 22 20 15 14 13 12 0 11 0 10 36 8 10 21 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = uni2052;
unicode = 8274;
},
{
glyphname = uni2070;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = zero.dnom;
}
);
width = 430;
}
);
note = uni2070;
unicode = 8304;
},
{
glyphname = uni2074;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = four.dnom;
}
);
width = 430;
}
);
note = uni2074;
unicode = 8308;
},
{
glyphname = uni2075;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = five.dnom;
}
);
width = 430;
}
);
note = uni2075;
unicode = 8309;
},
{
glyphname = uni2076;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = six.dnom;
}
);
width = 430;
}
);
note = uni2076;
unicode = 8310;
},
{
glyphname = uni2077;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = seven.dnom;
}
);
width = 430;
}
);
note = uni2077;
unicode = 8311;
},
{
glyphname = uni2078;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = eight.dnom;
}
);
width = 430;
}
);
note = uni2078;
unicode = 8312;
},
{
glyphname = uni2079;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,327);
ref = nine.dnom;
}
);
width = 430;
}
);
note = uni2079;
unicode = 8313;
},
{
glyphname = uni2080;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = zero.dnom;
}
);
width = 430;
}
);
note = uni2080;
unicode = 8320;
},
{
glyphname = uni2081;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = one.dnom;
}
);
width = 430;
}
);
note = uni2081;
unicode = 8321;
},
{
glyphname = uni2082;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = two.dnom;
}
);
width = 430;
}
);
note = uni2082;
unicode = 8322;
},
{
glyphname = uni2083;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = three.dnom;
}
);
width = 430;
}
);
note = uni2083;
unicode = 8323;
},
{
glyphname = uni2084;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = four.dnom;
}
);
width = 430;
}
);
note = uni2084;
unicode = 8324;
},
{
glyphname = uni2085;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = five.dnom;
}
);
width = 430;
}
);
note = uni2085;
unicode = 8325;
},
{
glyphname = uni2086;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = six.dnom;
}
);
width = 430;
}
);
note = uni2086;
unicode = 8326;
},
{
glyphname = uni2087;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = seven.dnom;
}
);
width = 430;
}
);
note = uni2087;
unicode = 8327;
},
{
glyphname = uni2088;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = eight.dnom;
}
);
width = 430;
}
);
note = uni2088;
unicode = 8328;
},
{
glyphname = uni2089;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = nine.dnom;
}
);
width = 430;
}
);
note = uni2089;
unicode = 8329;
},
{
glyphname = colonmonetary;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(562,607,l),
(602,584,o),
(628,557,q),
(675,604,l),
(636,648,o),
(579,673,q),
(616,820,l),
(569,820,l),
(536,689,l),
(493,703,o),
(438,706,q),
(467,820,l),
(420,820,l),
(391,705,l),
(294,699,o),
(139,604,o),
(52,447,o),
(52,350,qs),
(52,251,o),
(143,91,o),
(223,45,q),
(181,-120,l),
(228,-120,l),
(265,24,l),
(305,6,o),
(360,-2,q),
(330,-120,l),
(377,-120,l),
(406,-6,l),
(418,-6,ls),
(496,-6,o),
(629,47,o),
(675,97,q),
(628,144,l),
(547,60,o),
(423,60,q)
);
},
{
closed = 1;
nodes = (
(421,640,l),
(474,640,o),
(519,625,q),
(377,63,l),
(323,71,o),
(282,92,q)
);
},
{
closed = 1;
nodes = (
(125,424,o),
(189,547,o),
(302,627,o),
(373,637,q),
(241,116,l),
(187,156,o),
(125,278,o),
(125,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
29 26 2 8 3 45 44 41 38 34 32 31 2 1 9 7 8 14 11 9 3 0 7 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
6 1 4 3 3 4 110 2 1 1 0 1 132 0 8 8 3 95 5 1 3 3 66 75 9 1 7 7 0 95 0 0 0 73 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
6 1 4 3 4 131 2 1 1 0 1 132 0 8 8 3 95 5 1 3 3 66 75 9 1 7 7 0 95 0 0 0 73 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 40 39 0 35 0 35 18 17 17 23 20 17 36 10 10 27 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = colonmonetary;
unicode = 8353;
},
{
glyphname = franc;
kernLeft = currency;
kernRight = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(615,700,l),
(135,700,l),
(135,174,l),
(30,174,l),
(30,130,l),
(135,130,l),
(135,0,l),
(209,0,l),
(209,130,l),
(434,130,l),
(434,174,l),
(209,174,l),
(209,297,l),
(572,297,l),
(572,361,l),
(209,361,l),
(209,636,l),
(615,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
0 0 0 1 2 0 1 101 6 1 2 5 1 3 4 2 3 101 9 1 8 8 7 93 0 7 7 66 75 0 4 4 67 4 76 0 0 0 17 0 17 17 17 17 17 17 17 17 17 10 10 28 
CALL[ ]	/* CallFunction */";
};
width = 654;
}
);
note = franc;
unicode = 8355;
},
{
glyphname = lira;
kernLeft = sterling;
kernRight = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(493,259,l),
(493,303,l),
(216,303,l),
(216,397,l),
(493,397,l),
(493,441,l),
(216,441,l),
(216,459,ls),
(216,547,o),
(316,640,o),
(415,640,qs),
(528,640,o),
(594,592,q),
(621,653,l),
(544,706,o),
(421,706,qs),
(287,706,o),
(143,573,o),
(143,459,qs),
(143,441,l),
(30,441,l),
(30,397,l),
(143,397,l),
(143,303,l),
(30,303,l),
(30,259,l),
(143,259,l),
(143,64,l),
(30,64,l),
(30,0,l),
(608,0,l),
(608,64,l),
(216,64,l),
(216,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
19 1 8 7 20 1 6 8 2 74 9 1 6 10 1 5 4 6 5 101 11 1 4 12 1 3 0 4 3 101 0 8 8 7 95 0 7 7 72 75 2 1 0 0 1 93 0 1 1 67 1 76 33 32 31 30 29 28 27 26 35 35 17 17 17 17 17 17 16 13 10 29 
CALL[ ]	/* CallFunction */";
};
width = 637;
}
);
note = lira;
unicode = 8356;
},
{
glyphname = uni20A6;
kernLeft = currency;
kernRight = currency;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(840,441,l),
(727,441,l),
(727,700,l),
(654,700,l),
(654,441,l),
(409,441,l),
(203,700,l),
(143,700,l),
(143,441,l),
(30,441,l),
(30,397,l),
(143,397,l),
(143,303,l),
(30,303,l),
(30,259,l),
(143,259,l),
(143,0,l),
(216,0,l),
(216,259,l),
(461,259,l),
(667,0,l),
(727,0,l),
(727,259,l),
(840,259,l),
(840,303,l),
(727,303,l),
(727,397,l),
(840,397,l)
);
},
{
closed = 1;
nodes = (
(317,441,l),
(216,441,l),
(216,568,l)
);
},
{
closed = 1;
nodes = (
(216,397,l),
(352,397,l),
(426,303,l),
(216,303,l)
);
},
{
closed = 1;
nodes = (
(518,303,l),
(444,397,l),
(654,397,l),
(654,303,l)
);
},
{
closed = 1;
nodes = (
(553,259,l),
(654,259,l),
(654,132,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 95 values pushed */
30 1 8 9 41 1 2 1 2 74 14 12 10 3 8 17 15 20 13 4 7 0 8 7 101 18 21 16 6 4 0 19 5 3 3 1 2 0 1 101 11 1 9 9 66 75 4 1 2 2 67 2 76 31 31 0 0 40 39 38 37 36 35 31 34 31 34 33 32 29 28 0 27 0 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 22 10 29 
CALL[ ]	/* CallFunction */";
};
width = 870;
}
);
note = uni20A6;
unicode = 8358;
},
{
glyphname = peseta;
kernLeft = B;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
ref = P;
},
{
pos = (723,0);
ref = t;
},
{
pos = (1129,0);
ref = s;
}
);
width = 1618;
}
);
note = peseta;
unicode = 8359;
},
{
glyphname = uni20A9;
kernLeft = currency;
kernRight = currency;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1141,441,l),
(1034,441,l),
(1125,700,l),
(1052,700,l),
(960,441,l),
(715,441,l),
(622,700,l),
(552,700,l),
(458,441,l),
(214,441,l),
(123,700,l),
(46,700,l),
(137,441,l),
(30,441,l),
(30,397,l),
(152,397,l),
(186,303,l),
(30,303,l),
(30,259,l),
(201,259,l),
(292,0,l),
(370,0,l),
(464,259,l),
(708,259,l),
(801,0,l),
(879,0,l),
(970,259,l),
(1141,259,l),
(1141,303,l),
(985,303,l),
(1019,397,l),
(1141,397,l)
);
},
{
closed = 1;
nodes = (
(642,441,l),
(529,441,l),
(586,597,l)
);
},
{
closed = 1;
nodes = (
(442,397,l),
(408,303,l),
(262,303,l),
(229,397,l)
);
},
{
closed = 1;
nodes = (
(514,397,l),
(658,397,l),
(692,303,l),
(480,303,l)
);
},
{
closed = 1;
nodes = (
(764,303,l),
(730,397,l),
(945,397,l),
(911,303,l)
);
},
{
closed = 1;
nodes = (
(278,259,l),
(392,259,l),
(334,98,l)
);
},
{
closed = 1;
nodes = (
(780,259,l),
(896,259,l),
(838,95,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 111 values pushed */
34 1 8 9 52 49 2 2 1 2 74 16 14 12 10 4 8 21 19 18 25 15 5 7 0 8 7 102 22 26 20 17 6 5 0 24 23 5 3 4 1 2 0 1 101 13 11 2 9 9 66 75 4 1 2 2 67 2 76 39 39 0 0 51 50 48 47 46 45 44 43 39 42 39 42 41 40 38 37 36 35 33 32 0 31 0 31 30 29 28 27 26 25 24 23 22 21 20 19 17 17 17 17 17 17 17 17 17 27 10 29 
CALL[ ]	/* CallFunction */";
};
width = 1171;
}
);
note = uni20A9;
unicode = 8361;
},
{
glyphname = dong;
kernLeft = c;
kernRight = dong;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(579,742,l),
(508,742,l),
(508,655,l),
(288,655,l),
(288,611,l),
(508,611,l),
(508,426,l),
(475,477,o),
(372,530,o),
(308,530,qs),
(234,530,o),
(114,463,o),
(46,341,o),
(46,263,qs),
(46,185,o),
(114,63,o),
(234,-5,o),
(308,-5,qs),
(374,-5,o),
(479,51,o),
(511,104,q),
(511,0,l),
(579,0,l),
(579,611,l),
(678,611,l),
(678,655,l),
(579,655,l)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(369,468,o),
(458,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(458,109,o),
(369,58,o),
(314,58,qs)
);
},
{
closed = 1;
nodes = (
(581,-130,l),
(581,-86,l),
(67,-86,l),
(67,-130,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
19 5 2 9 8 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
12 7 2 5 4 1 0 3 5 0 101 0 10 0 11 10 11 97 0 6 6 68 75 0 8 8 3 95 0 3 3 75 75 13 1 9 9 1 95 2 1 1 1 67 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
12 7 2 5 4 1 0 3 5 0 101 0 10 0 11 10 11 97 0 6 6 68 75 0 8 8 3 95 0 3 3 75 75 0 1 1 67 75 13 1 9 9 2 95 0 2 2 76 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
27 27 0 0 46 45 44 43 27 42 27 41 35 33 0 26 0 26 17 17 19 38 35 17 17 14 10 27 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = dong;
unicode = 8363;
},
{
glyphname = Euro;
kernLeft = currency;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(403,60,o),
(250,170,o),
(223,259,q),
(566,259,l),
(566,303,l),
(212,303,l),
(209,326,o),
(209,350,qs),
(209,375,o),
(212,397,q),
(566,397,l),
(566,441,l),
(223,441,l),
(250,530,o),
(403,640,o),
(505,640,qs),
(629,640,o),
(711,557,q),
(759,604,l),
(712,654,o),
(580,706,o),
(501,706,qs),
(414,706,o),
(266,639,o),
(165,519,o),
(146,441,q),
(30,441,l),
(30,397,l),
(138,397,l),
(135,375,o),
(135,350,qs),
(135,326,o),
(138,303,q),
(30,303,l),
(30,259,l),
(146,259,l),
(165,181,o),
(266,61,o),
(414,-6,o),
(501,-6,qs),
(580,-6,o),
(712,46,o),
(759,97,q),
(711,144,l),
(630,60,o),
(505,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
27 26 2 4 6 2 1 2 11 1 2 74 7 1 4 8 1 3 2 4 3 101 9 1 2 10 1 1 11 2 1 101 0 6 6 5 95 0 5 5 72 75 12 1 11 11 0 95 0 0 0 73 0 76 0 0 0 45 0 44 42 41 40 39 17 18 36 35 17 20 17 19 36 13 10 29 
CALL[ ]	/* CallFunction */";
};
width = 802;
}
);
note = Euro;
unicode = 8364;
},
{
glyphname = uni20AD;
kernLeft = currency;
kernRight = uni20AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(547,375,l),
(322,375,l),
(622,700,l),
(533,700,l),
(233,375,l),
(208,375,l),
(208,700,l),
(135,700,l),
(135,375,l),
(30,375,l),
(30,325,l),
(135,325,l),
(135,0,l),
(208,0,l),
(208,325,l),
(233,325,l),
(533,0,l),
(622,0,l),
(322,325,l),
(547,325,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
8 6 2 4 10 9 3 3 1 0 4 1 102 7 1 5 5 66 75 2 1 0 0 67 0 76 0 0 0 19 0 19 17 17 17 17 17 17 17 17 17 11 10 29 
CALL[ ]	/* CallFunction */";
};
width = 628;
}
);
note = uni20AD;
unicode = 8365;
},
{
glyphname = uni20AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(621,700,l),
(54,700,l),
(54,636,l),
(300,636,l),
(300,396,l),
(124,307,l),
(124,261,l),
(300,350,l),
(300,255,l),
(124,166,l),
(124,119,l),
(300,208,l),
(300,0,l),
(374,0,l),
(374,246,l),
(550,335,l),
(550,381,l),
(374,292,l),
(374,387,l),
(550,476,l),
(550,522,l),
(374,433,l),
(374,636,l),
(621,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
18 17 16 15 14 13 12 11 8 7 6 5 4 3 2 1 16 0 1 1 74 4 3 2 1 1 2 93 0 2 2 66 75 0 0 0 67 0 76 0 0 0 23 0 23 17 25 25 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 674;
}
);
note = uni20AE;
unicode = 8366;
},
{
glyphname = uni20B1;
kernLeft = currency;
kernRight = currency;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,551,l),
(647,622,o),
(507,700,o),
(404,700,qs),
(143,700,l),
(143,551,l),
(30,551,l),
(30,508,l),
(143,508,l),
(143,413,l),
(30,413,l),
(30,370,l),
(143,370,l),
(143,0,l),
(216,0,l),
(216,221,l),
(404,221,ls),
(508,221,o),
(648,299,o),
(675,370,q),
(803,370,l),
(803,413,l),
(686,413,l),
(690,433,o),
(690,460,qs),
(690,488,o),
(686,508,q),
(803,508,l),
(803,551,l)
);
},
{
closed = 1;
nodes = (
(403,636,ls),
(474,636,o),
(571,593,o),
(595,551,q),
(216,551,l),
(216,636,l)
);
},
{
closed = 1;
nodes = (
(617,438,o),
(612,413,q),
(216,413,l),
(216,508,l),
(612,508,l),
(617,483,o),
(617,460,qs)
);
},
{
closed = 1;
nodes = (
(216,286,l),
(216,370,l),
(595,370,l),
(571,329,o),
(474,286,o),
(403,286,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
11 10 2 8 13 7 2 0 1 8 0 101 14 6 2 1 15 5 2 2 16 1 2 101 17 1 16 0 3 4 16 3 101 0 12 12 9 93 0 9 9 66 75 0 4 4 67 4 76 42 42 42 47 42 46 45 44 39 38 37 36 34 32 30 29 28 27 25 23 17 17 17 17 17 34 17 20 16 18 10 29 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uni20B1;
unicode = 8369;
},
{
glyphname = uni20B2;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,60,o),
(425,60,q),
(425,640,l),
(553,640,o),
(636,558,q),
(682,605,l),
(637,654,o),
(505,705,o),
(425,706,q),
(425,820,l),
(375,820,l),
(375,704,l),
(281,694,o),
(134,597,o),
(52,444,o),
(52,350,qs),
(52,256,o),
(134,102,o),
(281,6,o),
(375,-4,q),
(375,-120,l),
(425,-120,l),
(425,-6,l),
(498,-5,o),
(630,40,o),
(678,83,q),
(678,350,l),
(607,350,l),
(607,114,l)
);
},
{
closed = 1;
nodes = (
(125,424,o),
(188,547,o),
(302,626,o),
(375,636,q),
(375,63,l),
(302,74,o),
(188,153,o),
(125,276,o),
(125,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
16 1 5 4 33 23 22 3 0 5 32 28 2 3 6 0 8 1 1 6 4 74 0 3 4 3 131 0 0 5 6 5 0 6 126 0 2 1 2 132 0 5 5 4 95 0 4 4 72 75 0 6 6 1 95 0 1 1 73 1 76 17 20 17 26 17 19 16 7 10 27 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = uni20B2;
unicode = 8370;
},
{
glyphname = uni20B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(659,473,o),
(659,514,qs),
(659,569,o),
(600,657,o),
(483,707,o),
(400,707,qs),
(344,707,o),
(232,676,o),
(187,649,q),
(207,590,l),
(251,616,o),
(353,643,o),
(402,643,qs),
(493,643,o),
(586,572,o),
(586,516,qs),
(586,493,o),
(561,458,o),
(537,442,q),
(97,442,l),
(97,399,l),
(723,399,l),
(723,442,l),
(642,442,l)
);
},
{
closed = 1;
nodes = (
(177,261,l),
(155,230,o),
(155,185,qs),
(155,130,o),
(215,43,o),
(333,-7,o),
(418,-7,qs),
(491,-7,o),
(628,40,o),
(674,80,q),
(650,136,l),
(611,101,o),
(485,57,o),
(416,57,qs),
(322,57,o),
(229,126,o),
(229,181,qs),
(229,207,o),
(255,246,o),
(280,261,q),
(723,261,l),
(723,304,l),
(97,304,l),
(97,261,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 78 values pushed */
14 1 2 3 13 1 1 2 37 36 2 7 6 3 74 10 4 2 1 0 0 5 1 0 101 0 5 9 1 6 7 5 6 101 0 2 2 3 95 0 3 3 72 75 0 7 7 8 95 0 8 8 73 8 76 0 0 47 46 41 39 34 32 27 26 25 24 0 23 0 23 37 37 17 17 11 10 24 
CALL[ ]	/* CallFunction */";
};
width = 825;
}
);
note = uni20B4;
unicode = 8372;
},
{
glyphname = uni20B5;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(425,640,l),
(548,638,o),
(628,557,q),
(675,604,l),
(630,653,o),
(501,704,o),
(425,706,q),
(425,820,l),
(375,820,l),
(375,704,l),
(282,695,o),
(135,599,o),
(52,444,o),
(52,350,qs),
(52,256,o),
(135,101,o),
(282,5,o),
(375,-4,q),
(375,-120,l),
(425,-120,l),
(425,-6,l),
(501,-4,o),
(630,48,o),
(675,97,q),
(628,144,l),
(548,62,o),
(425,60,q)
);
},
{
closed = 1;
nodes = (
(125,424,o),
(189,548,o),
(303,627,o),
(375,637,q),
(375,63,l),
(303,73,o),
(189,152,o),
(125,276,o),
(125,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
16 1 4 3 31 30 23 22 2 1 6 5 4 8 1 0 5 3 74 0 2 3 2 131 0 1 0 1 132 0 4 4 3 95 0 3 3 72 75 6 1 5 5 0 95 0 0 0 76 0 76 0 0 0 26 0 26 20 17 26 17 20 7 10 25 
CALL[ ]	/* CallFunction */";
};
width = 719;
}
);
note = uni20B5;
unicode = 8373;
},
{
glyphname = uni20B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(645,655,l),
(645,700,l),
(79,700,l),
(79,655,l)
);
},
{
closed = 1;
nodes = (
(398,0,l),
(398,520,l),
(645,520,l),
(645,565,l),
(79,565,l),
(79,520,l),
(325,520,l),
(325,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 3 4 1 2 5 3 2 101 0 1 1 0 93 0 0 0 66 75 0 5 5 67 5 76 17 17 17 17 17 16 6 10 26 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = uni20B8;
unicode = 8376;
},
{
glyphname = uni20B9;
kernLeft = uni20B9;
kernRight = uni20B9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(24,700,l),
(24,655,l),
(269,656,ls),
(345,657,o),
(447,607,o),
(470,561,q),
(24,561,l),
(24,516,l),
(485,516,l),
(488,498,o),
(488,477,qs),
(488,401,o),
(379,311,o),
(274,311,qs),
(114,311,l),
(114,247,l),
(276,247,ls),
(303,247,o),
(327,250,q),
(492,0,l),
(573,0,l),
(399,264,l),
(476,287,o),
(561,397,o),
(561,476,qs),
(561,497,o),
(558,516,q),
(668,516,l),
(668,561,l),
(546,561,l),
(522,622,o),
(464,656,q),
(668,656,l),
(668,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
11 1 4 5 1 74 0 3 4 3 132 0 9 8 1 0 1 9 0 101 7 1 1 6 1 2 5 1 2 101 0 5 4 4 5 85 0 5 5 4 93 0 4 5 4 77 33 32 34 17 20 33 34 22 17 18 16 10 13 29 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = uni20B9;
unicode = 8377;
},
{
glyphname = uni20BA;
kernLeft = currency;
kernRight = uni20BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,213,o),
(422,64,o),
(270,64,qs),
(215,64,l),
(215,314,l),
(493,460,l),
(493,507,l),
(215,361,l),
(215,455,l),
(493,601,l),
(493,648,l),
(215,502,l),
(215,700,l),
(143,700,l),
(143,464,l),
(30,405,l),
(30,358,l),
(143,417,l),
(143,323,l),
(30,264,l),
(30,217,l),
(143,276,l),
(143,0,l),
(256,0,ls),
(450,0,o),
(651,184,o),
(651,352,q),
(578,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
21 20 19 18 17 16 15 12 11 10 9 11 3 1 22 8 7 6 5 5 2 3 2 74 4 1 3 1 2 1 3 2 126 0 1 1 66 75 0 2 2 0 93 0 0 0 67 0 76 0 0 0 27 0 27 41 25 34 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 695;
}
);
note = uni20BA;
unicode = 8378;
},
{
glyphname = uni20BC;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,820,l),
(435,820,l),
(435,705,l),
(339,699,o),
(194,604,o),
(114,429,o),
(114,307,qs),
(114,0,l),
(183,0,l),
(183,305,ls),
(183,463,o),
(315,633,o),
(435,641,q),
(435,120,l),
(484,120,l),
(484,641,l),
(605,633,o),
(736,464,o),
(736,305,qs),
(736,0,l),
(805,0,l),
(805,307,ls),
(805,429,o),
(725,605,o),
(580,700,o),
(484,705,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
0 6 5 6 131 0 2 1 0 1 2 0 126 3 1 1 1 5 95 8 7 2 5 5 66 75 4 1 0 0 67 0 76 0 0 0 25 0 25 17 20 19 17 17 19 20 9 10 27 
CALL[ ]	/* CallFunction */";
};
width = 919;
}
);
note = uni20BC;
unicode = 8380;
},
{
glyphname = uni20BD;
kernLeft = currency;
kernRight = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(532,235,o),
(683,356,o),
(683,468,qs),
(683,579,o),
(532,700,o),
(397,700,qs),
(135,700,l),
(135,174,l),
(30,174,l),
(30,130,l),
(135,130,l),
(135,0,l),
(209,0,l),
(209,130,l),
(434,130,l),
(434,174,l),
(209,174,l),
(209,235,l),
(397,235,ls)
);
},
{
closed = 1;
nodes = (
(500,636,o),
(609,548,o),
(609,467,qs),
(609,386,o),
(500,298,o),
(398,298,qs),
(209,298,l),
(209,636,l),
(398,636,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
0 7 9 1 6 0 7 6 101 4 1 0 3 1 1 2 0 1 101 10 1 8 8 5 93 0 5 5 66 75 0 2 2 67 2 76 19 19 0 0 19 27 19 26 22 20 0 18 0 17 33 17 17 17 17 17 11 10 26 
CALL[ ]	/* CallFunction */";
};
width = 739;
}
);
note = uni20BD;
unicode = 8381;
},
{
glyphname = uni2113;
kernRight = parenright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,-2,o),
(426,114,q),
(400,142,l),
(361,97,o),
(284,50,o),
(241,50,qs),
(199,50,o),
(161,97,o),
(161,145,qs),
(161,179,o),
(168,218,q),
(289,313,o),
(426,505,o),
(426,590,qs),
(426,645,o),
(369,702,o),
(325,702,qs),
(270,702,o),
(187,614,o),
(170,527,qs),
(120,233,l),
(39,172,l),
(54,138,l),
(113,181,l),
(111,153,o),
(111,141,qs),
(111,72,o),
(166,-2,o),
(229,-2,qs)
);
},
{
closed = 1;
nodes = (
(222,530,ls),
(234,595,o),
(289,659,o),
(324,659,qs),
(350,659,o),
(383,624,o),
(383,588,qs),
(383,522,o),
(274,356,o),
(178,279,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
38 26 25 5 4 5 1 3 1 74 0 0 0 3 1 0 3 103 0 1 2 2 1 87 0 1 1 2 95 4 1 2 1 2 79 0 0 35 33 0 28 0 27 41 42 5 13 22 
CALL[ ]	/* CallFunction */";
};
width = 466;
}
);
note = uni2113;
unicode = 8467;
},
{
glyphname = uni2116;
kernLeft = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1020,386,o),
(1099,427,o),
(1144,500,o),
(1144,546,qs),
(1144,592,o),
(1099,664,o),
(1020,705,o),
(971,705,qs),
(922,705,o),
(843,664,o),
(798,592,o),
(798,546,qs),
(798,500,o),
(843,427,o),
(922,386,o),
(971,386,qs)
);
},
{
closed = 1;
nodes = (
(175,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,568,l),
(638,0,l),
(699,0,l),
(699,700,l),
(626,700,l),
(626,132,l)
);
},
{
closed = 1;
nodes = (
(1024,661,o),
(1092,597,o),
(1092,546,qs),
(1092,495,o),
(1025,431,o),
(971,431,qs),
(917,431,o),
(850,495,o),
(850,546,qs),
(850,597,o),
(918,661,o),
(971,661,qs)
);
},
{
closed = 1;
nodes = (
(1124,250,l),
(1124,300,l),
(818,300,l),
(818,250,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
20 1 6 7 25 1 3 9 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 6 10 1 1 8 6 1 103 0 8 0 9 3 8 9 101 11 1 7 7 0 93 5 2 2 0 0 32 75 4 1 3 3 33 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 6 10 1 1 8 6 1 103 0 8 0 9 3 8 9 101 5 1 2 2 32 75 11 1 7 7 0 95 0 0 0 37 75 4 1 3 3 33 3 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
26 26 0 0 41 40 39 38 26 37 26 36 32 30 24 23 22 21 19 18 17 16 0 15 0 14 38 12 7 21 
CALL[ ]	/* CallFunction */";
};
width = 1200;
}
);
note = uni2116;
unicode = 8470;
},
{
glyphname = trademark;
kernLeft = trademark;
kernRight = trademark;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,654,l),
(160,285,l),
(215,285,l),
(215,654,l),
(370,654,l),
(370,700,l),
(4,700,l),
(4,654,l)
);
},
{
closed = 1;
nodes = (
(906,700,l),
(862,700,l),
(671,400,l),
(479,700,l),
(434,700,l),
(434,285,l),
(487,285,l),
(487,599,l),
(658,336,l),
(683,336,l),
(854,605,l),
(855,285,l),
(907,285,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
17 12 9 3 4 1 1 74 0 4 1 2 1 4 2 126 9 8 5 3 2 2 130 7 6 2 0 1 1 0 85 7 6 2 0 0 1 93 3 1 1 0 1 77 8 8 8 20 8 20 18 17 18 19 17 17 17 16 10 13 28 
CALL[ ]	/* CallFunction */";
};
width = 1021;
}
);
note = trademark;
unicode = 8482;
},
{
glyphname = uni2126;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni03A9;
}
);
width = 902;
}
);
note = uni2126;
unicode = 8486;
},
{
glyphname = uni212A;
kernLeft = B;
kernRight = K;
layers = (
{
layerId = m01;
shapes = (
{
ref = K;
}
);
width = 711;
}
);
note = uni212A;
unicode = 8490;
},
{
glyphname = uni212B;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (659,175);
ref = uni030A;
}
);
width = 717;
}
);
note = uni212B;
unicode = 8491;
},
{
glyphname = estimated;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(536,-3,o),
(700,71,o),
(754,134,q),
(697,134,l),
(651,80,o),
(519,18,o),
(445,18,qs),
(372,18,o),
(244,72,o),
(204,122,q),
(195,136,o),
(195,145,qs),
(195,337,ls),
(195,341,o),
(201,341,qs),
(836,341,l),
(836,349,ls),
(836,445,o),
(731,608,o),
(551,703,o),
(444,703,qs),
(338,703,o),
(158,608,o),
(52,445,o),
(52,349,qs),
(52,254,o),
(158,92,o),
(338,-3,o),
(444,-3,qs)
);
},
{
closed = 1;
nodes = (
(195,360,o),
(195,366,qs),
(195,555,ls),
(195,567,o),
(205,579,q),
(253,627,o),
(377,682,o),
(445,682,qs),
(513,682,o),
(636,629,o),
(683,582,q),
(694,573,o),
(694,559,qs),
(694,366,ls),
(694,360,o),
(688,360,qs),
(201,360,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
43 31 2 6 5 15 1 3 1 2 74 0 3 1 2 1 3 2 126 0 0 0 5 6 0 5 103 8 1 6 0 1 3 6 1 101 0 2 4 4 2 87 0 2 2 4 95 7 1 4 2 4 79 29 29 0 0 29 45 29 45 38 36 0 28 0 27 18 39 35 38 9 13 24 
CALL[ ]	/* CallFunction */";
};
width = 887;
}
);
note = estimated;
unicode = 8494;
},
{
glyphname = uni2153;
layers = (
{
layerId = m01;
shapes = (
{
ref = one.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = three.dnom;
}
);
width = 1029;
}
);
note = uni2153;
unicode = 8531;
},
{
glyphname = uni2154;
layers = (
{
layerId = m01;
shapes = (
{
ref = two.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = three.dnom;
}
);
width = 1029;
}
);
note = uni2154;
unicode = 8532;
},
{
glyphname = oneeighth;
layers = (
{
layerId = m01;
shapes = (
{
ref = one.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = eight.dnom;
}
);
width = 1029;
}
);
note = oneeighth;
unicode = 8539;
},
{
glyphname = threeeighths;
layers = (
{
layerId = m01;
shapes = (
{
ref = three.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = eight.dnom;
}
);
width = 1029;
}
);
note = threeeighths;
unicode = 8540;
},
{
glyphname = fiveeighths;
layers = (
{
layerId = m01;
shapes = (
{
ref = five.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = eight.dnom;
}
);
width = 1029;
}
);
note = fiveeighths;
unicode = 8541;
},
{
glyphname = seveneighths;
layers = (
{
layerId = m01;
shapes = (
{
ref = seven.numr;
},
{
pos = (430,0);
ref = fraction;
},
{
pos = (599,0);
ref = eight.dnom;
}
);
width = 1029;
}
);
note = seveneighths;
unicode = 8542;
},
{
glyphname = arrowleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,300,l),
(307,470,l),
(240,470,l),
(106,272,l),
(240,76,l),
(307,76,l),
(197,245,l),
(526,245,l),
(526,300,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 0 3 1 74 0 2 3 2 131 0 1 0 1 132 0 3 0 0 3 85 0 3 3 0 94 0 0 3 0 78 17 18 17 16 4 13 24 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowleft;
unicode = 8592;
},
{
glyphname = arrowup;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,487,l),
(104,352,l),
(104,288,l),
(270,398,l),
(270,63,l),
(329,63,l),
(329,397,l),
(496,288,l),
(496,352,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
8 7 6 5 4 1 0 7 0 72 0 0 0 116 18 1 13 21 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowup;
unicode = 8593;
},
{
glyphname = arrowright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,469,l),
(404,300,l),
(74,300,l),
(74,245,l),
(404,245,l),
(293,75,l),
(360,75,l),
(494,273,l),
(360,469,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 3 2 3 131 0 0 1 0 132 0 2 1 1 2 85 0 2 2 1 94 0 1 2 1 78 17 17 17 17 4 13 24 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowright;
unicode = 8594;
},
{
glyphname = arrowdown;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,482,l),
(283,482,l),
(283,148,l),
(116,258,l),
(116,193,l),
(313,58,l),
(508,193,l),
(508,258,l),
(342,147,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
8 5 4 3 2 1 0 7 0 71 0 0 0 116 22 1 13 21 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowdown;
unicode = 8595;
},
{
glyphname = arrowboth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(435,470,l),
(547,300,l),
(140,300,l),
(252,470,l),
(185,470,l),
(50,272,l),
(185,76,l),
(252,76,l),
(140,245,l),
(547,245,l),
(435,76,l),
(502,76,l),
(637,272,l),
(502,470,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
7 1 1 4 1 74 5 1 3 4 3 131 2 1 0 1 0 132 0 4 1 1 4 85 0 4 4 1 94 0 1 4 1 78 17 17 18 17 17 17 6 13 26 
CALL[ ]	/* CallFunction */";
};
width = 687;
}
);
note = arrowboth;
unicode = 8596;
},
{
glyphname = arrowupdn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(496,498,l),
(299,633,l),
(104,498,l),
(104,433,l),
(270,544,l),
(270,141,l),
(103,251,l),
(103,186,l),
(300,51,l),
(494,186,l),
(494,251,l),
(329,140,l),
(329,543,l),
(496,433,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
11 4 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowupdn;
unicode = 8597;
},
{
glyphname = uni2196;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(246,388,l),
(440,429,l),
(397,475,l),
(163,430,l),
(121,195,l),
(164,150,l),
(202,346,l),
(440,108,l),
(482,152,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
5 0 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni2196;
unicode = 8598;
},
{
glyphname = uni2197;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(450,425,l),
(217,469,l),
(174,423,l),
(368,383,l),
(131,147,l),
(173,102,l),
(410,339,l),
(450,144,l),
(494,189,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 2 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni2197;
unicode = 8599;
},
{
glyphname = uni2198;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(412,218,l),
(174,456,l),
(132,412,l),
(368,176,l),
(174,135,l),
(217,89,l),
(451,134,l),
(493,369,l),
(450,414,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
6 2 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni2198;
unicode = 8600;
},
{
glyphname = uni2199;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,462,l),
(204,225,l),
(164,420,l),
(120,375,l),
(164,139,l),
(397,95,l),
(440,141,l),
(246,181,l),
(483,417,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
7 2 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni2199;
unicode = 8601;
},
{
glyphname = uni219A;
layers = (
{
layerId = m01;
width = 600;
}
);
note = uni219A;
unicode = 8602;
},
{
glyphname = uni219B;
layers = (
{
layerId = m01;
width = 600;
}
);
note = uni219B;
unicode = 8603;
},
{
glyphname = uni21AE;
layers = (
{
layerId = m01;
width = 687;
}
);
note = uni21AE;
unicode = 8622;
},
{
glyphname = partialdiff;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(198,718,o),
(127,696,q),
(138,635,l),
(207,656,o),
(286,656,qs),
(409,656,o),
(549,502,o),
(549,362,qs),
(549,336,o),
(546,304,q),
(520,367,o),
(405,436,o),
(329,436,qs),
(256,436,o),
(143,382,o),
(80,281,o),
(80,215,qs),
(80,149,o),
(143,49,o),
(255,-6,o),
(326,-6,qs),
(467,-6,o),
(620,183,o),
(620,347,qs),
(620,524,o),
(444,718,o),
(286,718,qs)
);
},
{
closed = 1;
nodes = (
(250,55,o),
(151,143,o),
(151,215,qs),
(151,288,o),
(250,375,o),
(336,375,qs),
(389,375,o),
(473,333,o),
(520,260,o),
(520,215,qs),
(520,173,o),
(475,100,o),
(389,55,o),
(330,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
24 1 2 3 23 1 1 2 16 1 5 4 3 74 6 1 3 0 2 1 3 2 103 0 1 0 4 5 1 4 103 7 1 5 0 0 5 87 7 1 5 5 0 95 0 0 5 0 79 27 27 0 0 27 40 27 39 35 33 0 26 0 25 38 38 36 8 13 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = partialdiff;
unicode = 8706;
},
{
glyphname = emptyset;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(510,559,l),
(429,483,l),
(401,509,o),
(328,537,o),
(288,537,qs),
(231,537,o),
(135,481,o),
(79,386,o),
(79,329,qs),
(79,293,o),
(103,225,o),
(125,198,q),
(42,121,l),
(66,95,l),
(149,173,l),
(177,148,o),
(249,120,o),
(288,120,qs),
(345,120,o),
(441,176,o),
(497,272,o),
(497,329,qs),
(497,402,o),
(453,457,q),
(534,533,l)
);
},
{
closed = 1;
nodes = (
(131,372,o),
(173,444,o),
(245,486,o),
(288,486,qs),
(348,486,o),
(391,448,q),
(162,234,l),
(131,276,o),
(131,329,qs)
);
},
{
closed = 1;
nodes = (
(446,286,o),
(404,214,o),
(331,171,o),
(288,171,qs),
(230,171,o),
(187,208,q),
(416,422,l),
(446,381,o),
(446,329,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
24 1 2 1 36 35 27 26 22 12 9 7 3 2 11 1 0 3 3 74 23 1 1 72 10 1 0 71 0 1 0 2 3 1 2 103 0 3 0 0 3 87 0 3 3 0 95 0 0 3 0 79 39 40 43 37 4 13 24 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = emptyset;
unicode = 8709;
},
{
glyphname = uni2206;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0394;
}
);
width = 717;
}
);
note = uni2206;
unicode = 8710;
},
{
glyphname = product;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,-194,l),
(188,633,l),
(626,633,l),
(626,-194,l),
(699,-194,l),
(699,700,l),
(114,700,l),
(114,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 1 2 1 132 0 0 2 2 0 85 0 0 0 2 93 0 2 0 2 77 17 17 17 16 4 13 24 
CALL[ ]	/* CallFunction */";
};
width = 813;
}
);
note = product;
unicode = 8719;
},
{
glyphname = summation;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(453,228,l),
(453,279,l),
(157,636,l),
(613,636,l),
(613,700,l),
(57,700,l),
(57,649,l),
(384,254,l),
(45,-143,l),
(45,-194,l),
(619,-194,l),
(619,-130,l),
(144,-130,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
5 1 2 1 11 10 4 3 3 2 3 1 0 3 3 74 0 1 0 2 3 1 2 101 4 1 3 0 0 3 85 4 1 3 3 0 93 0 0 3 0 77 0 0 0 12 0 12 17 20 17 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 651;
}
);
note = summation;
unicode = 8721;
},
{
glyphname = minus;
kernLeft = plus;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,320,l),
(505,379,l),
(70,379,l),
(70,320,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = uni2215;
kernLeft = slash;
kernRight = slash;
layers = (
{
layerId = m01;
shapes = (
{
ref = slash;
}
);
width = 335;
}
);
note = uni2215;
unicode = 8725;
},
{
glyphname = uni2219;
layers = (
{
layerId = m01;
shapes = (
{
ref = periodcentered.case;
}
);
width = 272;
}
);
note = uni2219;
unicode = 8729;
},
{
glyphname = radical;
kernLeft = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(430,-102,l),
(252,380,l),
(70,380,l),
(70,321,l),
(200,321,l),
(394,-194,l),
(467,-194,l),
(794,742,l),
(725,742,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
7 1 0 1 1 74 4 1 3 2 3 131 0 0 1 0 132 0 2 1 1 2 85 0 2 2 1 93 0 1 2 1 77 0 0 0 8 0 8 17 17 17 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 796;
}
);
note = radical;
unicode = 8730;
},
{
glyphname = infinity;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,540,o),
(502,467,o),
(461,401,q),
(419,467,o),
(321,540,o),
(240,540,qs),
(185,540,o),
(97,491,o),
(46,404,o),
(46,350,qs),
(46,297,o),
(97,210,o),
(185,160,o),
(240,160,qs),
(321,160,o),
(419,233,o),
(461,299,q),
(502,233,o),
(600,160,o),
(681,160,qs),
(735,160,o),
(823,210,o),
(874,297,o),
(874,351,qs),
(874,405,o),
(824,491,o),
(735,540,o),
(681,540,qs)
);
},
{
closed = 1;
nodes = (
(184,216,o),
(105,293,o),
(105,350,qs),
(105,407,o),
(184,484,o),
(244,484,qs),
(290,484,o),
(357,449,o),
(404,393,o),
(430,350,q),
(404,307,o),
(357,251,o),
(290,216,o),
(244,216,qs)
);
},
{
closed = 1;
nodes = (
(631,216,o),
(564,251,o),
(517,307,o),
(491,350,q),
(517,393,o),
(564,449,o),
(631,484,o),
(677,484,qs),
(737,484,o),
(815,408,o),
(815,351,qs),
(815,293,o),
(737,216,o),
(677,216,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
51 31 24 10 4 5 4 1 74 8 3 2 2 6 1 4 5 2 4 103 10 7 9 3 5 0 0 5 87 10 7 9 3 5 5 0 95 1 1 0 5 0 79 42 42 28 28 0 0 42 55 42 54 48 46 28 41 28 40 36 34 0 27 0 26 38 36 38 11 13 23 
CALL[ ]	/* CallFunction */";
};
width = 920;
}
);
note = infinity;
unicode = 8734;
},
{
glyphname = integral;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,-199,o),
(228,-115,o),
(228,-43,qs),
(228,589,ls),
(228,637,o),
(274,688,o),
(317,688,qs),
(364,688,o),
(396,661,q),
(421,714,l),
(402,731,o),
(342,748,o),
(308,748,qs),
(236,748,o),
(157,665,o),
(157,593,qs),
(157,-39,ls),
(157,-87,o),
(111,-138,o),
(68,-138,qs),
(18,-138,o),
(-12,-111,q),
(-36,-165,l),
(-16,-182,o),
(43,-199,o),
(77,-199,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
15 1 2 1 16 3 2 0 2 2 1 3 0 3 74 0 1 0 2 0 1 2 103 0 0 3 3 0 87 0 0 0 3 95 4 1 3 0 3 79 0 0 0 25 0 24 36 37 36 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 385;
}
);
note = integral;
unicode = 8747;
},
{
glyphname = approxequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(444,386,o),
(511,464,o),
(513,538,q),
(465,538,l),
(463,493,o),
(422,441,o),
(387,441,qs),
(366,441,o),
(330,463,o),
(304,486,qs),
(270,514,o),
(220,543,o),
(186,543,qs),
(131,543,o),
(64,465,o),
(62,392,q),
(110,392,l),
(112,436,o),
(153,487,o),
(188,487,qs),
(209,487,o),
(244,466,o),
(271,443,qs),
(305,415,o),
(355,386,o),
(389,386,qs)
);
},
{
closed = 1;
nodes = (
(444,157,o),
(511,235,o),
(513,308,q),
(465,308,l),
(463,264,o),
(422,212,o),
(387,212,qs),
(366,212,o),
(330,234,o),
(304,257,qs),
(270,285,o),
(220,314,o),
(186,314,qs),
(131,314,o),
(64,236,o),
(62,162,q),
(110,162,l),
(112,206,o),
(153,258,o),
(188,258,qs),
(209,258,o),
(244,237,o),
(271,214,qs),
(305,186,o),
(355,157,o),
(389,157,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 104 values pushed */
0 4 2 0 2 4 0 126 0 1 3 5 3 1 5 126 0 10 8 6 8 10 6 126 0 7 9 11 9 7 11 126 0 2 0 0 3 2 0 103 0 3 12 1 5 8 3 5 103 0 8 0 6 9 8 6 103 0 9 7 11 9 87 0 9 9 11 95 13 1 11 9 11 79 26 26 0 0 26 51 26 50 48 47 45 43 39 37 35 34 32 30 0 25 0 24 18 36 34 18 36 14 13 25 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = approxequal;
unicode = 8776;
},
{
glyphname = uni2249;
layers = (
{
layerId = m01;
width = 575;
}
);
note = uni2249;
unicode = 8777;
},
{
glyphname = notequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(505,495,l),
(398,495,l),
(466,618,l),
(405,618,l),
(337,495,l),
(70,495,l),
(70,436,l),
(304,436,l),
(210,264,l),
(70,264,l),
(70,205,l),
(177,205,l),
(109,82,l),
(170,82,l),
(238,205,l),
(505,205,l),
(505,264,l),
(271,264,l),
(365,436,l),
(505,436,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 7 6 6 7 110 0 2 1 1 2 111 8 1 6 10 9 2 5 0 6 5 102 4 1 0 1 1 0 85 4 1 0 0 1 93 3 1 1 0 1 77 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 6 7 131 0 2 1 2 132 8 1 6 10 9 2 5 0 6 5 102 4 1 0 1 1 0 85 4 1 0 0 1 93 3 1 1 0 1 77 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
0 0 0 19 0 19 17 17 17 17 17 17 17 17 17 11 13 29 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = notequal;
unicode = 8800;
},
{
glyphname = lessequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,409,l),
(70,346,l),
(505,175,l),
(505,238,l),
(145,378,l),
(505,517,l),
(505,580,l)
);
},
{
closed = 1;
nodes = (
(505,0,l),
(505,59,l),
(70,59,l),
(70,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
6 5 4 3 2 1 0 7 0 72 0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 23 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = lessequal;
unicode = 8804;
},
{
glyphname = greaterequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(70,517,l),
(430,378,l),
(70,238,l),
(70,175,l),
(505,346,l),
(505,409,l),
(70,580,l)
);
},
{
closed = 1;
nodes = (
(505,0,l),
(505,59,l),
(70,59,l),
(70,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
6 5 4 3 2 1 0 7 0 72 0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 23 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = greaterequal;
unicode = 8805;
},
{
glyphname = uni226E;
layers = (
{
layerId = m01;
width = 575;
}
);
note = uni226E;
unicode = 8814;
},
{
glyphname = uni226F;
layers = (
{
layerId = m01;
width = 575;
}
);
note = uni226F;
unicode = 8815;
},
{
glyphname = uni2270;
layers = (
{
layerId = m01;
width = 575;
}
);
note = uni2270;
unicode = 8816;
},
{
glyphname = uni2271;
layers = (
{
layerId = m01;
width = 575;
}
);
note = uni2271;
unicode = 8817;
},
{
glyphname = filledbox;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,71,l),
(494,459,l),
(106,459,l),
(106,71,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = filledbox;
unicode = 9632;
},
{
glyphname = uni25A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,71,l),
(494,459,l),
(106,459,l),
(106,71,l)
);
},
{
closed = 1;
nodes = (
(149,414,l),
(451,414,l),
(451,117,l),
(149,117,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 2 3 0 2 101 4 1 3 1 1 3 85 4 1 3 3 1 93 0 1 3 1 77 4 4 4 7 4 7 18 17 16 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25A1;
unicode = 9633;
},
{
glyphname = triagup;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,52,l),
(300,478,l),
(87,52,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 116 17 1 13 21 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = triagup;
unicode = 9650;
},
{
glyphname = uni25B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(513,52,l),
(300,478,l),
(87,52,l)
);
},
{
closed = 1;
nodes = (
(300,392,l),
(454,91,l),
(146,91,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 1 72 2 1 1 0 0 1 85 2 1 1 1 0 93 0 0 1 0 77 3 3 3 5 3 5 17 3 13 21 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25B3;
unicode = 9651;
},
{
glyphname = uni25B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,53,l),
(541,266,l),
(115,479,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 1 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25B6;
unicode = 9654;
},
{
glyphname = uni25B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(115,53,l),
(541,266,l),
(115,479,l)
);
},
{
closed = 1;
nodes = (
(459,266,l),
(152,115,l),
(152,417,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 3 2 1 2 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25B7;
unicode = 9655;
},
{
glyphname = triagdn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,52,l),
(513,478,l),
(87,478,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
1 1 0 71 1 1 0 0 116 0 0 0 2 0 2 2 13 20 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = triagdn;
unicode = 9660;
},
{
glyphname = uni25BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,52,l),
(513,478,l),
(87,478,l)
);
},
{
closed = 1;
nodes = (
(454,439,l),
(300,138,l),
(146,439,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
1 1 1 71 2 1 0 1 1 0 85 2 1 0 0 1 93 0 1 0 1 77 0 0 5 4 0 2 0 2 3 13 20 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25BD;
unicode = 9661;
},
{
glyphname = uni25C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,478,l),
(58,265,l),
(484,52,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 1 1 48 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = uni25C0;
unicode = 9664;
},
{
glyphname = uni25C1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(484,478,l),
(58,265,l),
(484,52,l)
);
},
{
closed = 1;
nodes = (
(140,265,l),
(447,416,l),
(447,114,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
5 3 2 1 2 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25C1;
unicode = 9665;
},
{
glyphname = uni25C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,-9,l),
(574,265,l),
(300,540,l),
(25,265,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
2 0 1 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25C6;
unicode = 9670;
},
{
glyphname = uni25C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(300,-9,l),
(574,265,l),
(300,540,l),
(25,265,l)
);
},
{
closed = 1;
nodes = (
(300,475,l),
(514,265,l),
(300,55,l),
(85,265,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
6 4 2 0 2 48 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni25C7;
unicode = 9671;
},
{
glyphname = lozenge;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,330,l),
(251,635,l),
(46,330,l),
(250,22,l)
);
},
{
closed = 1;
nodes = (
(100,330,l),
(251,552,l),
(401,330,l),
(250,107,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
7 5 3 1 2 48 
CALL[ ]	/* CallFunction */";
};
width = 501;
}
);
note = lozenge;
unicode = 9674;
},
{
glyphname = uni27E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(269,-194,l),
(113,274,l),
(269,742,l),
(205,742,l),
(44,274,l),
(205,-194,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
3 1 1 0 1 74 0 0 1 0 131 0 1 1 116 18 17 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 320;
}
);
note = uni27E8;
unicode = 10216;
},
{
glyphname = uni27E9;
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (320,548);
ref = uni27E8;
}
);
width = 320;
}
);
note = uni27E9;
unicode = 10217;
},
{
glyphname = uniA78B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,298,l),
(157,700,l),
(84,700,l),
(84,298,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 93 0 0 0 66 1 76 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 241;
}
);
note = uniA78B;
unicode = 42891;
},
{
glyphname = uniA78C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,297,l),
(156,652,l),
(85,652,l),
(84,297,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 240;
}
);
note = uniA78C;
unicode = 42892;
},
{
glyphname = fi;
kernLeft = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = f;
},
{
pos = (419,0);
ref = dotlessi;
},
{
pos = (854,0);
ref = uni0307.i;
}
);
width = 688;
}
);
note = fi;
unicode = 64257;
},
{
glyphname = fl;
kernLeft = t;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
ref = f;
},
{
pos = (339,0);
ref = l;
}
);
width = 608;
}
);
note = fl;
unicode = 64258;
},
{
glyphname = Iacute_J.loclNLD;
kernLeft = B;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,757,l),
(329,881,l),
(246,881,l),
(108,757,l)
);
},
{
closed = 1;
nodes = (
(596,757,l),
(758,881,l),
(675,881,l),
(537,757,l)
);
},
{
closed = 1;
nodes = (
(458,-5,o),
(610,154,o),
(610,303,qs),
(610,700,l),
(536,700,l),
(536,301,ls),
(536,181,o),
(427,61,o),
(325,61,qs),
(272,61,o),
(170,93,o),
(128,123,q),
(98,65,l),
(144,33,o),
(262,-5,o),
(327,-5,qs)
);
},
{
closed = 1;
nodes = (
(182,302,l),
(182,700,l),
(108,700,l),
(108,302,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
11 10 2 4 8 1 74 2 1 0 1 0 131 3 1 1 5 1 131 0 8 8 5 93 7 1 5 5 66 75 0 4 4 6 95 9 1 6 6 76 6 76 8 8 27 26 25 24 8 23 8 22 19 38 17 17 17 16 10 10 26 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = Iacute_J.loclNLD;
},
{
glyphname = A.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,706,o),
(108,547,o),
(108,397,qs),
(108,0,l),
(180,0,l),
(180,206,l),
(620,206,l),
(620,0,l),
(693,0,l),
(693,397,ls),
(693,547,o),
(536,706,o),
(400,706,qs)
);
},
{
closed = 1;
nodes = (
(180,404,ls),
(180,521,o),
(296,640,o),
(400,640,qs),
(504,640,o),
(620,521,o),
(620,404,qs),
(620,270,l),
(180,270,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
7 1 5 0 1 0 5 1 101 0 4 4 3 95 6 1 3 3 37 75 2 1 0 0 33 0 76 13 13 0 0 13 21 13 21 18 16 0 12 0 11 17 17 19 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 801;
}
);
note = A.ss01;
},
{
glyphname = Aacute.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = acutecomb.case;
}
);
width = 801;
}
);
note = Aacute.ss01;
},
{
glyphname = Abreve.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni0306.case;
}
);
width = 801;
}
);
note = Abreve.ss01;
},
{
glyphname = uni1EAE.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0306.loclVIET;
},
{
pos = (700,263);
ref = acutecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EAE.ss01;
},
{
glyphname = uni1EB6.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = dotbelowcomb;
},
{
pos = (700,0);
ref = uni0306.case;
}
);
width = 801;
}
);
note = uni1EB6.ss01;
},
{
glyphname = uni1EB0.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0306.loclVIET;
},
{
pos = (700,263);
ref = gravecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EB0.ss01;
},
{
glyphname = uni1EB2.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0306.loclVIET;
},
{
pos = (700,244);
ref = hookabovecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EB2.ss01;
},
{
glyphname = uni1EB4.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0306.loclVIET;
},
{
pos = (700,263);
ref = tildecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EB4.ss01;
},
{
glyphname = uni01CD.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni030C.case;
}
);
width = 801;
}
);
note = uni01CD.ss01;
},
{
glyphname = Acircumflex.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni0302.case;
}
);
width = 801;
}
);
note = Acircumflex.ss01;
},
{
glyphname = uni1EA4.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0302.loclVIET;
},
{
pos = (852,234);
ref = acutecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EA4.ss01;
},
{
glyphname = uni1EAC.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = dotbelowcomb;
},
{
pos = (700,0);
ref = uni0302.case;
}
);
width = 801;
}
);
note = uni1EAC.ss01;
},
{
glyphname = uni1EA6.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0302.loclVIET;
},
{
pos = (852,234);
ref = gravecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EA6.ss01;
},
{
glyphname = uni1EA8.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0302.loclVIET;
},
{
pos = (820,224);
ref = hookabovecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EA8.ss01;
},
{
glyphname = uni1EAA.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,150);
ref = uni0302.loclVIET;
},
{
pos = (700,268);
ref = tildecomb.loclVIET;
}
);
width = 801;
}
);
note = uni1EAA.ss01;
},
{
glyphname = uni0200.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni030F.case;
}
);
width = 801;
}
);
note = uni0200.ss01;
},
{
glyphname = Adieresis.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni0308.case;
}
);
width = 801;
}
);
note = Adieresis.ss01;
},
{
glyphname = uni1EA0.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = dotbelowcomb;
}
);
width = 801;
}
);
note = uni1EA0.ss01;
},
{
glyphname = Agrave.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = gravecomb.case;
}
);
width = 801;
}
);
note = Agrave.ss01;
},
{
glyphname = uni1EA2.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = hookabovecomb.case;
}
);
width = 801;
}
);
note = uni1EA2.ss01;
},
{
glyphname = uni0202.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni0311.case;
}
);
width = 801;
}
);
note = uni0202.ss01;
},
{
glyphname = Amacron.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni0304.case;
}
);
width = 801;
}
);
note = Amacron.ss01;
},
{
glyphname = Aogonek.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (992,0);
ref = uni0328;
}
);
width = 801;
}
);
note = Aogonek.ss01;
},
{
glyphname = Aring.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,175);
ref = uni030A;
}
);
width = 801;
}
);
note = Aring.ss01;
},
{
glyphname = Aringacute.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,175);
ref = uni030A0301;
}
);
width = 801;
}
);
note = Aringacute.ss01;
},
{
glyphname = Atilde.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = tildecomb.case;
}
);
width = 801;
}
);
note = Atilde.ss01;
},
{
glyphname = AE.ss01;
kernLeft = A;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(607,325,l),
(971,325,l),
(971,386,l),
(607,386,l),
(607,637,l),
(1014,637,l),
(1014,700,l),
(382,700,ls),
(246,700,o),
(98,542,o),
(98,397,qs),
(98,0,l),
(172,0,l),
(172,216,l),
(534,216,l),
(534,0,l),
(1029,0,l),
(1029,63,l),
(607,63,l)
);
},
{
closed = 1;
nodes = (
(172,395,ls),
(172,511,o),
(282,633,o),
(387,633,qs),
(534,633,l),
(534,278,l),
(172,278,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 5 0 6 9 5 6 101 11 1 9 0 1 7 9 1 101 8 1 4 4 3 93 0 3 3 32 75 10 1 7 7 0 93 2 1 0 0 33 0 76 19 19 0 0 19 25 19 25 22 20 0 18 0 18 17 17 17 35 17 17 17 12 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1069;
}
);
note = AE.ss01;
},
{
glyphname = AEacute.ss01;
kernLeft = A;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = AE.ss01;
},
{
pos = (830,0);
ref = acutecomb.case;
}
);
width = 1069;
}
);
note = AEacute.ss01;
},
{
glyphname = uni01C4.ss01;
kernLeft = B;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (798,0);
ref = Z.ss01;
},
{
pos = (1432,0);
ref = uni030C.case;
}
);
width = 1456;
}
);
note = uni01C4.ss01;
},
{
glyphname = uni01C5.ss01;
kernLeft = B;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = D;
},
{
pos = (826,0);
ref = z.ss01;
},
{
pos = (1386,1);
ref = uni030C;
}
);
width = 1347;
}
);
note = uni01C5.ss01;
},
{
glyphname = E.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(546,99,o),
(418,57,o),
(344,57,qs),
(238,57,o),
(129,131,o),
(129,194,qs),
(129,258,o),
(229,323,o),
(315,323,qs),
(492,323,l),
(492,387,l),
(318,387,ls),
(242,387,o),
(159,451,o),
(159,510,qs),
(159,569,o),
(262,643,o),
(359,643,qs),
(469,643,o),
(561,591,q),
(584,650,l),
(541,677,o),
(420,706,o),
(356,706,qs),
(269,706,o),
(146,655,o),
(85,568,o),
(85,515,qs),
(85,459,o),
(141,376,o),
(191,357,q),
(130,340,o),
(55,252,o),
(55,189,qs),
(55,132,o),
(120,44,o),
(249,-6,o),
(341,-6,qs),
(428,-6,o),
(571,39,o),
(614,80,q),
(586,136,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
20 1 2 1 21 1 3 2 10 1 4 3 41 1 5 4 4 74 0 3 0 4 5 3 4 101 0 2 2 1 95 0 1 1 37 75 0 5 5 0 95 0 0 0 38 0 76 36 33 36 36 44 34 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = E.ss01;
},
{
glyphname = Eacute.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = acutecomb.case;
}
);
width = 634;
}
);
note = Eacute.ss01;
},
{
glyphname = Ebreve.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0306.case;
}
);
width = 634;
}
);
note = Ebreve.ss01;
},
{
glyphname = Ecaron.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni030C.case;
}
);
width = 634;
}
);
note = Ecaron.ss01;
},
{
glyphname = uni1E1C.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0327;
},
{
pos = (646,0);
ref = uni0306.case;
}
);
width = 634;
}
);
note = uni1E1C.ss01;
},
{
glyphname = Ecircumflex.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0302.case;
}
);
width = 634;
}
);
note = Ecircumflex.ss01;
},
{
glyphname = uni1EBE.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,150);
ref = uni0302.loclVIET;
},
{
pos = (798,234);
ref = acutecomb.loclVIET;
}
);
width = 634;
}
);
note = uni1EBE.ss01;
},
{
glyphname = uni1EC6.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = dotbelowcomb;
},
{
pos = (646,0);
ref = uni0302.case;
}
);
width = 634;
}
);
note = uni1EC6.ss01;
},
{
glyphname = uni1EC0.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,150);
ref = uni0302.loclVIET;
},
{
pos = (798,234);
ref = gravecomb.loclVIET;
}
);
width = 634;
}
);
note = uni1EC0.ss01;
},
{
glyphname = uni1EC2.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,150);
ref = uni0302.loclVIET;
},
{
pos = (766,224);
ref = hookabovecomb.loclVIET;
}
);
width = 634;
}
);
note = uni1EC2.ss01;
},
{
glyphname = uni1EC4.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,150);
ref = uni0302.loclVIET;
},
{
pos = (646,268);
ref = tildecomb.loclVIET;
}
);
width = 634;
}
);
note = uni1EC4.ss01;
},
{
glyphname = uni0204.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni030F.case;
}
);
width = 634;
}
);
note = uni0204.ss01;
},
{
glyphname = Edieresis.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0308.case;
}
);
width = 634;
}
);
note = Edieresis.ss01;
},
{
glyphname = Edotaccent.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0307.case;
}
);
width = 634;
}
);
note = Edotaccent.ss01;
},
{
glyphname = uni1EB8.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = dotbelowcomb;
}
);
width = 634;
}
);
note = uni1EB8.ss01;
},
{
glyphname = Egrave.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = gravecomb.case;
}
);
width = 634;
}
);
note = Egrave.ss01;
},
{
glyphname = uni1EBA.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = hookabovecomb.case;
}
);
width = 634;
}
);
note = uni1EBA.ss01;
},
{
glyphname = uni0206.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0311.case;
}
);
width = 634;
}
);
note = uni0206.ss01;
},
{
glyphname = Emacron.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0304.case;
}
);
width = 634;
}
);
note = Emacron.ss01;
},
{
glyphname = uni1E16.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,150);
ref = uni0304.loclVIET;
},
{
pos = (646,282);
ref = acutecomb.loclVIET;
}
);
width = 634;
}
);
note = uni1E16.ss01;
},
{
glyphname = uni1E14.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,150);
ref = uni0304.loclVIET;
},
{
pos = (646,282);
ref = gravecomb.loclVIET;
}
);
width = 634;
}
);
note = uni1E14.ss01;
},
{
glyphname = Eogonek.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(497,-176,o),
(461,-146,o),
(461,-118,qs),
(461,-80,o),
(527,15,o),
(614,78,q),
(586,136,l),
(545,100,o),
(416,57,o),
(344,57,qs),
(238,57,o),
(129,131,o),
(129,194,qs),
(129,258,o),
(229,323,o),
(315,323,qs),
(492,323,l),
(492,387,l),
(318,387,ls),
(242,387,o),
(159,451,o),
(159,510,qs),
(159,569,o),
(262,643,o),
(359,643,qs),
(469,643,o),
(561,591,q),
(584,650,l),
(541,677,o),
(420,706,o),
(356,706,qs),
(269,706,o),
(146,655,o),
(85,568,o),
(85,515,qs),
(85,459,o),
(141,376,o),
(191,357,q),
(130,340,o),
(55,252,o),
(55,189,qs),
(55,132,o),
(120,44,o),
(249,-6,o),
(341,-6,qs),
(410,-6,o),
(470,9,q),
(409,-53,o),
(409,-125,qs),
(409,-168,o),
(469,-220,o),
(519,-220,qs),
(568,-220,o),
(604,-196,q),
(588,-157,l),
(565,-176,o),
(526,-176,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
28 1 3 2 29 1 4 3 18 1 5 4 50 49 2 6 5 9 1 1 6 1 1 7 1 2 1 0 7 7 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 0 5 6 4 5 101 0 3 3 2 95 0 2 2 37 75 0 6 6 1 95 0 1 1 38 75 8 1 7 7 0 95 0 0 0 41 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 4 0 5 6 4 5 101 8 1 7 0 0 7 0 99 0 3 3 2 95 0 2 2 37 75 0 6 6 1 95 0 1 1 38 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 56 0 55 36 33 36 36 44 37 35 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 634;
}
);
note = Eogonek.ss01;
},
{
glyphname = uni1EBC.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = tildecomb.case;
}
);
width = 634;
}
);
note = uni1EBC.ss01;
},
{
glyphname = F.ss01;
kernLeft = A.ss01;
kernRight = sterling;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,640,o),
(560,590,q),
(587,651,l),
(510,706,o),
(383,706,qs),
(252,706,o),
(108,575,o),
(108,460,qs),
(108,0,l),
(182,0,l),
(182,297,l),
(516,297,l),
(516,361,l),
(182,361,l),
(182,459,ls),
(182,547,o),
(283,640,o),
(386,640,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
14 1 4 3 15 1 0 4 2 74 0 0 0 1 2 0 1 101 5 1 4 4 3 95 0 3 3 37 75 0 2 2 33 2 76 0 0 0 17 0 16 35 17 17 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = F.ss01;
},
{
glyphname = G.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(568,96,o),
(465,59,o),
(410,59,qs),
(335,59,o),
(204,128,o),
(125,259,o),
(125,348,qs),
(125,431,o),
(203,565,o),
(340,640,o),
(425,640,qs),
(553,640,o),
(636,558,q),
(682,605,l),
(636,655,o),
(502,706,o),
(422,706,qs),
(316,706,o),
(148,613,o),
(52,450,o),
(52,348,qs),
(52,238,o),
(150,78,o),
(311,-6,o),
(405,-6,qs),
(466,-6,o),
(573,27,o),
(613,59,q),
(613,0,l),
(678,0,l),
(678,350,l),
(607,350,l),
(607,134,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
19 18 2 0 4 32 1 5 0 2 74 4 1 5 1 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 4 3 95 0 3 3 37 75 0 0 0 1 95 2 1 1 1 33 75 0 5 5 1 95 2 1 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 4 4 3 95 0 3 3 37 75 0 0 0 1 93 0 1 1 33 75 0 5 5 2 95 0 2 2 38 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 36 38 35 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 773;
}
);
note = G.ss01;
},
{
glyphname = Gbreve.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (708,0);
ref = uni0306.case;
}
);
width = 773;
}
);
note = Gbreve.ss01;
},
{
glyphname = Gcaron.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (708,0);
ref = uni030C.case;
}
);
width = 773;
}
);
note = Gcaron.ss01;
},
{
glyphname = Gcircumflex.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (708,0);
ref = uni0302.case;
}
);
width = 773;
}
);
note = Gcircumflex.ss01;
},
{
glyphname = Gcommaaccent.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (704,1);
ref = uni0326;
}
);
width = 773;
}
);
note = Gcommaaccent.ss01;
},
{
glyphname = Gdotaccent.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (708,0);
ref = uni0307.case;
}
);
width = 773;
}
);
note = Gdotaccent.ss01;
},
{
glyphname = uni1E20.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (708,0);
ref = uni0304.case;
}
);
width = 773;
}
);
note = uni1E20.ss01;
},
{
glyphname = uni01E4.ss01;
kernLeft = at;
kernRight = G;
layers = (
{
layerId = m01;
shapes = (
{
ref = G.ss01;
},
{
pos = (862,-120);
ref = uni0335.case;
scale = (0.9716,1);
}
);
width = 811;
}
);
note = uni01E4.ss01;
},
{
glyphname = I.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(401,700,l),
(44,700,l),
(44,636,l),
(186,636,l),
(186,64,l),
(44,64,l),
(44,0,l),
(401,0,l),
(401,64,l),
(259,64,l),
(259,636,l),
(401,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
6 5 2 3 3 4 93 0 4 4 32 75 2 1 0 0 1 93 0 1 1 33 1 76 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 445;
}
);
note = I.ss01;
},
{
glyphname = IJ.ss01;
kernLeft = B;
kernRight = IJ.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(458,-106,o),
(610,52,o),
(610,202,qs),
(610,700,l),
(536,700,l),
(536,199,ls),
(536,79,o),
(429,-40,o),
(329,-40,qs),
(273,-40,o),
(170,-8,o),
(128,22,q),
(98,-37,l),
(143,-69,o),
(262,-106,o),
(327,-106,qs)
);
},
{
closed = 1;
nodes = (
(182,202,l),
(182,700,l),
(108,700,l),
(108,202,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
3 2 2 0 4 1 74 0 0 5 1 2 0 2 99 0 4 4 1 93 3 1 1 1 32 4 76 0 0 19 18 17 16 0 15 0 14 19 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = IJ.ss01;
},
{
glyphname = Iacute.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = acutecomb.case;
}
);
width = 445;
}
);
note = Iacute.ss01;
},
{
glyphname = Iacute_J.loclNLD.ss01;
kernLeft = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(167,757,l),
(329,881,l),
(246,881,l),
(108,757,l)
);
},
{
closed = 1;
nodes = (
(596,757,l),
(758,881,l),
(675,881,l),
(537,757,l)
);
},
{
closed = 1;
nodes = (
(458,-105,o),
(610,54,o),
(610,203,qs),
(610,700,l),
(536,700,l),
(536,201,ls),
(536,81,o),
(427,-39,o),
(325,-39,qs),
(272,-39,o),
(170,-7,o),
(128,23,q),
(98,-35,l),
(144,-67,o),
(262,-105,o),
(327,-105,qs)
);
},
{
closed = 1;
nodes = (
(182,202,l),
(182,700,l),
(108,700,l),
(108,202,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
11 10 2 4 8 1 74 2 1 0 1 0 131 3 1 1 5 1 131 0 4 9 1 6 4 6 99 0 8 8 5 93 7 1 5 5 32 8 76 8 8 27 26 25 24 8 23 8 22 19 38 17 17 17 16 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 718;
}
);
note = Iacute_J.loclNLD.ss01;
},
{
glyphname = Ibreve.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni0306.case;
}
);
width = 445;
}
);
note = Ibreve.ss01;
},
{
glyphname = Icircumflex.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni0302.case;
}
);
width = 445;
}
);
note = Icircumflex.ss01;
},
{
glyphname = uni0208.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni030F.case;
}
);
width = 445;
}
);
note = uni0208.ss01;
},
{
glyphname = Idieresis.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni0308.case;
}
);
width = 445;
}
);
note = Idieresis.ss01;
},
{
glyphname = uni1E2E.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,150);
ref = uni0308.loclVIET;
},
{
pos = (523,282);
ref = acutecomb.loclVIET;
}
);
width = 445;
}
);
note = uni1E2E.ss01;
},
{
glyphname = Idotaccent.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni0307.case;
}
);
width = 445;
}
);
note = Idotaccent.ss01;
},
{
glyphname = uni1ECA.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = dotbelowcomb;
}
);
width = 445;
}
);
note = uni1ECA.ss01;
},
{
glyphname = Igrave.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = gravecomb.case;
}
);
width = 445;
}
);
note = Igrave.ss01;
},
{
glyphname = uni1EC8.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = hookabovecomb.case;
}
);
width = 445;
}
);
note = uni1EC8.ss01;
},
{
glyphname = uni020A.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni0311.case;
}
);
width = 445;
}
);
note = uni020A.ss01;
},
{
glyphname = Imacron.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = uni0304.case;
}
);
width = 445;
}
);
note = Imacron.ss01;
},
{
glyphname = Iogonek.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (559,0);
ref = uni0328.i;
}
);
width = 445;
}
);
note = Iogonek.ss01;
},
{
glyphname = Itilde.ss01;
kernLeft = I.ss01;
kernRight = I.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = I.ss01;
},
{
pos = (523,0);
ref = tildecomb.case;
}
);
width = 445;
}
);
note = Itilde.ss01;
},
{
glyphname = J.ss01;
kernLeft = J.ss01;
kernRight = IJ.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(288,-106,o),
(391,5,o),
(391,115,qs),
(391,700,l),
(62,700,l),
(62,636,l),
(318,636,l),
(318,112,ls),
(318,-42,o),
(187,-42,qs),
(142,-42,o),
(66,2,o),
(37,44,q),
(-5,-6,l),
(27,-54,o),
(128,-106,o),
(188,-106,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
3 2 2 0 1 1 74 0 0 4 1 3 0 3 99 0 1 1 2 93 0 2 2 32 1 76 0 0 0 16 0 15 17 18 37 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = J.ss01;
},
{
glyphname = Jcircumflex.ss01;
kernLeft = J.ss01;
kernRight = IJ.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = J.ss01;
},
{
pos = (527,0);
ref = uni0302.case;
}
);
width = 500;
}
);
note = Jcircumflex.ss01;
},
{
glyphname = uni01C7.ss01;
kernLeft = B;
kernRight = IJ.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = L;
},
{
pos = (619,0);
ref = J.ss01;
}
);
width = 1119;
}
);
note = uni01C7.ss01;
},
{
glyphname = M.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(782,706,o),
(661,639,o),
(631,575,q),
(605,637,o),
(488,706,o),
(406,706,qs),
(328,706,o),
(214,643,o),
(185,583,q),
(185,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,419,ls),
(188,531,o),
(295,640,o),
(390,640,qs),
(479,640,o),
(579,537,o),
(579,435,qs),
(579,0,l),
(652,0,l),
(652,419,ls),
(652,531,o),
(758,640,o),
(852,640,qs),
(941,640,o),
(1044,537,o),
(1044,435,qs),
(1044,0,l),
(1117,0,l),
(1117,437,ls),
(1117,568,o),
(983,706,o),
(863,706,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
31 25 2 0 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
3 1 1 1 5 95 8 7 6 3 5 5 32 75 4 2 2 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 5 5 32 75 3 1 1 1 6 95 8 7 2 6 6 37 75 4 2 2 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 33 35 17 19 35 19 35 19 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1226;
}
);
note = M.ss01;
},
{
glyphname = uni1E42.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = M.ss01;
},
{
pos = (916,0);
ref = dotbelowcomb;
}
);
width = 1226;
}
);
note = uni1E42.ss01;
},
{
glyphname = N.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,706,o),
(185,582,q),
(185,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,398,ls),
(188,519,o),
(304,640,o),
(408,640,qs),
(507,640,o),
(617,526,o),
(617,415,qs),
(617,0,l),
(691,0,l),
(691,417,ls),
(691,556,o),
(548,706,o),
(422,706,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 0 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
0 1 1 3 95 5 4 2 3 3 32 75 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 3 3 32 75 0 1 1 4 95 5 1 4 4 37 75 2 1 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 18 0 17 17 19 35 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = N.ss01;
},
{
glyphname = uni01CA.ss01;
kernLeft = B;
kernRight = IJ.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (799,0);
ref = J.ss01;
}
);
width = 1299;
}
);
note = uni01CA.ss01;
},
{
glyphname = Nacute.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (702,0);
ref = acutecomb.case;
}
);
width = 799;
}
);
note = Nacute.ss01;
},
{
glyphname = Ncaron.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (702,0);
ref = uni030C.case;
}
);
width = 799;
}
);
note = Ncaron.ss01;
},
{
glyphname = Ncommaaccent.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (701,0);
ref = uni0326;
}
);
width = 799;
}
);
note = Ncommaaccent.ss01;
},
{
glyphname = uni1E44.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (702,0);
ref = uni0307.case;
}
);
width = 799;
}
);
note = uni1E44.ss01;
},
{
glyphname = uni1E46.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (701,0);
ref = dotbelowcomb;
}
);
width = 799;
}
);
note = uni1E46.ss01;
},
{
glyphname = Eng.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,706,o),
(185,582,q),
(185,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,398,ls),
(188,519,o),
(304,640,o),
(408,640,qs),
(507,640,o),
(617,526,o),
(617,415,qs),
(617,21,ls),
(617,-57,o),
(553,-134,o),
(488,-134,qs),
(445,-134,o),
(372,-95,o),
(346,-59,q),
(309,-113,l),
(340,-154,o),
(434,-199,o),
(489,-199,qs),
(589,-199,o),
(691,-87,o),
(691,23,qs),
(691,417,ls),
(691,556,o),
(548,706,o),
(422,706,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
28 1 3 2 10 9 2 1 3 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 2 2 4 95 6 5 2 4 4 32 75 0 3 3 33 75 0 1 1 0 95 0 0 0 41 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 4 32 75 0 2 2 5 95 6 1 5 5 37 75 0 3 3 33 75 0 1 1 0 95 0 0 0 41 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 30 0 29 17 19 37 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 799;
}
);
note = Eng.ss01;
},
{
glyphname = uni01CB.ss01;
kernLeft = B;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (799,0);
ref = uni0237;
},
{
pos = (1239,1);
ref = uni0307.i;
}
);
width = 1073;
}
);
note = uni01CB.ss01;
},
{
glyphname = uni1E48.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (701,0);
ref = uni0331;
}
);
width = 799;
}
);
note = uni1E48.ss01;
},
{
glyphname = Ntilde.ss01;
kernLeft = B;
kernRight = M.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = N.ss01;
},
{
pos = (702,0);
ref = tildecomb.case;
}
);
width = 799;
}
);
note = Ntilde.ss01;
},
{
glyphname = Q.ss01;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(787,451,o),
(691,614,o),
(524,706,o),
(420,706,qs),
(316,706,o),
(147,613,o),
(52,451,o),
(52,350,qs),
(52,255,o),
(137,100,o),
(288,4,o),
(383,-4,q),
(383,-135,l),
(456,-135,l),
(456,-4,l),
(551,4,o),
(702,99,o),
(787,255,o),
(787,350,qs)
);
},
{
closed = 1;
nodes = (
(454,235,l),
(385,235,l),
(385,62,l),
(310,70,o),
(192,148,o),
(125,274,o),
(125,350,qs),
(125,432,o),
(202,564,o),
(337,640,o),
(420,640,qs),
(503,640,o),
(637,564,o),
(713,432,o),
(713,350,qs),
(713,274,o),
(647,148,o),
(529,69,o),
(454,62,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
37 34 6 3 4 0 3 1 74 0 3 0 0 3 0 97 0 2 2 1 95 0 1 1 37 2 76 24 42 40 20 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 839;
}
);
note = Q.ss01;
},
{
glyphname = uni018F.ss01;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(321,706,o),
(182,656,o),
(133,610,q),
(177,559,l),
(265,640,o),
(401,640,qs),
(493,640,o),
(638,542,o),
(670,462,q),
(76,218,l),
(116,114,o),
(293,-6,o),
(409,-6,qs),
(508,-6,o),
(671,88,o),
(765,251,o),
(765,351,qs),
(765,452,o),
(671,614,o),
(505,706,o),
(401,706,qs)
);
},
{
closed = 1;
nodes = (
(691,264,o),
(618,132,o),
(489,58,o),
(409,58,qs),
(329,58,o),
(206,127,o),
(171,189,q),
(687,402,l),
(691,381,o),
(691,353,qs),
(691,346,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
24 17 16 11 10 5 3 1 1 74 0 1 1 2 95 4 1 2 2 37 75 0 3 3 0 95 0 0 0 38 0 76 0 0 28 26 0 20 0 19 37 38 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 817;
}
);
note = uni018F.ss01;
},
{
glyphname = T.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(455,706,o),
(290,706,qs),
(128,706,o),
(-2,629,q),
(25,571,l),
(131,632,o),
(254,640,q),
(254,0,l),
(328,0,l),
(328,640,l),
(453,631,o),
(556,571,q),
(583,629,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
2 1 1 2 12 8 7 3 0 1 2 74 0 1 1 2 95 0 2 2 37 75 0 0 0 33 0 76 35 17 19 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = T.ss01;
},
{
glyphname = Tbar.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = T.ss01;
},
{
pos = (590,-20);
ref = uni0335.case;
}
);
width = 581;
}
);
note = Tbar.ss01;
},
{
glyphname = Tcaron.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = T.ss01;
},
{
pos = (592,0);
ref = uni030C.case;
}
);
width = 581;
}
);
note = Tcaron.ss01;
},
{
glyphname = uni0162.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = T.ss01;
},
{
pos = (591,0);
ref = uni0327;
}
);
width = 581;
}
);
note = uni0162.ss01;
},
{
glyphname = uni021A.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = T.ss01;
},
{
pos = (591,0);
ref = uni0326;
}
);
width = 581;
}
);
note = uni021A.ss01;
},
{
glyphname = uni1E6C.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = T.ss01;
},
{
pos = (591,0);
ref = dotbelowcomb;
}
);
width = 581;
}
);
note = uni1E6C.ss01;
},
{
glyphname = uni1E6E.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = T.ss01;
},
{
pos = (591,0);
ref = uni0331;
}
);
width = 581;
}
);
note = uni1E6E.ss01;
},
{
glyphname = U.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(607,302,ls),
(607,181,o),
(492,60,o),
(389,60,qs),
(291,60,o),
(182,174,o),
(182,285,qs),
(182,700,l),
(108,700,l),
(108,283,ls),
(108,144,o),
(250,-6,o),
(375,-6,qs),
(541,-6,o),
(610,118,q),
(610,0,l),
(681,0,l),
(681,700,l),
(607,700,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 19 values pushed */
5 4 2 2 2 32 75 0 3 3 0 95 1 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 4 2 2 2 32 75 0 0 0 33 75 0 3 3 1 95 0 1 1 38 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 18 0 18 35 19 34 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 795;
}
);
note = U.ss01;
},
{
glyphname = Uacute.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = acutecomb.case;
}
);
width = 795;
}
);
note = Uacute.ss01;
},
{
glyphname = Ubreve.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni0306.case;
}
);
width = 795;
}
);
note = Ubreve.ss01;
},
{
glyphname = uni01D3.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni030C.case;
}
);
width = 795;
}
);
note = uni01D3.ss01;
},
{
glyphname = Ucircumflex.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni0302.case;
}
);
width = 795;
}
);
note = Ucircumflex.ss01;
},
{
glyphname = uni0214.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni030F.case;
}
);
width = 795;
}
);
note = uni0214.ss01;
},
{
glyphname = Udieresis.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni0308.case;
}
);
width = 795;
}
);
note = Udieresis.ss01;
},
{
glyphname = uni1EE4.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = dotbelowcomb;
}
);
width = 795;
}
);
note = uni1EE4.ss01;
},
{
glyphname = Ugrave.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = gravecomb.case;
}
);
width = 795;
}
);
note = Ugrave.ss01;
},
{
glyphname = uni1EE6.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = hookabovecomb.case;
}
);
width = 795;
}
);
note = uni1EE6.ss01;
},
{
glyphname = Uhorn.ss01;
kernLeft = U;
kernRight = Uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (958,175);
ref = uni031B;
}
);
width = 795;
}
);
note = Uhorn.ss01;
},
{
glyphname = uni1EE8.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (958,175);
ref = uni031B;
},
{
pos = (692,0);
ref = acutecomb.case;
}
);
width = 795;
}
);
note = uni1EE8.ss01;
},
{
glyphname = uni1EF0.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (958,175);
ref = uni031B;
},
{
pos = (692,0);
ref = dotbelowcomb;
}
);
width = 795;
}
);
note = uni1EF0.ss01;
},
{
glyphname = uni1EEA.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (958,175);
ref = uni031B;
},
{
pos = (692,0);
ref = gravecomb.case;
}
);
width = 795;
}
);
note = uni1EEA.ss01;
},
{
glyphname = uni1EEC.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (958,175);
ref = uni031B;
},
{
pos = (692,0);
ref = hookabovecomb.case;
}
);
width = 795;
}
);
note = uni1EEC.ss01;
},
{
glyphname = uni1EEE.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (958,175);
ref = uni031B;
},
{
pos = (692,0);
ref = tildecomb.case;
}
);
width = 795;
}
);
note = uni1EEE.ss01;
},
{
glyphname = Uhungarumlaut.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni030B.case;
}
);
width = 795;
}
);
note = Uhungarumlaut.ss01;
},
{
glyphname = uni0216.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni0311.case;
}
);
width = 795;
}
);
note = uni0216.ss01;
},
{
glyphname = Umacron.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = uni0304.case;
}
);
width = 795;
}
);
note = Umacron.ss01;
},
{
glyphname = uni1E7A.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,151);
ref = uni0304.loclVIET;
},
{
pos = (692,283);
ref = uni0308.loclVIET;
}
);
width = 795;
}
);
note = uni1E7A.ss01;
},
{
glyphname = Uogonek.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (980,0);
ref = uni0328;
}
);
width = 795;
}
);
note = Uogonek.ss01;
},
{
glyphname = Uring.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,175);
ref = uni030A;
}
);
width = 795;
}
);
note = Uring.ss01;
},
{
glyphname = Utilde.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,0);
ref = tildecomb.case;
}
);
width = 795;
}
);
note = Utilde.ss01;
},
{
glyphname = uni1E78.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (692,150);
ref = tildecomb.loclVIET;
},
{
pos = (692,282);
ref = acutecomb.loclVIET;
}
);
width = 795;
}
);
note = uni1E78.ss01;
},
{
glyphname = W.ss01;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(1015,278,ls),
(1015,167,o),
(917,60,o),
(826,60,qs),
(734,60,o),
(635,166,o),
(635,278,qs),
(635,700,l),
(562,700,l),
(562,278,ls),
(562,167,o),
(462,60,o),
(371,60,qs),
(182,60,o),
(182,278,qs),
(182,700,l),
(108,700,l),
(108,275,ls),
(108,136,o),
(245,-6,o),
(371,-6,qs),
(453,-6,o),
(569,57,o),
(598,117,q),
(626,58,o),
(743,-6,o),
(826,-6,qs),
(951,-6,o),
(1088,136,o),
(1088,275,qs),
(1088,700,l),
(1015,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
7 1 3 2 1 74 7 6 4 3 2 2 32 75 5 1 3 3 0 95 1 1 0 0 38 0 76 0 0 0 31 0 31 35 19 34 19 36 35 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1196;
}
);
note = W.ss01;
},
{
glyphname = Wacute.ss01;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = W.ss01;
},
{
pos = (898,0);
ref = acutecomb.case;
}
);
width = 1196;
}
);
note = Wacute.ss01;
},
{
glyphname = Wcircumflex.ss01;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = W.ss01;
},
{
pos = (898,0);
ref = uni0302.case;
}
);
width = 1196;
}
);
note = Wcircumflex.ss01;
},
{
glyphname = Wdieresis.ss01;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = W.ss01;
},
{
pos = (898,0);
ref = uni0308.case;
}
);
width = 1196;
}
);
note = Wdieresis.ss01;
},
{
glyphname = Wgrave.ss01;
kernLeft = U;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = W.ss01;
},
{
pos = (898,0);
ref = gravecomb.case;
}
);
width = 1196;
}
);
note = Wgrave.ss01;
},
{
glyphname = Y.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(606,484,ls),
(606,363,o),
(490,242,o),
(386,242,qs),
(287,242,o),
(177,357,o),
(177,468,qs),
(177,700,l),
(103,700,l),
(103,465,ls),
(103,325,o),
(249,176,o),
(379,176,qs),
(538,176,o),
(606,295,q),
(606,201,ls),
(606,81,o),
(494,-39,o),
(386,-39,qs),
(240,-39,o),
(151,59,q),
(117,2,l),
(163,-50,o),
(300,-105,o),
(386,-105,qs),
(524,-105,o),
(680,53,o),
(680,203,qs),
(680,700,l),
(606,700,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
14 1 4 3 8 7 2 1 2 2 74 0 4 0 2 1 4 2 103 0 1 0 0 1 0 99 6 5 2 3 3 32 3 76 0 0 0 29 0 29 35 19 36 36 35 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = Y.ss01;
},
{
glyphname = Yacute.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = acutecomb.case;
}
);
width = 788;
}
);
note = Yacute.ss01;
},
{
glyphname = Ycircumflex.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = uni0302.case;
}
);
width = 788;
}
);
note = Ycircumflex.ss01;
},
{
glyphname = Ydieresis.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = uni0308.case;
}
);
width = 788;
}
);
note = Ydieresis.ss01;
},
{
glyphname = uni1E8E.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = uni0307.case;
}
);
width = 788;
}
);
note = uni1E8E.ss01;
},
{
glyphname = uni1EF4.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (959,0);
ref = dotbelowcomb;
}
);
width = 788;
}
);
note = uni1EF4.ss01;
},
{
glyphname = Ygrave.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = gravecomb.case;
}
);
width = 788;
}
);
note = Ygrave.ss01;
},
{
glyphname = uni1EF6.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = hookabovecomb.case;
}
);
width = 788;
}
);
note = uni1EF6.ss01;
},
{
glyphname = uni0232.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = uni0304.case;
}
);
width = 788;
}
);
note = uni0232.ss01;
},
{
glyphname = uni1EF8.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (691,0);
ref = tildecomb.case;
}
);
width = 788;
}
);
note = uni1EF8.ss01;
},
{
glyphname = Z.ss01;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(352,324,l),
(545,324,l),
(545,386,l),
(400,386,l),
(609,654,l),
(609,700,l),
(53,700,l),
(53,636,l),
(511,636,l),
(316,387,l),
(113,387,l),
(113,325,l),
(268,325,l),
(50,47,l),
(50,0,l),
(624,0,l),
(624,64,l),
(149,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
12 1 3 4 3 1 0 7 2 74 5 1 2 6 1 1 7 2 1 101 0 3 3 4 93 0 4 4 32 75 8 1 7 7 0 93 0 0 0 33 0 76 0 0 0 17 0 17 17 18 17 17 17 18 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = Z.ss01;
},
{
glyphname = Zacute.ss01;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z.ss01;
},
{
pos = (634,0);
ref = acutecomb.case;
}
);
width = 661;
}
);
note = Zacute.ss01;
},
{
glyphname = Zcaron.ss01;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z.ss01;
},
{
pos = (634,0);
ref = uni030C.case;
}
);
width = 661;
}
);
note = Zcaron.ss01;
},
{
glyphname = Zdotaccent.ss01;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z.ss01;
},
{
pos = (634,0);
ref = uni0307.case;
}
);
width = 661;
}
);
note = Zdotaccent.ss01;
},
{
glyphname = uni1E92.ss01;
kernLeft = Z;
kernRight = Z;
layers = (
{
layerId = m01;
shapes = (
{
ref = Z.ss01;
},
{
pos = (641,0);
ref = dotbelowcomb;
}
);
width = 661;
}
);
note = uni1E92.ss01;
},
{
glyphname = i.loclTRK;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0307;
}
);
width = 269;
}
);
note = i.loclTRK;
},
{
glyphname = iacute_j.loclNLD;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(134,607,l),
(296,731,l),
(213,731,l),
(74,607,l)
);
},
{
closed = 1;
nodes = (
(408,607,l),
(570,731,l),
(487,731,l),
(349,607,l)
);
},
{
closed = 1;
nodes = (
(170,0,l),
(170,526,l),
(99,526,l),
(99,0,l)
);
},
{
closed = 1;
nodes = (
(365,-199,o),
(444,-115,o),
(444,-43,qs),
(444,526,l),
(373,526,l),
(373,-39,ls),
(373,-87,o),
(327,-138,o),
(284,-138,qs),
(234,-138,o),
(204,-111,q),
(180,-165,l),
(200,-182,o),
(260,-199,o),
(293,-199,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
15 1 6 5 14 1 8 6 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
3 1 1 0 4 0 1 4 126 2 1 0 0 68 75 7 1 4 4 69 75 0 5 5 67 75 0 6 6 8 95 9 1 8 8 77 8 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 3 1 1 4 1 131 7 1 4 4 69 75 0 5 5 67 75 0 6 6 8 95 9 1 8 8 77 8 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
12 12 12 26 12 25 19 37 17 17 17 17 17 16 10 10 28 
CALL[ ]	/* CallFunction */";
};
width = 543;
}
);
note = iacute_j.loclNLD;
},
{
glyphname = a.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,426,l),
(475,477,o),
(372,530,o),
(308,530,qs),
(234,530,o),
(114,463,o),
(46,341,o),
(46,263,qs),
(46,185,o),
(114,63,o),
(234,-5,o),
(308,-5,qs),
(374,-5,o),
(479,51,o),
(511,104,q),
(511,0,l),
(579,0,l),
(579,526,l),
(508,526,l)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(369,468,o),
(458,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(458,109,o),
(369,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
17 3 2 5 4 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 4 4 2 95 6 3 2 2 2 39 75 7 1 5 5 0 95 1 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 4 4 2 95 6 3 2 2 2 39 75 0 0 0 33 75 7 1 5 5 1 95 0 1 1 40 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
19 19 0 0 19 34 19 33 27 25 0 18 0 18 38 35 17 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 678;
}
);
note = a.ss01;
},
{
glyphname = aacute.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = acutecomb;
}
);
width = 678;
}
);
note = aacute.ss01;
},
{
glyphname = abreve.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0306;
}
);
width = 678;
}
);
note = abreve.ss01;
},
{
glyphname = uni1EAF.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0306.loclVIET;
},
{
pos = (629,114);
ref = acutecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EAF.ss01;
},
{
glyphname = uni1EB7.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,0);
ref = dotbelowcomb;
},
{
pos = (629,1);
ref = uni0306;
}
);
width = 678;
}
);
note = uni1EB7.ss01;
},
{
glyphname = uni1EB1.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0306.loclVIET;
},
{
pos = (629,114);
ref = gravecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EB1.ss01;
},
{
glyphname = uni1EB3.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0306.loclVIET;
},
{
pos = (629,95);
ref = hookabovecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EB3.ss01;
},
{
glyphname = uni1EB5.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0306.loclVIET;
},
{
pos = (629,114);
ref = tildecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EB5.ss01;
},
{
glyphname = uni01CE.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni030C;
}
);
width = 678;
}
);
note = uni01CE.ss01;
},
{
glyphname = acircumflex.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0302;
}
);
width = 678;
}
);
note = acircumflex.ss01;
},
{
glyphname = uni1EA5.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0302.loclVIET;
},
{
pos = (781,85);
ref = acutecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EA5.ss01;
},
{
glyphname = uni1EAD.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,0);
ref = dotbelowcomb;
},
{
pos = (629,1);
ref = uni0302;
}
);
width = 678;
}
);
note = uni1EAD.ss01;
},
{
glyphname = uni1EA7.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0302.loclVIET;
},
{
pos = (781,85);
ref = gravecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EA7.ss01;
},
{
glyphname = uni1EA9.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0302.loclVIET;
},
{
pos = (749,75);
ref = hookabovecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EA9.ss01;
},
{
glyphname = uni1EAB.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0302.loclVIET;
},
{
pos = (629,119);
ref = tildecomb.loclVIET;
}
);
width = 678;
}
);
note = uni1EAB.ss01;
},
{
glyphname = uni0201.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni030F;
}
);
width = 678;
}
);
note = uni0201.ss01;
},
{
glyphname = adieresis.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0308;
}
);
width = 678;
}
);
note = adieresis.ss01;
},
{
glyphname = uni1EA1.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,0);
ref = dotbelowcomb;
}
);
width = 678;
}
);
note = uni1EA1.ss01;
},
{
glyphname = agrave.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = gravecomb;
}
);
width = 678;
}
);
note = agrave.ss01;
},
{
glyphname = uni1EA3.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = hookabovecomb;
}
);
width = 678;
}
);
note = uni1EA3.ss01;
},
{
glyphname = uni0203.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0311;
}
);
width = 678;
}
);
note = uni0203.ss01;
},
{
glyphname = amacron.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0304;
}
);
width = 678;
}
);
note = amacron.ss01;
},
{
glyphname = aogonek.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (878,0);
ref = uni0328;
}
);
width = 678;
}
);
note = aogonek.ss01;
},
{
glyphname = aring.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni030A;
}
);
width = 678;
}
);
note = aring.ss01;
},
{
glyphname = aringacute.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni030A0301;
}
);
width = 678;
}
);
note = aringacute.ss01;
},
{
glyphname = atilde.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = tildecomb;
}
);
width = 678;
}
);
note = atilde.ss01;
},
{
glyphname = ae.ss01;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(634,58,o),
(526,131,o),
(506,194,q),
(940,278,l),
(938,351,o),
(872,466,o),
(760,530,o),
(690,530,qs),
(622,530,o),
(510,473,o),
(475,422,q),
(434,530,o),
(282,530,qs),
(221,530,o),
(109,493,o),
(69,459,q),
(101,406,l),
(134,435,o),
(226,468,o),
(276,468,qs),
(349,468,o),
(425,397,o),
(425,329,qs),
(425,296,l),
(258,296,ls),
(152,296,o),
(55,214,o),
(55,150,qs),
(55,80,o),
(161,-5,o),
(254,-5,qs),
(326,-5,o),
(440,54,o),
(467,118,q),
(505,57,o),
(631,-5,o),
(707,-5,qs),
(833,-5,o),
(907,81,q),
(867,127,l),
(804,58,o),
(708,58,qs)
);
},
{
closed = 1;
nodes = (
(496,329,o),
(545,419,o),
(634,469,o),
(690,469,qs),
(760,469,o),
(857,384,o),
(869,318,q),
(496,246,l),
(496,260,l),
(496,272,ls)
);
},
{
closed = 1;
nodes = (
(196,51,o),
(125,105,o),
(125,152,qs),
(125,194,o),
(189,243,o),
(260,243,qs),
(425,243,l),
(425,201,ls),
(425,132,o),
(335,51,o),
(259,51,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
44 30 25 24 4 2 3 43 37 2 8 2 38 7 2 1 4 6 8 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 2 0 8 6 2 8 101 7 1 3 3 4 95 5 1 4 4 39 75 11 9 10 3 6 6 0 95 1 1 0 0 40 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 2 0 8 6 2 8 101 7 1 3 3 4 95 5 1 4 4 39 75 10 1 6 6 0 95 1 1 0 0 40 75 11 1 9 9 0 95 1 1 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
52 52 0 0 52 62 52 61 57 55 48 46 0 41 0 40 35 37 35 36 36 35 12 7 26 
CALL[ ]	/* CallFunction */";
};
width = 987;
}
);
note = ae.ss01;
},
{
glyphname = aeacute.ss01;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae.ss01;
},
{
pos = (786,1);
ref = acutecomb;
}
);
width = 987;
}
);
note = aeacute.ss01;
},
{
glyphname = uni01C6.ss01;
kernLeft = c;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = d;
},
{
pos = (678,0);
ref = z.ss01;
},
{
pos = (1238,1);
ref = uni030C;
}
);
width = 1199;
}
);
note = uni01C6.ss01;
},
{
glyphname = e.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,58,o),
(146,131,o),
(126,195,q),
(558,279,l),
(556,352,o),
(489,466,o),
(376,530,o),
(306,530,qs),
(231,530,o),
(113,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(242,-5,o),
(323,-5,qs),
(386,-5,o),
(490,39,o),
(525,81,q),
(485,127,l),
(456,93,o),
(373,58,o),
(324,58,qs)
);
},
{
closed = 1;
nodes = (
(377,469,o),
(475,384,o),
(487,318,q),
(116,246,l),
(115,253,o),
(115,268,qs),
(115,327,o),
(164,418,o),
(251,469,o),
(306,469,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
29 19 18 3 2 5 2 3 1 74 5 1 3 3 1 95 0 1 1 39 75 4 1 2 2 0 95 0 0 0 40 0 76 23 23 0 0 23 32 23 31 0 22 0 21 38 37 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = e.ss01;
},
{
glyphname = eacute.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = acutecomb;
}
);
width = 604;
}
);
note = eacute.ss01;
},
{
glyphname = ebreve.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0306;
}
);
width = 604;
}
);
note = ebreve.ss01;
},
{
glyphname = ecaron.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni030C;
}
);
width = 604;
}
);
note = ecaron.ss01;
},
{
glyphname = uni1E1D.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,0);
ref = uni0327;
},
{
pos = (600,1);
ref = uni0306;
}
);
width = 604;
}
);
note = uni1E1D.ss01;
},
{
glyphname = ecircumflex.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0302;
}
);
width = 604;
}
);
note = ecircumflex.ss01;
},
{
glyphname = uni1EBF.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0302.loclVIET;
},
{
pos = (752,85);
ref = acutecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EBF.ss01;
},
{
glyphname = uni1EC7.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,0);
ref = dotbelowcomb;
},
{
pos = (600,1);
ref = uni0302;
}
);
width = 604;
}
);
note = uni1EC7.ss01;
},
{
glyphname = uni1EC1.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0302.loclVIET;
},
{
pos = (752,85);
ref = gravecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EC1.ss01;
},
{
glyphname = uni1EC3.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0302.loclVIET;
},
{
pos = (720,75);
ref = hookabovecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EC3.ss01;
},
{
glyphname = uni1EC5.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0302.loclVIET;
},
{
pos = (600,119);
ref = tildecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1EC5.ss01;
},
{
glyphname = uni0205.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni030F;
}
);
width = 604;
}
);
note = uni0205.ss01;
},
{
glyphname = edieresis.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0308;
}
);
width = 604;
}
);
note = edieresis.ss01;
},
{
glyphname = edotaccent.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0307;
}
);
width = 604;
}
);
note = edotaccent.ss01;
},
{
glyphname = uni1EB9.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,0);
ref = dotbelowcomb;
}
);
width = 604;
}
);
note = uni1EB9.ss01;
},
{
glyphname = egrave.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = gravecomb;
}
);
width = 604;
}
);
note = egrave.ss01;
},
{
glyphname = uni1EBB.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = hookabovecomb;
}
);
width = 604;
}
);
note = uni1EBB.ss01;
},
{
glyphname = uni0207.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0311;
}
);
width = 604;
}
);
note = uni0207.ss01;
},
{
glyphname = emacron.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0304;
}
);
width = 604;
}
);
note = emacron.ss01;
},
{
glyphname = uni1E17.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0304.loclVIET;
},
{
pos = (600,133);
ref = acutecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1E17.ss01;
},
{
glyphname = uni1E15.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0304.loclVIET;
},
{
pos = (600,133);
ref = gravecomb.loclVIET;
}
);
width = 604;
}
);
note = uni1E15.ss01;
},
{
glyphname = eogonek.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(515,70,o),
(525,81,q),
(485,127,l),
(456,93,o),
(373,58,o),
(324,58,qs),
(251,58,o),
(146,131,o),
(126,195,q),
(558,279,l),
(556,352,o),
(489,466,o),
(376,530,o),
(306,530,qs),
(231,530,o),
(113,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(242,-5,o),
(323,-5,qs),
(349,-5,o),
(377,0,q),
(320,-60,o),
(320,-122,qs),
(320,-167,o),
(380,-220,o),
(431,-220,qs),
(481,-220,o),
(515,-196,q),
(499,-157,l),
(476,-176,o),
(438,-176,qs),
(408,-176,o),
(373,-147,o),
(373,-118,qs),
(373,-85,o),
(421,-12,o),
(487,45,qs)
);
},
{
closed = 1;
nodes = (
(377,469,o),
(475,384,o),
(487,318,q),
(116,246,l),
(115,253,o),
(115,268,qs),
(115,327,o),
(164,418,o),
(251,469,o),
(306,469,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
46 37 36 30 29 5 4 5 15 1 2 4 7 1 0 2 8 1 1 0 4 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
6 1 5 5 3 95 0 3 3 39 75 0 4 4 2 95 0 2 2 40 75 0 0 0 1 95 0 1 1 41 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 0 1 0 1 99 6 1 5 5 3 95 0 3 3 39 75 0 4 4 2 95 0 2 2 40 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
40 40 40 49 40 48 38 38 37 35 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = eogonek.ss01;
},
{
glyphname = uni1EBD.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = tildecomb;
}
);
width = 604;
}
);
note = uni1EBD.ss01;
},
{
glyphname = uni0259.ss01;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
angle = 180;
pos = (604,525);
ref = e.ss01;
}
);
width = 604;
}
);
note = uni0259.ss01;
},
{
glyphname = f.ss01;
kernLeft = b;
kernRight = f;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,687,o),
(339,661,q),
(363,714,l),
(344,730,o),
(288,747,o),
(258,747,qs),
(182,747,o),
(99,663,o),
(99,591,qs),
(99,0,l),
(170,0,l),
(170,466,l),
(330,466,l),
(330,526,l),
(168,526,l),
(168,588,ls),
(168,637,o),
(215,687,o),
(261,687,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
15 1 4 3 16 1 0 4 2 74 0 3 5 1 4 0 3 4 103 0 1 1 0 93 0 0 0 34 75 0 2 2 33 2 76 0 0 0 18 0 17 35 17 17 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 327;
}
);
note = f.ss01;
},
{
glyphname = l.ss01;
kernLeft = b;
kernRight = l.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,-5,o),
(311,6,q),
(306,65,l),
(286,56,o),
(258,56,qs),
(214,56,o),
(170,105,o),
(170,152,qs),
(170,742,l),
(99,742,l),
(99,146,ls),
(99,75,o),
(176,-5,o),
(247,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
10 1 1 0 11 1 2 1 2 74 0 0 1 0 131 0 1 1 2 95 3 1 2 2 40 2 76 0 0 0 13 0 12 35 19 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 309;
}
);
note = l.ss01;
},
{
glyphname = lacute.ss01;
kernLeft = b;
kernRight = l.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (435,217);
ref = acutecomb;
}
);
width = 309;
}
);
note = lacute.ss01;
},
{
glyphname = lcaron.ss01;
kernLeft = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (561,42);
ref = caroncomb.alt;
}
);
width = 309;
}
);
note = lcaron.ss01;
},
{
glyphname = lcommaaccent.ss01;
kernLeft = b;
kernRight = l.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (498,0);
ref = uni0326;
}
);
width = 309;
}
);
note = lcommaaccent.ss01;
},
{
glyphname = ldot.ss01;
kernLeft = b;
kernRight = l.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (195,81);
ref = periodcentered.loclCAT;
}
);
width = 338;
}
);
note = ldot.ss01;
},
{
glyphname = uni1E37.ss01;
kernLeft = b;
kernRight = l.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (498,0);
ref = dotbelowcomb;
}
);
width = 309;
}
);
note = uni1E37.ss01;
},
{
glyphname = uni01C9.ss01;
kernLeft = b;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (287,0);
ref = uni0237;
},
{
pos = (727,1);
ref = uni0307.i;
}
);
width = 536;
}
);
note = uni01C9.ss01;
},
{
glyphname = uni1E3B.ss01;
kernLeft = b;
kernRight = l.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (498,0);
ref = uni0331;
}
);
width = 309;
}
);
note = uni1E3B.ss01;
},
{
glyphname = lslash.ss01;
kernLeft = b;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.ss01;
},
{
pos = (337,-27);
ref = uni0337;
}
);
width = 309;
}
);
note = lslash.ss01;
},
{
glyphname = oe.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(721,58,o),
(610,131,o),
(590,194,q),
(1038,278,l),
(1036,351,o),
(967,466,o),
(849,530,o),
(777,530,qs),
(698,530,o),
(576,458,o),
(544,395,q),
(512,458,o),
(392,530,o),
(314,530,qs),
(238,530,o),
(116,462,o),
(46,340,o),
(46,263,qs),
(46,186,o),
(116,64,o),
(238,-5,o),
(314,-5,qs),
(392,-5,o),
(513,68,o),
(545,132,q),
(579,68,o),
(708,-5,o),
(794,-5,qs),
(860,-5,o),
(968,39,o),
(1004,81,q),
(963,127,l),
(933,93,o),
(847,58,o),
(796,58,qs)
);
},
{
closed = 1;
nodes = (
(580,329,o),
(630,419,o),
(720,469,o),
(777,469,qs),
(851,469,o),
(952,384,o),
(965,318,q),
(580,246,l),
(580,260,l),
(580,272,ls)
);
},
{
closed = 1;
nodes = (
(258,58,o),
(169,109,o),
(118,203,o),
(118,263,qs),
(118,323,o),
(169,417,o),
(258,468,o),
(314,468,qs),
(370,468,o),
(459,417,o),
(509,323,o),
(509,263,qs),
(509,203,o),
(459,109,o),
(370,58,o),
(314,58,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
37 36 31 30 23 9 3 2 8 4 5 1 74 6 1 5 5 2 95 3 1 2 2 39 75 9 7 8 3 4 4 0 95 1 1 0 0 40 0 76 45 45 0 0 45 60 45 59 53 51 41 39 0 34 0 33 36 38 36 37 10 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1084;
}
);
note = oe.ss01;
},
{
glyphname = t.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,56,o),
(255,56,qs),
(211,56,o),
(165,105,o),
(165,152,qs),
(165,466,l),
(324,466,l),
(324,526,l),
(165,526,l),
(165,641,l),
(94,641,l),
(94,148,ls),
(94,75,o),
(174,-5,o),
(248,-5,qs),
(280,-5,o),
(338,14,o),
(358,32,q),
(333,83,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
18 1 4 3 1 74 0 1 2 1 131 0 3 3 2 93 0 2 2 34 75 0 4 4 0 95 0 0 0 40 0 76 35 17 17 19 34 5 7 25 
CALL[ ]	/* CallFunction */";
};
width = 388;
}
);
note = t.ss01;
},
{
glyphname = tbar.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
pos = (5,0);
ref = t.ss01;
},
{
pos = (468,-143);
ref = uni0335.t;
}
);
width = 398;
}
);
note = tbar.ss01;
},
{
glyphname = tcaron.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.ss01;
},
{
pos = (557,0);
ref = caroncomb.alt.short;
}
);
width = 388;
}
);
note = tcaron.ss01;
},
{
glyphname = uni0163.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.ss01;
},
{
pos = (532,0);
ref = uni0327;
}
);
width = 388;
}
);
note = uni0163.ss01;
},
{
glyphname = uni021B.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.ss01;
},
{
pos = (532,0);
ref = uni0326;
}
);
width = 388;
}
);
note = uni021B.ss01;
},
{
glyphname = uni1E97.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.ss01;
},
{
pos = (429,116);
ref = uni0308;
}
);
width = 388;
}
);
note = uni1E97.ss01;
},
{
glyphname = uni1E6D.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.ss01;
},
{
pos = (532,0);
ref = dotbelowcomb;
}
);
width = 388;
}
);
note = uni1E6D.ss01;
},
{
glyphname = uni1E6F.ss01;
kernLeft = b;
kernRight = t;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.ss01;
},
{
pos = (532,0);
ref = uni0331;
}
);
width = 388;
}
);
note = uni1E6F.ss01;
},
{
glyphname = w.ss01;
kernLeft = u;
kernRight = w.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(839,241,ls),
(839,148,o),
(766,59,o),
(690,59,qs),
(612,59,o),
(538,149,o),
(538,243,qs),
(538,526,l),
(467,526,l),
(467,243,ls),
(467,149,o),
(392,59,o),
(315,59,qs),
(237,59,o),
(165,148,o),
(165,241,qs),
(165,526,l),
(94,526,l),
(94,235,ls),
(94,118,o),
(206,-5,o),
(315,-5,qs),
(385,-5,o),
(477,49,o),
(502,106,q),
(527,48,o),
(620,-5,o),
(689,-5,qs),
(798,-5,o),
(910,118,o),
(910,235,qs),
(910,526,l),
(839,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
7 1 3 2 1 74 7 6 4 3 2 2 34 75 5 1 3 3 0 95 1 1 0 0 40 0 76 0 0 0 32 0 32 35 19 35 19 36 35 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1004;
}
);
note = w.ss01;
},
{
glyphname = wacute.ss01;
kernLeft = u;
kernRight = w.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.ss01;
},
{
pos = (802,1);
ref = acutecomb;
}
);
width = 1004;
}
);
note = wacute.ss01;
},
{
glyphname = wcircumflex.ss01;
kernLeft = u;
kernRight = w.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.ss01;
},
{
pos = (802,1);
ref = uni0302;
}
);
width = 1004;
}
);
note = wcircumflex.ss01;
},
{
glyphname = wdieresis.ss01;
kernLeft = u;
kernRight = w.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.ss01;
},
{
pos = (802,1);
ref = uni0308;
}
);
width = 1004;
}
);
note = wdieresis.ss01;
},
{
glyphname = wgrave.ss01;
kernLeft = u;
kernRight = w.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.ss01;
},
{
pos = (802,1);
ref = gravecomb;
}
);
width = 1004;
}
);
note = wgrave.ss01;
},
{
glyphname = y.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,275,ls),
(502,185,o),
(406,84,o),
(323,84,qs),
(247,84,o),
(165,170,o),
(165,253,qs),
(165,526,l),
(94,526,l),
(94,246,ls),
(94,135,o),
(213,20,o),
(316,20,qs),
(377,20,o),
(474,70,o),
(502,116,q),
(502,55,ls),
(502,-43,o),
(416,-136,o),
(325,-136,qs),
(268,-136,o),
(168,-98,o),
(134,-64,q),
(98,-118,l),
(136,-156,o),
(259,-199,o),
(328,-199,qs),
(451,-199,o),
(573,-70,o),
(573,64,qs),
(573,526,l),
(502,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
15 1 4 3 8 7 2 1 2 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
6 5 2 3 3 34 75 0 4 4 2 95 0 2 2 33 75 0 1 1 0 95 0 0 0 41 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 4 0 2 1 4 2 103 6 5 2 3 3 34 75 0 1 1 0 95 0 0 0 41 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 31 0 31 35 19 37 37 35 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = y.ss01;
},
{
glyphname = yacute.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = acutecomb;
}
);
width = 673;
}
);
note = yacute.ss01;
},
{
glyphname = ycircumflex.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = uni0302;
}
);
width = 673;
}
);
note = ycircumflex.ss01;
},
{
glyphname = ydieresis.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = uni0308;
}
);
width = 673;
}
);
note = ydieresis.ss01;
},
{
glyphname = uni1EF5.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (953,0);
ref = dotbelowcomb;
}
);
width = 673;
}
);
note = uni1EF5.ss01;
},
{
glyphname = ygrave.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = gravecomb;
}
);
width = 673;
}
);
note = ygrave.ss01;
},
{
glyphname = uni1EF7.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = hookabovecomb;
}
);
width = 673;
}
);
note = uni1EF7.ss01;
},
{
glyphname = uni0233.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = uni0304;
}
);
width = 673;
}
);
note = uni0233.ss01;
},
{
glyphname = uni1EF9.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = tildecomb;
}
);
width = 673;
}
);
note = uni1EF9.ss01;
},
{
glyphname = z.ss01;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,237,l),
(434,237,l),
(434,294,l),
(323,294,l),
(469,479,l),
(469,526,l),
(53,526,l),
(53,466,l),
(378,466,l),
(242,294,l),
(88,294,l),
(88,237,l),
(197,237,l),
(47,47,l),
(47,0,l),
(475,0,l),
(475,59,l),
(138,59,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
12 1 3 4 3 1 0 7 2 74 5 1 2 6 1 1 7 2 1 101 0 3 3 4 93 0 4 4 34 75 8 1 7 7 0 93 0 0 0 33 0 76 0 0 0 17 0 17 17 18 17 17 17 18 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 521;
}
);
note = z.ss01;
},
{
glyphname = zacute.ss01;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.ss01;
},
{
pos = (560,1);
ref = acutecomb;
}
);
width = 521;
}
);
note = zacute.ss01;
},
{
glyphname = zcaron.ss01;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.ss01;
},
{
pos = (560,1);
ref = uni030C;
}
);
width = 521;
}
);
note = zcaron.ss01;
},
{
glyphname = zdotaccent.ss01;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.ss01;
},
{
pos = (560,1);
ref = uni0307;
}
);
width = 521;
}
);
note = zdotaccent.ss01;
},
{
glyphname = uni1E93.ss01;
kernLeft = z;
kernRight = z;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.ss01;
},
{
pos = (560,0);
ref = dotbelowcomb;
}
);
width = 521;
}
);
note = uni1E93.ss01;
},
{
glyphname = T_h;
kernLeft = T;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(808,530,o),
(706,480,o),
(677,434,q),
(677,700,l),
(4,700,l),
(4,636,l),
(250,636,l),
(250,0,l),
(324,0,l),
(324,636,l),
(606,636,l),
(606,0,l),
(677,0,l),
(677,276,ls),
(677,365,o),
(776,466,o),
(861,466,qs),
(937,466,o),
(1019,380,o),
(1019,298,qs),
(1019,0,l),
(1090,0,l),
(1090,305,ls),
(1090,415,o),
(973,530,o),
(874,530,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
22 1 0 1 1 74 5 1 3 3 6 93 0 6 6 32 75 0 1 1 7 95 8 1 7 7 39 75 4 2 2 0 0 33 0 76 0 0 0 25 0 24 17 17 17 17 19 35 19 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1184;
}
);
note = T_h;
},
{
glyphname = fi.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = f.ss01;
},
{
pos = (407,0);
ref = dotlessi;
},
{
pos = (842,0);
ref = uni0307.i;
}
);
width = 676;
}
);
note = fi.ss01;
},
{
glyphname = fl.ss01;
kernLeft = t;
kernRight = d;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,-44,o),
(572,-44,qs),
(484,-44,o),
(484,52,qs),
(484,547,ls),
(484,645,o),
(388,747,o),
(298,747,qs),
(211,747,o),
(111,644,o),
(111,547,qs),
(111,526,l),
(17,526,l),
(17,466,l),
(111,466,l),
(111,0,l),
(182,0,l),
(182,466,l),
(342,466,l),
(342,526,l),
(182,526,l),
(182,555,ls),
(182,620,o),
(242,686,o),
(298,686,qs),
(354,686,o),
(413,620,o),
(413,555,qs),
(413,45,ls),
(413,-26,o),
(490,-105,o),
(561,-105,qs),
(594,-105,o),
(625,-94,q),
(620,-35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
34 1 8 4 1 74 0 7 0 1 2 7 1 103 0 8 0 0 8 0 99 5 1 3 3 2 93 6 1 2 2 34 75 0 4 4 33 4 76 36 35 17 17 17 17 19 37 33 9 7 29 
CALL[ ]	/* CallFunction */";
};
width = 623;
}
);
note = fl.ss01;
},
{
glyphname = a.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(595,0,l),
(334,565,l),
(263,565,l),
(2,0,l),
(74,0,l),
(140,146,l),
(457,146,l),
(523,0,l)
);
},
{
closed = 1;
nodes = (
(299,497,l),
(431,204,l),
(166,204,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
9 1 4 2 1 74 5 1 4 0 0 1 4 0 102 0 2 2 46 75 3 1 1 1 47 1 76 8 8 8 10 8 10 17 17 17 16 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 598;
}
);
note = a.sc;
},
{
glyphname = aacute.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = acutecomb;
}
);
width = 598;
}
);
note = aacute.sc;
},
{
glyphname = abreve.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0306;
}
);
width = 598;
}
);
note = abreve.sc;
},
{
glyphname = uni1EAF.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0306.loclVIET;
},
{
pos = (599,153);
ref = acutecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EAF.sc;
},
{
glyphname = uni1EB7.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,0);
ref = dotbelowcomb;
},
{
pos = (599,40);
ref = uni0306;
}
);
width = 598;
}
);
note = uni1EB7.sc;
},
{
glyphname = uni1EB1.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0306.loclVIET;
},
{
pos = (599,153);
ref = gravecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EB1.sc;
},
{
glyphname = uni1EB3.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0306.loclVIET;
},
{
pos = (599,134);
ref = hookabovecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EB3.sc;
},
{
glyphname = uni1EB5.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0306.loclVIET;
},
{
pos = (599,153);
ref = tildecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EB5.sc;
},
{
glyphname = uni01CE.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni030C;
}
);
width = 598;
}
);
note = uni01CE.sc;
},
{
glyphname = acircumflex.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0302;
}
);
width = 598;
}
);
note = acircumflex.sc;
},
{
glyphname = uni1EA5.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0302.loclVIET;
},
{
pos = (751,124);
ref = acutecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EA5.sc;
},
{
glyphname = uni1EAD.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,0);
ref = dotbelowcomb;
},
{
pos = (599,40);
ref = uni0302;
}
);
width = 598;
}
);
note = uni1EAD.sc;
},
{
glyphname = uni1EA7.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0302.loclVIET;
},
{
pos = (751,124);
ref = gravecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EA7.sc;
},
{
glyphname = uni1EA9.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0302.loclVIET;
},
{
pos = (719,114);
ref = hookabovecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EA9.sc;
},
{
glyphname = uni1EAB.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0302.loclVIET;
},
{
pos = (599,158);
ref = tildecomb.loclVIET;
}
);
width = 598;
}
);
note = uni1EAB.sc;
},
{
glyphname = uni0201.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni030F;
}
);
width = 598;
}
);
note = uni0201.sc;
},
{
glyphname = adieresis.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0308;
}
);
width = 598;
}
);
note = adieresis.sc;
},
{
glyphname = uni1EA1.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,0);
ref = dotbelowcomb;
}
);
width = 598;
}
);
note = uni1EA1.sc;
},
{
glyphname = agrave.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = gravecomb;
}
);
width = 598;
}
);
note = agrave.sc;
},
{
glyphname = uni1EA3.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = hookabovecomb;
}
);
width = 598;
}
);
note = uni1EA3.sc;
},
{
glyphname = uni0203.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0311;
}
);
width = 598;
}
);
note = uni0203.sc;
},
{
glyphname = amacron.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni0304;
}
);
width = 598;
}
);
note = amacron.sc;
},
{
glyphname = aogonek.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (894,0);
ref = uni0328;
}
);
width = 598;
}
);
note = aogonek.sc;
},
{
glyphname = aring.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni030A;
}
);
width = 598;
}
);
note = aring.sc;
},
{
glyphname = aringacute.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = uni030A0301;
}
);
width = 598;
}
);
note = aringacute.sc;
},
{
glyphname = atilde.sc;
kernLeft = a.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc;
},
{
pos = (599,40);
ref = tildecomb;
}
);
width = 598;
}
);
note = atilde.sc;
},
{
glyphname = ae.sc;
kernLeft = a.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(468,257,l),
(759,257,l),
(759,316,l),
(468,316,l),
(468,505,l),
(795,505,l),
(795,565,l),
(346,565,l),
(2,0,l),
(77,0,l),
(165,146,l),
(396,146,l),
(396,0,l),
(807,0,l),
(807,60,l),
(468,60,l)
);
},
{
closed = 1;
nodes = (
(382,505,l),
(396,505,l),
(396,204,l),
(200,204,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
0 5 0 6 9 5 6 101 11 1 9 0 1 7 9 1 101 8 1 4 4 3 93 0 3 3 46 75 10 1 7 7 0 93 2 1 0 0 47 0 76 16 16 0 0 16 19 16 19 18 17 0 15 0 15 17 17 17 17 17 17 17 12 8 27 
CALL[ ]	/* CallFunction */";
};
width = 857;
}
);
note = ae.sc;
},
{
glyphname = aeacute.sc;
kernLeft = a.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae.sc;
},
{
pos = (732,40);
ref = acutecomb;
}
);
width = 857;
}
);
note = aeacute.sc;
},
{
glyphname = b.sc;
kernLeft = b.sc;
kernRight = b.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,309,o),
(561,374,o),
(561,420,qs),
(561,489,o),
(454,565,o),
(357,565,qs),
(105,565,l),
(105,0,l),
(373,0,ls),
(481,0,o),
(592,79,o),
(592,152,qs),
(592,208,o),
(533,279,o),
(477,292,q)
);
},
{
closed = 1;
nodes = (
(418,509,o),
(490,460,o),
(490,412,qs),
(490,364,o),
(418,314,o),
(351,314,qs),
(177,314,l),
(177,509,l),
(351,509,ls)
);
},
{
closed = 1;
nodes = (
(177,56,l),
(177,258,l),
(370,258,ls),
(444,258,o),
(519,209,o),
(519,157,qs),
(519,56,o),
(370,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
14 1 4 2 1 74 0 2 0 4 5 2 4 101 6 1 3 3 1 93 0 1 1 46 75 7 1 5 5 0 93 0 0 0 47 0 76 24 24 15 15 24 31 24 30 29 27 15 23 15 22 39 33 36 8 8 23 
CALL[ ]	/* CallFunction */";
};
width = 638;
}
);
note = b.sc;
},
{
glyphname = c.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(488,-6,o),
(565,78,q),
(519,125,l),
(454,57,o),
(352,57,qs),
(286,57,o),
(180,116,o),
(120,219,o),
(120,283,qs),
(120,347,o),
(180,450,o),
(286,509,o),
(352,509,qs),
(452,509,o),
(519,441,q),
(565,488,l),
(489,572,o),
(350,572,qs),
(265,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,201,o),
(127,69,o),
(265,-6,o),
(350,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
23 22 10 9 4 2 1 1 74 0 1 1 0 95 0 0 0 48 75 0 2 2 3 95 4 1 3 3 49 3 76 0 0 0 25 0 24 38 35 38 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 602;
}
);
note = c.sc;
},
{
glyphname = cacute.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (644,41);
ref = acutecomb;
}
);
width = 602;
}
);
note = cacute.sc;
},
{
glyphname = ccaron.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (644,41);
ref = uni030C;
}
);
width = 602;
}
);
note = ccaron.sc;
},
{
glyphname = ccedilla.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (637,0);
ref = uni0327;
}
);
width = 602;
}
);
note = ccedilla.sc;
},
{
glyphname = uni1E09.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (637,0);
ref = uni0327;
},
{
pos = (644,41);
ref = acutecomb;
}
);
width = 602;
}
);
note = uni1E09.sc;
},
{
glyphname = ccircumflex.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (644,41);
ref = uni0302;
}
);
width = 602;
}
);
note = ccircumflex.sc;
},
{
glyphname = cdotaccent.sc;
kernLeft = c.sc;
kernRight = c.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = c.sc;
},
{
pos = (644,41);
ref = uni0307;
}
);
width = 602;
}
);
note = cdotaccent.sc;
},
{
glyphname = d.sc;
kernLeft = b.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,0,ls),
(436,0,o),
(576,71,o),
(651,199,o),
(651,283,qs),
(651,367,o),
(576,494,o),
(436,565,o),
(342,565,qs),
(105,565,l),
(105,0,l)
);
},
{
closed = 1;
nodes = (
(177,505,l),
(339,505,ls),
(452,505,o),
(579,384,o),
(579,283,qs),
(579,181,o),
(452,60,o),
(339,60,qs),
(177,60,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
0 3 3 0 93 0 0 0 46 75 4 1 2 2 1 93 0 1 1 47 1 76 12 11 18 16 11 19 12 19 38 32 5 8 22 
CALL[ ]	/* CallFunction */";
};
width = 699;
}
);
note = d.sc;
},
{
glyphname = eth.sc;
kernLeft = b.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
pos = (20,0);
ref = d.sc;
},
{
pos = (-45,-1);
ref = uni0335.sc;
}
);
width = 719;
}
);
note = eth.sc;
},
{
glyphname = dcaron.sc;
kernLeft = b.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
},
{
pos = (627,40);
ref = uni030C;
}
);
width = 699;
}
);
note = dcaron.sc;
},
{
glyphname = dcroat.sc;
kernLeft = b.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
pos = (20,0);
ref = d.sc;
},
{
pos = (-45,-1);
ref = uni0335.sc;
}
);
width = 719;
}
);
note = dcroat.sc;
},
{
glyphname = uni1E0D.sc;
kernLeft = b.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
},
{
pos = (631,0);
ref = dotbelowcomb;
}
);
width = 699;
}
);
note = uni1E0D.sc;
},
{
glyphname = uni1E0F.sc;
kernLeft = b.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
},
{
pos = (631,0);
ref = uni0331;
}
);
width = 699;
}
);
note = uni1E0F.sc;
},
{
glyphname = uni01C6.sc;
kernLeft = b.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
},
{
pos = (691,0);
ref = z.sc;
},
{
pos = (1271,40);
ref = uni030C;
}
);
width = 1220;
}
);
note = uni01C6.sc;
},
{
glyphname = e.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,257,l),
(469,257,l),
(469,316,l),
(177,316,l),
(177,505,l),
(504,505,l),
(504,565,l),
(105,565,l),
(105,0,l),
(516,0,l),
(516,60,l),
(177,60,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 3 0 4 5 3 4 101 0 2 2 1 93 0 1 1 46 75 6 1 5 5 0 93 0 0 0 47 0 76 0 0 0 11 0 11 17 17 17 17 17 7 8 25 
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = e.sc;
},
{
glyphname = eacute.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = acutecomb;
}
);
width = 566;
}
);
note = eacute.sc;
},
{
glyphname = ebreve.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0306;
}
);
width = 566;
}
);
note = ebreve.sc;
},
{
glyphname = ecaron.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni030C;
}
);
width = 566;
}
);
note = ecaron.sc;
},
{
glyphname = uni1E1D.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (615,0);
ref = uni0327;
},
{
pos = (605,40);
ref = uni0306;
}
);
width = 566;
}
);
note = uni1E1D.sc;
},
{
glyphname = ecircumflex.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0302;
}
);
width = 566;
}
);
note = ecircumflex.sc;
},
{
glyphname = uni1EBF.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0302.loclVIET;
},
{
pos = (757,124);
ref = acutecomb.loclVIET;
}
);
width = 566;
}
);
note = uni1EBF.sc;
},
{
glyphname = uni1EC7.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (615,0);
ref = dotbelowcomb;
},
{
pos = (605,40);
ref = uni0302;
}
);
width = 566;
}
);
note = uni1EC7.sc;
},
{
glyphname = uni1EC1.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0302.loclVIET;
},
{
pos = (757,124);
ref = gravecomb.loclVIET;
}
);
width = 566;
}
);
note = uni1EC1.sc;
},
{
glyphname = uni1EC3.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0302.loclVIET;
},
{
pos = (725,114);
ref = hookabovecomb.loclVIET;
}
);
width = 566;
}
);
note = uni1EC3.sc;
},
{
glyphname = uni1EC5.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0302.loclVIET;
},
{
pos = (605,158);
ref = tildecomb.loclVIET;
}
);
width = 566;
}
);
note = uni1EC5.sc;
},
{
glyphname = uni0205.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni030F;
}
);
width = 566;
}
);
note = uni0205.sc;
},
{
glyphname = edieresis.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0308;
}
);
width = 566;
}
);
note = edieresis.sc;
},
{
glyphname = edotaccent.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0307;
}
);
width = 566;
}
);
note = edotaccent.sc;
},
{
glyphname = uni1EB9.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (615,0);
ref = dotbelowcomb;
}
);
width = 566;
}
);
note = uni1EB9.sc;
},
{
glyphname = egrave.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = gravecomb;
}
);
width = 566;
}
);
note = egrave.sc;
},
{
glyphname = uni1EBB.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = hookabovecomb;
}
);
width = 566;
}
);
note = uni1EBB.sc;
},
{
glyphname = uni0207.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0311;
}
);
width = 566;
}
);
note = uni0207.sc;
},
{
glyphname = emacron.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0304;
}
);
width = 566;
}
);
note = emacron.sc;
},
{
glyphname = uni1E17.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0304.loclVIET;
},
{
pos = (605,172);
ref = acutecomb.loclVIET;
}
);
width = 566;
}
);
note = uni1E17.sc;
},
{
glyphname = uni1E15.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = uni0304.loclVIET;
},
{
pos = (605,172);
ref = gravecomb.loclVIET;
}
);
width = 566;
}
);
note = uni1E15.sc;
},
{
glyphname = eogonek.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (815,0);
ref = uni0328;
}
);
width = 566;
}
);
note = eogonek.sc;
},
{
glyphname = uni1EBD.sc;
kernLeft = b.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc;
},
{
pos = (605,40);
ref = tildecomb;
}
);
width = 566;
}
);
note = uni1EBD.sc;
},
{
glyphname = uni0259.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(264,572,o),
(158,535,o),
(120,500,q),
(157,450,l),
(226,509,o),
(322,509,qs),
(381,509,o),
(479,457,o),
(539,365,o),
(544,308,q),
(48,308,l),
(48,286,ls),
(48,203,o),
(121,69,o),
(251,-6,o),
(332,-6,qs),
(412,-6,o),
(541,70,o),
(615,203,o),
(615,283,qs),
(615,364,o),
(539,496,o),
(406,572,o),
(325,572,qs)
);
},
{
closed = 1;
nodes = (
(246,55,o),
(130,162,o),
(120,250,q),
(544,250,l),
(538,193,o),
(481,104,o),
(389,55,o),
(333,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
20 19 2 1 2 1 74 0 1 0 4 5 1 4 101 0 2 2 3 95 6 1 3 3 48 75 7 1 5 5 0 95 0 0 0 49 0 76 24 24 0 0 24 31 24 30 28 27 0 23 0 22 35 20 38 8 8 23 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uni0259.sc;
},
{
glyphname = uni0292.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(470,517,l),
(470,565,l),
(62,565,l),
(62,505,l),
(384,505,l),
(211,318,l),
(211,270,l),
(257,270,ls),
(341,270,o),
(425,214,o),
(425,164,qs),
(425,113,o),
(341,56,o),
(264,56,qs),
(203,56,o),
(99,90,o),
(68,119,q),
(40,64,l),
(75,32,o),
(197,-6,o),
(266,-6,qs),
(377,-6,o),
(497,89,o),
(497,164,qs),
(497,234,o),
(392,320,o),
(292,324,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
25 1 3 4 20 1 2 5 9 8 2 1 2 3 74 6 1 5 0 2 1 5 2 103 0 3 3 4 93 0 4 4 46 75 0 1 1 0 95 0 0 0 49 0 76 0 0 0 26 0 26 17 18 36 37 36 7 8 25 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uni0292.sc;
},
{
glyphname = uni01EF.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0292.sc;
},
{
pos = (569,40);
ref = uni030C;
}
);
width = 556;
}
);
note = uni01EF.sc;
},
{
glyphname = f.sc;
kernLeft = b.sc;
kernRight = f.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,234,l),
(469,234,l),
(469,295,l),
(177,295,l),
(177,505,l),
(504,505,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 2 0 1 101 5 1 4 4 3 93 0 3 3 46 75 0 2 2 47 2 76 0 0 0 9 0 9 17 17 17 17 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = f.sc;
},
{
glyphname = g.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,57,o),
(356,57,qs),
(288,57,o),
(181,116,o),
(120,219,o),
(120,283,qs),
(120,347,o),
(181,450,o),
(287,509,o),
(353,509,qs),
(456,509,o),
(524,441,q),
(570,488,l),
(494,572,o),
(352,572,qs),
(266,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,201,o),
(128,69,o),
(268,-6,o),
(355,-6,qs),
(416,-6,o),
(527,31,o),
(566,66,q),
(566,283,l),
(497,283,l),
(497,97,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
16 15 2 0 3 28 2 2 4 0 2 74 0 0 3 4 3 0 4 126 0 3 3 2 95 0 2 2 48 75 0 4 4 1 95 0 1 1 49 1 76 38 35 38 35 16 5 8 25 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = g.sc;
},
{
glyphname = gbreve.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (643,41);
ref = uni0306;
}
);
width = 652;
}
);
note = gbreve.sc;
},
{
glyphname = gcaron.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (643,41);
ref = uni030C;
}
);
width = 652;
}
);
note = gcaron.sc;
},
{
glyphname = gcircumflex.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (643,41);
ref = uni0302;
}
);
width = 652;
}
);
note = gcircumflex.sc;
},
{
glyphname = gcommaaccent.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (639,0);
ref = uni0326;
}
);
width = 652;
}
);
note = gcommaaccent.sc;
},
{
glyphname = gdotaccent.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (643,41);
ref = uni0307;
}
);
width = 652;
}
);
note = gdotaccent.sc;
},
{
glyphname = uni1E21.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (643,41);
ref = uni0304;
}
);
width = 652;
}
);
note = uni1E21.sc;
},
{
glyphname = uni01E5.sc;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc;
},
{
pos = (585,-247);
ref = uni0335;
scale = (0.7911,1);
}
);
width = 681;
}
);
note = uni01E5.sc;
},
{
glyphname = h.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,0,l),
(177,256,l),
(520,256,l),
(520,0,l),
(592,0,l),
(592,565,l),
(520,565,l),
(520,317,l),
(177,317,l),
(177,565,l),
(105,565,l),
(105,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
0 1 0 4 3 1 4 101 2 1 0 0 46 75 5 1 3 3 47 3 76 17 17 17 17 17 16 6 8 26 
CALL[ ]	/* CallFunction */";
};
width = 697;
}
);
note = h.sc;
},
{
glyphname = hbar.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
pos = (20,0);
ref = h.sc;
},
{
pos = (15,91);
ref = uni0336.sc;
}
);
width = 737;
}
);
note = hbar.sc;
},
{
glyphname = uni1E2B.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = h.sc;
},
{
pos = (648,0);
ref = uni032E;
}
);
width = 697;
}
);
note = uni1E2B.sc;
},
{
glyphname = uni021F.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = h.sc;
},
{
pos = (648,40);
ref = uni030C;
}
);
width = 697;
}
);
note = uni021F.sc;
},
{
glyphname = hcircumflex.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = h.sc;
},
{
pos = (648,40);
ref = uni0302;
}
);
width = 697;
}
);
note = hcircumflex.sc;
},
{
glyphname = uni1E25.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = h.sc;
},
{
pos = (648,0);
ref = dotbelowcomb;
}
);
width = 697;
}
);
note = uni1E25.sc;
},
{
glyphname = i.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,0,l),
(177,565,l),
(105,565,l),
(105,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 0 0 46 75 0 1 1 47 1 76 17 16 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 282;
}
);
note = i.sc;
},
{
glyphname = dotlessi.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
}
);
width = 282;
}
);
note = dotlessi.sc;
},
{
glyphname = iacute.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = acutecomb;
}
);
width = 282;
}
);
note = iacute.sc;
},
{
glyphname = iacute_j.loclNLD.sc;
kernLeft = b.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,647,l),
(298,771,l),
(215,771,l),
(77,647,l)
);
},
{
closed = 1;
nodes = (
(485,647,l),
(647,771,l),
(563,771,l),
(426,647,l)
);
},
{
closed = 1;
nodes = (
(377,-5,o),
(504,124,o),
(504,247,qs),
(504,565,l),
(432,565,l),
(432,243,ls),
(432,150,o),
(344,58,o),
(263,58,qs),
(219,58,o),
(137,85,o),
(104,110,q),
(75,53,l),
(156,-5,o),
(266,-5,qs)
);
},
{
closed = 1;
nodes = (
(156,247,l),
(156,565,l),
(84,565,l),
(84,247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
10 1 4 8 9 1 6 4 2 74 2 1 0 1 0 131 3 1 1 5 1 131 0 8 8 5 93 7 1 5 5 46 75 0 4 4 6 95 9 1 6 6 49 6 76 8 8 26 25 24 23 8 22 8 21 19 37 17 17 17 16 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 588;
}
);
note = iacute_j.loclNLD.sc;
},
{
glyphname = ibreve.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0306.narrow;
}
);
width = 282;
}
);
note = ibreve.sc;
},
{
glyphname = icircumflex.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0302.narrow;
}
);
width = 282;
}
);
note = icircumflex.sc;
},
{
glyphname = uni0209.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni030F;
}
);
width = 282;
}
);
note = uni0209.sc;
},
{
glyphname = idieresis.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0308.narrow;
}
);
width = 282;
}
);
note = idieresis.sc;
},
{
glyphname = uni1E2F.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0308.loclVIET;
},
{
pos = (441,172);
ref = acutecomb.loclVIET;
}
);
width = 282;
}
);
note = uni1E2F.sc;
},
{
glyphname = i.sc.loclTRK;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0307;
}
);
width = 282;
}
);
note = i.sc.loclTRK;
},
{
glyphname = uni1ECB.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,0);
ref = dotbelowcomb;
}
);
width = 282;
}
);
note = uni1ECB.sc;
},
{
glyphname = igrave.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = gravecomb;
}
);
width = 282;
}
);
note = igrave.sc;
},
{
glyphname = uni1EC9.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = hookabovecomb;
}
);
width = 282;
}
);
note = uni1EC9.sc;
},
{
glyphname = uni020B.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0311.narrow;
}
);
width = 282;
}
);
note = uni020B.sc;
},
{
glyphname = ij.sc;
kernLeft = b.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-5,o),
(520,124,o),
(520,247,qs),
(520,565,l),
(448,565,l),
(448,243,ls),
(448,150,o),
(361,58,o),
(281,58,qs),
(189,58,o),
(120,110,q),
(89,53,l),
(125,26,o),
(225,-5,o),
(282,-5,qs)
);
},
{
closed = 1;
nodes = (
(172,247,l),
(172,565,l),
(100,565,l),
(100,247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
3 1 0 4 2 1 2 0 2 74 0 4 4 1 93 3 1 1 1 46 75 0 0 0 2 95 5 1 2 2 49 2 76 0 0 18 17 16 15 0 14 0 13 19 36 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = ij.sc;
},
{
glyphname = imacron.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = uni0304.narrow;
}
);
width = 282;
}
);
note = imacron.sc;
},
{
glyphname = iogonek.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (476,0);
ref = uni0328.i;
}
);
width = 282;
}
);
note = iogonek.sc;
},
{
glyphname = itilde.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc;
},
{
pos = (441,40);
ref = tildecomb.narrow;
}
);
width = 282;
}
);
note = itilde.sc;
},
{
glyphname = j.sc;
kernLeft = j.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,-6,o),
(337,181,qs),
(337,565,l),
(58,565,l),
(58,505,l),
(266,505,l),
(266,176,ls),
(266,115,o),
(216,56,o),
(164,56,qs),
(92,56,o),
(46,121,q),
(1,76,l),
(26,37,o),
(113,-6,o),
(165,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
3 2 2 0 1 1 74 0 1 1 2 93 0 2 2 46 75 0 0 0 3 95 4 1 3 3 49 3 76 0 0 0 15 0 14 17 19 36 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = j.sc;
},
{
glyphname = jcircumflex.sc;
kernLeft = j.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = j.sc;
},
{
pos = (498,40);
ref = uni0302.narrow;
}
);
width = 436;
}
);
note = jcircumflex.sc;
},
{
glyphname = k.sc;
kernLeft = b.sc;
kernRight = k.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(599,0,l),
(336,309,l),
(582,565,l),
(501,565,l),
(177,237,l),
(177,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,148,l),
(287,258,l),
(513,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
9 6 1 3 0 1 1 74 2 1 1 1 46 75 3 1 0 0 47 0 76 18 18 17 18 4 8 24 
CALL[ ]	/* CallFunction */";
};
width = 609;
}
);
note = k.sc;
},
{
glyphname = uni01E9.sc;
kernLeft = b.sc;
kernRight = k.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = k.sc;
},
{
pos = (622,40);
ref = uni030C;
}
);
width = 609;
}
);
note = uni01E9.sc;
},
{
glyphname = kcommaaccent.sc;
kernLeft = b.sc;
kernRight = k.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = k.sc;
},
{
pos = (622,0);
ref = uni0326;
}
);
width = 609;
}
);
note = kcommaaccent.sc;
},
{
glyphname = kgreenlandic.sc;
kernLeft = b.sc;
kernRight = k.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = k.sc;
}
);
width = 609;
}
);
note = kgreenlandic.sc;
},
{
glyphname = l.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,0,l),
(492,60,l),
(177,60,l),
(177,565,l),
(105,565,l),
(105,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 46 75 0 1 1 2 94 0 2 2 47 2 76 17 17 16 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = l.sc;
},
{
glyphname = lacute.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (441,40);
ref = acutecomb;
}
);
width = 500;
}
);
note = lacute.sc;
},
{
glyphname = lcaron.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (674,-135);
ref = caroncomb.alt;
}
);
width = 500;
}
);
note = lcaron.sc;
},
{
glyphname = lcommaaccent.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (608,0);
ref = uni0326;
}
);
width = 500;
}
);
note = lcommaaccent.sc;
},
{
glyphname = ldot.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (208,-112);
ref = periodcentered.loclCAT.case;
}
);
width = 500;
}
);
note = ldot.sc;
},
{
glyphname = uni1E37.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (608,0);
ref = dotbelowcomb;
}
);
width = 500;
}
);
note = uni1E37.sc;
},
{
glyphname = uni01C9.sc;
kernLeft = b.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (500,0);
ref = j.sc;
}
);
width = 936;
}
);
note = uni01C9.sc;
},
{
glyphname = uni1E3B.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (608,0);
ref = uni0331;
}
);
width = 500;
}
);
note = uni1E3B.sc;
},
{
glyphname = lslash.sc;
kernLeft = b.sc;
kernRight = l.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (343,-81);
ref = uni0337;
}
);
width = 500;
}
);
note = lslash.sc;
},
{
glyphname = m.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(708,565,l),
(646,565,l),
(407,160,l),
(167,565,l),
(105,565,l),
(105,0,l),
(174,0,l),
(174,429,l),
(390,71,l),
(423,71,l),
(639,435,l),
(639,0,l),
(709,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
9 4 1 3 0 2 1 74 0 0 2 1 2 0 1 126 3 1 2 2 46 75 5 4 2 1 1 47 1 76 0 0 0 12 0 12 18 17 18 18 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 814;
}
);
note = m.sc;
},
{
glyphname = uni1E43.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = m.sc;
},
{
pos = (707,0);
ref = dotbelowcomb;
}
);
width = 814;
}
);
note = uni1E43.sc;
},
{
glyphname = n.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,124,l),
(165,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,441,l),
(532,0,l),
(592,0,l),
(592,565,l),
(520,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
8 3 2 0 2 1 74 4 3 2 2 2 46 75 1 1 0 0 47 0 76 0 0 0 9 0 9 17 18 17 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 697;
}
);
note = n.sc;
},
{
glyphname = nacute.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,40);
ref = acutecomb;
}
);
width = 697;
}
);
note = nacute.sc;
},
{
glyphname = ncaron.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,40);
ref = uni030C;
}
);
width = 697;
}
);
note = ncaron.sc;
},
{
glyphname = ncommaaccent.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,0);
ref = uni0326;
}
);
width = 697;
}
);
note = ncommaaccent.sc;
},
{
glyphname = uni1E45.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,40);
ref = uni0307;
}
);
width = 697;
}
);
note = uni1E45.sc;
},
{
glyphname = uni1E47.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,0);
ref = dotbelowcomb;
}
);
width = 697;
}
);
note = uni1E47.sc;
},
{
glyphname = eng.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(520,124,l),
(165,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,441,l),
(520,15,l),
(519,-44,o),
(472,-100,o),
(423,-100,qs),
(396,-100,o),
(346,-83,o),
(328,-67,q),
(298,-122,l),
(351,-161,o),
(427,-161,qs),
(507,-161,o),
(592,-62,o),
(592,37,qs),
(592,565,l),
(520,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
19 14 13 3 2 3 7 1 1 2 6 1 0 1 3 74 0 1 0 0 1 0 99 5 4 2 3 3 46 75 0 2 2 47 2 76 0 0 0 20 0 20 17 20 36 35 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 697;
}
);
note = eng.sc;
},
{
glyphname = uni01CC.sc;
kernLeft = b.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (697,0);
ref = j.sc;
}
);
width = 1133;
}
);
note = uni01CC.sc;
},
{
glyphname = uni1E49.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,0);
ref = uni0331;
}
);
width = 697;
}
);
note = uni1E49.sc;
},
{
glyphname = ntilde.sc;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc;
},
{
pos = (648,40);
ref = tildecomb;
}
);
width = 697;
}
);
note = ntilde.sc;
},
{
glyphname = o.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(437,-6,o),
(575,69,o),
(654,201,o),
(654,283,qs),
(654,364,o),
(575,497,o),
(437,572,o),
(351,572,qs),
(266,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,201,o),
(127,69,o),
(266,-6,o),
(351,-6,qs)
);
},
{
closed = 1;
nodes = (
(286,56,o),
(180,115,o),
(120,218,o),
(120,282,qs),
(120,347,o),
(180,450,o),
(286,509,o),
(351,509,qs),
(416,509,o),
(522,450,o),
(582,347,o),
(582,282,qs),
(582,218,o),
(522,115,o),
(416,56,o),
(351,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 95 0 0 0 48 75 5 1 3 3 1 95 4 1 1 1 49 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 8 21 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = o.sc;
},
{
glyphname = oacute.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = acutecomb;
}
);
width = 702;
}
);
note = oacute.sc;
},
{
glyphname = obreve.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0306;
}
);
width = 702;
}
);
note = obreve.sc;
},
{
glyphname = ocircumflex.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0302;
}
);
width = 702;
}
);
note = ocircumflex.sc;
},
{
glyphname = uni1ED1.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0302.loclVIET;
},
{
pos = (803,124);
ref = acutecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1ED1.sc;
},
{
glyphname = uni1ED9.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,0);
ref = dotbelowcomb;
},
{
pos = (651,40);
ref = uni0302;
}
);
width = 702;
}
);
note = uni1ED9.sc;
},
{
glyphname = uni1ED3.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0302.loclVIET;
},
{
pos = (803,124);
ref = gravecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1ED3.sc;
},
{
glyphname = uni1ED5.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0302.loclVIET;
},
{
pos = (771,114);
ref = hookabovecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1ED5.sc;
},
{
glyphname = uni1ED7.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0302.loclVIET;
},
{
pos = (651,158);
ref = tildecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1ED7.sc;
},
{
glyphname = uni020D.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni030F;
}
);
width = 702;
}
);
note = uni020D.sc;
},
{
glyphname = odieresis.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0308;
}
);
width = 702;
}
);
note = odieresis.sc;
},
{
glyphname = uni022B.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0308.loclVIET;
},
{
pos = (651,172);
ref = uni0304.loclVIET;
}
);
width = 702;
}
);
note = uni022B.sc;
},
{
glyphname = uni0231.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0307.loclVIET;
},
{
pos = (651,175);
ref = uni0304.loclVIET;
}
);
width = 702;
}
);
note = uni0231.sc;
},
{
glyphname = uni1ECD.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,0);
ref = dotbelowcomb;
}
);
width = 702;
}
);
note = uni1ECD.sc;
},
{
glyphname = ograve.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = gravecomb;
}
);
width = 702;
}
);
note = ograve.sc;
},
{
glyphname = uni1ECF.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = hookabovecomb;
}
);
width = 702;
}
);
note = uni1ECF.sc;
},
{
glyphname = ohorn.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(596,517,o),
(655,578,o),
(655,631,qs),
(655,653,o),
(641,698,o),
(629,715,q),
(582,697,l),
(602,664,o),
(602,633,qs),
(602,561,o),
(513,561,qs),
(481,561,o),
(441,566,qs),
(389,572,o),
(351,572,qs),
(266,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,201,o),
(127,69,o),
(266,-6,o),
(351,-6,qs),
(437,-6,o),
(575,69,o),
(654,201,o),
(654,283,qs),
(654,353,o),
(592,474,o),
(538,513,q)
);
},
{
closed = 1;
nodes = (
(286,56,o),
(180,115,o),
(120,218,o),
(120,282,qs),
(120,347,o),
(182,451,o),
(290,509,o),
(357,509,qs),
(421,509,o),
(523,449,o),
(582,346,o),
(582,282,qs),
(582,218,o),
(522,115,o),
(416,56,o),
(351,56,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 5 values pushed */
23 22 2 1 72 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 3 3 1 95 2 1 1 1 48 75 6 1 5 5 0 95 0 0 0 49 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 3 1 95 0 1 1 48 75 4 1 3 3 2 95 0 2 2 46 75 6 1 5 5 0 95 0 0 0 49 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
4 1 3 3 1 95 2 1 1 1 48 75 6 1 5 5 0 95 0 0 0 49 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
4 1 3 3 1 95 0 1 1 48 75 4 1 3 3 2 95 0 2 2 46 75 6 1 5 5 0 95 0 0 0 49 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 3 3 2 95 0 2 2 46 75 0 4 4 1 95 0 1 1 48 75 6 1 5 5 0 95 0 0 0 49 0 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
30 30 30 45 30 44 39 25 34 38 37 7 8 25 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = ohorn.sc;
},
{
glyphname = uni1EDB.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn.sc;
},
{
pos = (651,40);
ref = acutecomb;
}
);
width = 702;
}
);
note = uni1EDB.sc;
},
{
glyphname = uni1EE3.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn.sc;
},
{
pos = (651,0);
ref = dotbelowcomb;
}
);
width = 702;
}
);
note = uni1EE3.sc;
},
{
glyphname = uni1EDD.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn.sc;
},
{
pos = (651,40);
ref = gravecomb;
}
);
width = 702;
}
);
note = uni1EDD.sc;
},
{
glyphname = uni1EDF.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn.sc;
},
{
pos = (651,40);
ref = hookabovecomb;
}
);
width = 702;
}
);
note = uni1EDF.sc;
},
{
glyphname = uni1EE1.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn.sc;
},
{
pos = (651,40);
ref = tildecomb;
}
);
width = 702;
}
);
note = uni1EE1.sc;
},
{
glyphname = ohungarumlaut.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni030B;
}
);
width = 702;
}
);
note = ohungarumlaut.sc;
},
{
glyphname = uni020F.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0311;
}
);
width = 702;
}
);
note = uni020F.sc;
},
{
glyphname = omacron.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0304;
}
);
width = 702;
}
);
note = omacron.sc;
},
{
glyphname = uni1E53.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0304.loclVIET;
},
{
pos = (651,172);
ref = acutecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1E53.sc;
},
{
glyphname = uni1E51.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = uni0304.loclVIET;
},
{
pos = (651,172);
ref = gravecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1E51.sc;
},
{
glyphname = uni01EB.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(266,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,203,o),
(125,72,o),
(259,-4,o),
(342,-6,q),
(303,-33,o),
(269,-94,o),
(269,-125,qs),
(269,-168,o),
(329,-220,o),
(379,-220,qs),
(428,-220,o),
(464,-196,q),
(448,-157,l),
(425,-176,o),
(387,-176,qs),
(357,-176,o),
(321,-147,o),
(321,-120,qs),
(321,-79,o),
(397,-11,o),
(467,14,qs),
(551,44,o),
(654,187,o),
(654,283,qs),
(654,364,o),
(575,497,o),
(437,572,o),
(351,572,qs)
);
},
{
closed = 1;
nodes = (
(286,56,o),
(180,115,o),
(120,218,o),
(120,282,qs),
(120,347,o),
(180,450,o),
(286,509,o),
(351,509,qs),
(416,509,o),
(522,450,o),
(582,347,o),
(582,282,qs),
(582,218,o),
(522,115,o),
(416,56,o),
(351,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
14 1 0 2 15 1 1 0 2 74 0 0 0 1 0 1 99 0 4 4 3 95 6 1 3 3 48 75 7 1 5 5 2 95 0 2 2 49 2 76 32 32 0 0 32 47 32 46 40 38 0 31 0 30 21 35 43 8 8 23 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = uni01EB.sc;
},
{
glyphname = oslash.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (19,0);
ref = uni0338.sc;
}
);
width = 702;
}
);
note = oslash.sc;
},
{
glyphname = oslashacute.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (19,0);
ref = uni0338.sc;
},
{
pos = (644,40);
ref = acutecomb;
}
);
width = 702;
}
);
note = oslashacute.sc;
},
{
glyphname = otilde.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = tildecomb;
}
);
width = 702;
}
);
note = otilde.sc;
},
{
glyphname = uni1E4D.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = tildecomb.loclVIET;
},
{
pos = (651,172);
ref = acutecomb.loclVIET;
}
);
width = 702;
}
);
note = uni1E4D.sc;
},
{
glyphname = uni1E4F.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = tildecomb.loclVIET;
},
{
pos = (651,172);
ref = uni0308.loclVIET;
}
);
width = 702;
}
);
note = uni1E4F.sc;
},
{
glyphname = uni022D.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = o.sc;
},
{
pos = (651,40);
ref = tildecomb.loclVIET;
},
{
pos = (651,172);
ref = uni0304.loclVIET;
}
);
width = 702;
}
);
note = uni022D.sc;
},
{
glyphname = oe.sc;
kernLeft = c.sc;
kernRight = ae.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(540,257,l),
(833,257,l),
(833,316,l),
(540,316,l),
(540,505,l),
(868,505,l),
(868,565,l),
(358,565,ls),
(266,565,o),
(125,494,o),
(48,366,o),
(48,282,qs),
(48,199,o),
(125,71,o),
(266,0,o),
(358,0,qs),
(880,0,l),
(880,60,l),
(540,60,l)
);
},
{
closed = 1;
nodes = (
(287,60,o),
(179,115,o),
(120,215,o),
(120,282,qs),
(120,349,o),
(179,450,o),
(287,505,o),
(360,505,qs),
(469,505,l),
(469,60,l),
(360,60,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 55 values pushed */
0 3 0 4 5 3 4 101 6 1 2 2 1 93 0 1 1 46 75 9 7 8 3 5 5 0 93 0 0 0 47 0 76 19 19 0 0 19 29 19 28 22 20 0 18 0 18 17 17 17 38 33 10 8 25 
CALL[ ]	/* CallFunction */";
};
width = 930;
}
);
note = oe.sc;
},
{
glyphname = p.sc;
kernLeft = b.sc;
kernRight = p.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,565,l),
(105,0,l),
(177,0,l),
(177,175,l),
(325,175,ls),
(434,175,o),
(561,278,o),
(561,370,qs),
(561,462,o),
(435,565,o),
(325,565,qs)
);
},
{
closed = 1;
nodes = (
(177,235,l),
(177,505,l),
(321,505,ls),
(403,505,o),
(489,435,o),
(489,370,qs),
(489,305,o),
(402,235,o),
(321,235,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
6 1 4 0 0 1 4 0 101 0 3 3 2 93 5 1 2 2 46 75 0 1 1 47 1 76 11 11 0 0 11 19 11 18 17 15 0 10 0 9 17 36 7 8 22 
CALL[ ]	/* CallFunction */";
};
width = 617;
}
);
note = p.sc;
},
{
glyphname = thorn.sc;
kernLeft = b.sc;
kernRight = thorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(177,493,l),
(177,566,l),
(105,566,l),
(105,0,l),
(177,0,l),
(177,103,l),
(325,103,ls),
(434,103,o),
(561,206,o),
(561,298,qs),
(561,390,o),
(434,493,o),
(325,493,qs)
);
},
{
closed = 1;
nodes = (
(177,163,l),
(177,433,l),
(321,433,ls),
(403,433,o),
(489,363,o),
(489,298,qs),
(489,233,o),
(402,163,o),
(321,163,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
6 1 3 0 4 5 3 4 101 7 1 5 0 0 1 5 0 101 0 2 2 46 75 0 1 1 47 1 76 13 13 0 0 13 21 13 20 19 17 0 12 0 11 17 17 36 8 8 23 
CALL[ ]	/* CallFunction */";
};
width = 617;
}
);
note = thorn.sc;
},
{
glyphname = q.sc;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(604,-58,o),
(542,-58,qs),
(511,-58,o),
(455,-30,o),
(425,2,q),
(492,16,o),
(596,96,o),
(654,214,o),
(654,283,qs),
(654,364,o),
(575,497,o),
(437,572,o),
(351,572,qs),
(266,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,204,o),
(123,74,o),
(254,-3,o),
(336,-6,q),
(393,-65,o),
(488,-115,o),
(541,-115,qs),
(628,-115,o),
(682,-52,q),
(647,-10,l)
);
},
{
closed = 1;
nodes = (
(120,347,o),
(180,450,o),
(286,509,o),
(351,509,qs),
(416,509,o),
(522,450,o),
(582,347,o),
(582,282,qs),
(582,218,o),
(522,115,o),
(416,56,o),
(351,56,qs),
(286,56,o),
(180,115,o),
(120,218,o),
(120,282,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
21 1 1 4 26 1 3 1 2 74 0 3 0 0 3 0 99 0 5 5 2 95 0 2 2 48 75 0 4 4 1 95 0 1 1 49 1 76 38 36 41 38 18 33 6 8 26 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = q.sc;
},
{
glyphname = r.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,192,l),
(494,213,o),
(561,305,o),
(561,370,qs),
(561,462,o),
(435,565,o),
(325,565,qs),
(105,565,l),
(105,0,l),
(177,0,l),
(177,176,l),
(325,176,ls),
(338,176,o),
(364,178,q),
(492,0,l),
(570,0,l)
);
},
{
closed = 1;
nodes = (
(177,235,l),
(177,505,l),
(321,505,ls),
(403,505,o),
(489,435,o),
(489,370,qs),
(489,305,o),
(402,235,o),
(321,235,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
14 1 0 5 1 74 7 1 5 0 0 1 5 0 101 0 4 4 2 93 0 2 2 46 75 6 3 2 1 1 47 1 76 16 16 0 0 16 24 16 23 22 20 0 15 0 15 33 17 34 8 8 23 
CALL[ ]	/* CallFunction */";
};
width = 624;
}
);
note = r.sc;
},
{
glyphname = racute.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,40);
ref = acutecomb;
}
);
width = 624;
}
);
note = racute.sc;
},
{
glyphname = rcaron.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,40);
ref = uni030C;
}
);
width = 624;
}
);
note = rcaron.sc;
},
{
glyphname = rcommaaccent.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,0);
ref = uni0326;
}
);
width = 624;
}
);
note = rcommaaccent.sc;
},
{
glyphname = uni0211.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,40);
ref = uni030F;
}
);
width = 624;
}
);
note = uni0211.sc;
},
{
glyphname = uni1E5B.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,0);
ref = dotbelowcomb;
}
);
width = 624;
}
);
note = uni1E5B.sc;
},
{
glyphname = uni0213.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,40);
ref = uni0311;
}
);
width = 624;
}
);
note = uni0213.sc;
},
{
glyphname = uni1E5F.sc;
kernLeft = b.sc;
kernRight = r.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = r.sc;
},
{
pos = (618,0);
ref = uni0331;
}
);
width = 624;
}
);
note = uni1E5F.sc;
},
{
glyphname = s.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(365,-6,o),
(480,82,o),
(480,154,qs),
(480,206,o),
(425,268,o),
(347,297,o),
(284,312,qs),
(232,324,o),
(171,344,o),
(131,383,o),
(131,415,qs),
(131,457,o),
(203,510,o),
(274,510,qs),
(367,510,o),
(432,464,q),
(458,522,l),
(424,546,o),
(327,572,o),
(276,572,qs),
(174,572,o),
(60,483,o),
(60,412,qs),
(60,359,o),
(115,296,o),
(193,266,o),
(257,251,qs),
(308,239,o),
(368,219,o),
(408,180,o),
(408,148,qs),
(408,107,o),
(337,55,o),
(263,55,qs),
(208,55,o),
(105,92,o),
(73,121,q),
(43,65,l),
(77,33,o),
(196,-6,o),
(261,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
23 1 2 1 24 3 2 3 0 2 2 74 0 2 2 1 95 0 1 1 48 75 0 0 0 3 95 4 1 3 3 49 3 76 0 0 0 40 0 39 36 44 37 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 523;
}
);
note = s.sc;
},
{
glyphname = sacute.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,40);
ref = acutecomb;
}
);
width = 523;
}
);
note = sacute.sc;
},
{
glyphname = uni1E65.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,40);
ref = acutecomb.loclVIET;
},
{
pos = (572,172);
ref = uni0307.loclVIET;
}
);
width = 523;
}
);
note = uni1E65.sc;
},
{
glyphname = uniA78C.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = uniA78C;
}
);
width = 240;
}
);
note = uniA78C.sc;
},
{
glyphname = scaron.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,40);
ref = uni030C;
}
);
width = 523;
}
);
note = scaron.sc;
},
{
glyphname = uni1E67.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,40);
ref = uni030C.loclVIET;
},
{
pos = (572,149);
ref = uni0307.loclVIET;
}
);
width = 523;
}
);
note = uni1E67.sc;
},
{
glyphname = scedilla.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,0);
ref = uni0327;
}
);
width = 523;
}
);
note = scedilla.sc;
},
{
glyphname = scircumflex.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,40);
ref = uni0302;
}
);
width = 523;
}
);
note = scircumflex.sc;
},
{
glyphname = scommaaccent.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,0);
ref = uni0326;
}
);
width = 523;
}
);
note = scommaaccent.sc;
},
{
glyphname = uni1E61.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,40);
ref = uni0307;
}
);
width = 523;
}
);
note = uni1E61.sc;
},
{
glyphname = uni1E63.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,0);
ref = dotbelowcomb;
}
);
width = 523;
}
);
note = uni1E63.sc;
},
{
glyphname = uni1E69.sc;
kernLeft = s.sc;
kernRight = s.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = s.sc;
},
{
pos = (572,0);
ref = dotbelowcomb;
},
{
pos = (572,40);
ref = uni0307;
}
);
width = 523;
}
);
note = uni1E69.sc;
},
{
glyphname = germandbls.sc;
kernRight = b.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(541,468,l),
(541,517,l),
(505,543,o),
(405,569,o),
(350,569,qs),
(233,569,o),
(99,440,o),
(99,327,qs),
(99,0,l),
(171,0,l),
(171,324,ls),
(171,413,o),
(265,508,o),
(353,508,qs),
(424,508,o),
(476,482,q),
(306,299,l),
(320,262,l),
(353,272,o),
(390,272,qs),
(452,272,o),
(521,216,o),
(521,164,qs),
(521,112,o),
(453,55,o),
(396,55,qs),
(338,55,o),
(294,76,q),
(278,16,l),
(328,-6,o),
(397,-6,qs),
(487,-6,o),
(593,84,o),
(593,163,qs),
(593,239,o),
(491,326,o),
(409,327,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
34 1 3 5 35 20 2 6 3 19 1 2 6 18 8 2 1 2 7 1 0 1 5 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
34 1 3 5 35 20 2 6 3 19 1 2 6 18 8 2 1 2 7 1 4 1 5 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 6 0 2 1 6 2 103 0 3 3 5 95 0 5 5 46 75 0 1 1 0 95 4 1 0 0 49 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
7 1 6 0 2 1 6 2 103 0 3 3 5 95 0 5 5 48 75 0 1 1 0 95 4 1 0 0 49 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
7 1 6 0 2 1 6 2 103 0 3 3 5 95 0 5 5 48 75 0 4 4 47 75 0 1 1 0 95 0 0 0 49 0 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 36 0 36 35 19 36 36 35 36 8 8 26 
CALL[ ]	/* CallFunction */";
};
width = 640;
}
);
note = germandbls.sc;
},
{
glyphname = t.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,0,l),
(275,505,l),
(474,505,l),
(474,565,l),
(4,565,l),
(4,505,l),
(203,505,l),
(203,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
2 1 0 0 1 93 0 1 1 46 75 0 3 3 47 3 76 17 17 17 16 4 8 24 
CALL[ ]	/* CallFunction */";
};
width = 478;
}
);
note = t.sc;
},
{
glyphname = tbar.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (-7,-12);
ref = uni0335.sc;
}
);
width = 478;
}
);
note = tbar.sc;
},
{
glyphname = tcaron.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (539,40);
ref = uni030C;
}
);
width = 478;
}
);
note = tcaron.sc;
},
{
glyphname = uni0163.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (539,0);
ref = uni0327;
}
);
width = 478;
}
);
note = uni0163.sc;
},
{
glyphname = uni021B.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (539,0);
ref = uni0326;
}
);
width = 478;
}
);
note = uni021B.sc;
},
{
glyphname = uni1E97.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (539,40);
ref = uni0308;
}
);
width = 478;
}
);
note = uni1E97.sc;
},
{
glyphname = uni1E6D.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (539,0);
ref = dotbelowcomb;
}
);
width = 478;
}
);
note = uni1E6D.sc;
},
{
glyphname = uni1E6F.sc;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc;
},
{
pos = (539,0);
ref = uni0331;
}
);
width = 478;
}
);
note = uni1E6F.sc;
},
{
glyphname = u.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,-6,o),
(578,122,o),
(578,240,qs),
(578,565,l),
(508,565,l),
(508,242,ls),
(508,150,o),
(421,56,o),
(339,56,qs),
(257,56,o),
(171,150,o),
(171,242,qs),
(171,565,l),
(99,565,l),
(99,240,ls),
(99,122,o),
(226,-6,o),
(339,-6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
2 1 0 0 46 75 0 1 1 3 95 4 1 3 3 49 3 76 0 0 0 17 0 16 19 35 19 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 677;
}
);
note = u.sc;
},
{
glyphname = uacute.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = acutecomb;
}
);
width = 677;
}
);
note = uacute.sc;
},
{
glyphname = ubreve.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni0306;
}
);
width = 677;
}
);
note = ubreve.sc;
},
{
glyphname = uni01D4.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni030C;
}
);
width = 677;
}
);
note = uni01D4.sc;
},
{
glyphname = ucircumflex.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni0302;
}
);
width = 677;
}
);
note = ucircumflex.sc;
},
{
glyphname = uni0215.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni030F;
}
);
width = 677;
}
);
note = uni0215.sc;
},
{
glyphname = udieresis.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni0308;
}
);
width = 677;
}
);
note = udieresis.sc;
},
{
glyphname = uni1EE5.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,0);
ref = dotbelowcomb;
}
);
width = 677;
}
);
note = uni1EE5.sc;
},
{
glyphname = ugrave.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = gravecomb;
}
);
width = 677;
}
);
note = ugrave.sc;
},
{
glyphname = uni1EE7.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = hookabovecomb;
}
);
width = 677;
}
);
note = uni1EE7.sc;
},
{
glyphname = uhorn.sc;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (859,40);
ref = uni031B;
}
);
width = 683;
}
);
note = uhorn.sc;
},
{
glyphname = uni1EE9.sc;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (859,40);
ref = uni031B;
},
{
pos = (639,40);
ref = acutecomb;
}
);
width = 683;
}
);
note = uni1EE9.sc;
},
{
glyphname = uni1EF1.sc;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (859,40);
ref = uni031B;
},
{
pos = (639,0);
ref = dotbelowcomb;
}
);
width = 683;
}
);
note = uni1EF1.sc;
},
{
glyphname = uni1EEB.sc;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (859,40);
ref = uni031B;
},
{
pos = (639,40);
ref = gravecomb;
}
);
width = 683;
}
);
note = uni1EEB.sc;
},
{
glyphname = uni1EED.sc;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (859,40);
ref = uni031B;
},
{
pos = (639,40);
ref = hookabovecomb;
}
);
width = 683;
}
);
note = uni1EED.sc;
},
{
glyphname = uni1EEF.sc;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (859,40);
ref = uni031B;
},
{
pos = (639,40);
ref = tildecomb;
}
);
width = 683;
}
);
note = uni1EEF.sc;
},
{
glyphname = uhungarumlaut.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni030B;
}
);
width = 677;
}
);
note = uhungarumlaut.sc;
},
{
glyphname = uni0217.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni0311;
}
);
width = 677;
}
);
note = uni0217.sc;
},
{
glyphname = umacron.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni0304;
}
);
width = 677;
}
);
note = umacron.sc;
},
{
glyphname = uni1E7B.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni0304.loclVIET;
},
{
pos = (639,172);
ref = uni0308.loclVIET;
}
);
width = 677;
}
);
note = uni1E7B.sc;
},
{
glyphname = uogonek.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,242,ls),
(508,150,o),
(421,56,o),
(339,56,qs),
(257,56,o),
(171,150,o),
(171,242,qs),
(171,565,l),
(99,565,l),
(99,240,ls),
(99,125,o),
(221,-3,o),
(329,-6,q),
(252,-56,o),
(252,-125,qs),
(252,-168,o),
(312,-220,o),
(362,-220,qs),
(411,-220,o),
(447,-196,q),
(431,-157,l),
(408,-176,o),
(369,-176,qs),
(340,-176,o),
(304,-147,o),
(304,-121,qs),
(304,-89,o),
(363,-25,o),
(449,13,qs),
(514,41,o),
(578,158,o),
(578,240,qs),
(578,565,l),
(508,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
12 1 0 2 13 1 1 0 2 74 0 0 0 1 0 1 99 6 5 2 3 3 46 75 0 4 4 2 95 0 2 2 49 2 76 0 0 0 33 0 33 35 19 20 35 41 7 8 25 
CALL[ ]	/* CallFunction */";
};
width = 677;
}
);
note = uogonek.sc;
},
{
glyphname = uring.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = uni030A;
}
);
width = 677;
}
);
note = uring.sc;
},
{
glyphname = utilde.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = tildecomb;
}
);
width = 677;
}
);
note = utilde.sc;
},
{
glyphname = uni1E79.sc;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc;
},
{
pos = (639,40);
ref = tildecomb.loclVIET;
},
{
pos = (639,172);
ref = acutecomb.loclVIET;
}
);
width = 677;
}
);
note = uni1E79.sc;
},
{
glyphname = v.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(303,85,l),
(90,565,l),
(13,565,l),
(266,0,l),
(337,0,l),
(590,565,l),
(517,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
5 1 0 1 1 74 3 2 2 1 1 46 75 0 0 0 47 0 76 0 0 0 6 0 6 17 17 4 8 22 
CALL[ ]	/* CallFunction */";
};
width = 603;
}
);
note = v.sc;
},
{
glyphname = w.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(669,91,l),
(506,565,l),
(438,565,l),
(273,93,l),
(114,565,l),
(39,565,l),
(232,0,l),
(309,0,l),
(471,466,l),
(633,0,l),
(708,0,l),
(901,565,l),
(831,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 8 3 3 0 2 1 74 5 4 3 3 2 2 46 75 1 1 0 0 47 0 76 0 0 0 12 0 12 18 17 18 17 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 940;
}
);
note = w.sc;
},
{
glyphname = wacute.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc;
},
{
pos = (771,40);
ref = acutecomb;
}
);
width = 940;
}
);
note = wacute.sc;
},
{
glyphname = wcircumflex.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc;
},
{
pos = (771,40);
ref = uni0302;
}
);
width = 940;
}
);
note = wcircumflex.sc;
},
{
glyphname = wdieresis.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc;
},
{
pos = (771,40);
ref = uni0308;
}
);
width = 940;
}
);
note = wdieresis.sc;
},
{
glyphname = wgrave.sc;
kernLeft = v.sc;
kernRight = v.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc;
},
{
pos = (771,40);
ref = gravecomb;
}
);
width = 940;
}
);
note = wgrave.sc;
},
{
glyphname = x.sc;
kernLeft = x.sc;
kernRight = x.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(317,291,l),
(523,565,l),
(443,565,l),
(277,343,l),
(111,565,l),
(30,565,l),
(237,291,l),
(17,0,l),
(98,0,l),
(276,238,l),
(454,0,l),
(536,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
10 7 4 1 4 0 1 1 74 2 1 1 1 46 75 4 3 2 0 0 47 0 76 0 0 0 11 0 11 18 18 18 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 553;
}
);
note = x.sc;
},
{
glyphname = y.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,565,l),
(279,253,l),
(85,565,l),
(8,565,l),
(242,186,l),
(242,0,l),
(313,0,l),
(313,184,l),
(547,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
6 3 0 3 0 1 1 74 2 1 1 1 46 75 0 0 0 47 0 76 18 18 17 3 8 23 
CALL[ ]	/* CallFunction */";
};
width = 555;
}
);
note = y.sc;
},
{
glyphname = yacute.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = acutecomb;
}
);
width = 555;
}
);
note = yacute.sc;
},
{
glyphname = ycircumflex.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = uni0302;
}
);
width = 555;
}
);
note = ycircumflex.sc;
},
{
glyphname = ydieresis.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = uni0308;
}
);
width = 555;
}
);
note = ydieresis.sc;
},
{
glyphname = uni1E8F.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = uni0307;
}
);
width = 555;
}
);
note = uni1E8F.sc;
},
{
glyphname = uni1EF5.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,0);
ref = dotbelowcomb;
}
);
width = 555;
}
);
note = uni1EF5.sc;
},
{
glyphname = ygrave.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = gravecomb;
}
);
width = 555;
}
);
note = ygrave.sc;
},
{
glyphname = uni1EF7.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = hookabovecomb;
}
);
width = 555;
}
);
note = uni1EF7.sc;
},
{
glyphname = uni0233.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = uni0304;
}
);
width = 555;
}
);
note = uni0233.sc;
},
{
glyphname = uni1EF9.sc;
kernLeft = y.sc;
kernRight = y.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc;
},
{
pos = (578,40);
ref = tildecomb;
}
);
width = 555;
}
);
note = uni1EF9.sc;
},
{
glyphname = z.sc;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(508,517,l),
(508,565,l),
(49,565,l),
(49,505,l),
(414,505,l),
(43,48,l),
(43,0,l),
(518,0,l),
(518,60,l),
(137,60,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
8 1 1 2 3 1 0 3 2 74 0 1 1 2 93 0 2 2 46 75 4 1 3 3 0 93 0 0 0 47 0 76 0 0 0 9 0 9 17 18 17 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = z.sc;
},
{
glyphname = zacute.sc;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (580,40);
ref = acutecomb;
}
);
width = 546;
}
);
note = zacute.sc;
},
{
glyphname = zcaron.sc;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (580,40);
ref = uni030C;
}
);
width = 546;
}
);
note = zcaron.sc;
},
{
glyphname = zdotaccent.sc;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (580,40);
ref = uni0307;
}
);
width = 546;
}
);
note = zdotaccent.sc;
},
{
glyphname = uni1E93.sc;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc;
},
{
pos = (586,0);
ref = dotbelowcomb;
}
);
width = 546;
}
);
note = uni1E93.sc;
},
{
glyphname = a.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(231,572,o),
(99,441,o),
(99,319,qs),
(99,0,l),
(171,0,l),
(171,160,l),
(514,160,l),
(514,0,l),
(586,0,l),
(586,319,ls),
(586,441,o),
(454,572,o),
(342,572,qs)
);
},
{
closed = 1;
nodes = (
(171,328,ls),
(171,417,o),
(261,509,o),
(342,509,qs),
(424,509,o),
(514,417,o),
(514,328,qs),
(514,221,l),
(171,221,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
6 1 3 0 4 5 3 4 103 7 1 5 0 1 0 5 1 101 2 1 0 0 33 0 76 13 13 0 0 13 21 13 21 18 16 0 12 0 11 17 17 19 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 685;
}
);
note = a.sc.ss01;
},
{
glyphname = aacute.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = acutecomb;
}
);
width = 685;
}
);
note = aacute.sc.ss01;
},
{
glyphname = abreve.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0306;
}
);
width = 685;
}
);
note = abreve.sc.ss01;
},
{
glyphname = uni1EAF.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0306.loclVIET;
},
{
pos = (642,153);
ref = acutecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EAF.sc.ss01;
},
{
glyphname = uni1EB7.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,0);
ref = dotbelowcomb;
},
{
pos = (642,40);
ref = uni0306;
}
);
width = 685;
}
);
note = uni1EB7.sc.ss01;
},
{
glyphname = uni1EB1.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0306.loclVIET;
},
{
pos = (642,153);
ref = gravecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EB1.sc.ss01;
},
{
glyphname = uni1EB3.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0306.loclVIET;
},
{
pos = (642,134);
ref = hookabovecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EB3.sc.ss01;
},
{
glyphname = uni1EB5.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0306.loclVIET;
},
{
pos = (642,153);
ref = tildecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EB5.sc.ss01;
},
{
glyphname = uni01CE.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni030C;
}
);
width = 685;
}
);
note = uni01CE.sc.ss01;
},
{
glyphname = acircumflex.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0302;
}
);
width = 685;
}
);
note = acircumflex.sc.ss01;
},
{
glyphname = uni1EA5.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0302.loclVIET;
},
{
pos = (794,124);
ref = acutecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EA5.sc.ss01;
},
{
glyphname = uni1EAD.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,0);
ref = dotbelowcomb;
},
{
pos = (642,40);
ref = uni0302;
}
);
width = 685;
}
);
note = uni1EAD.sc.ss01;
},
{
glyphname = uni1EA7.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0302.loclVIET;
},
{
pos = (794,124);
ref = gravecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EA7.sc.ss01;
},
{
glyphname = uni1EA9.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0302.loclVIET;
},
{
pos = (762,114);
ref = hookabovecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EA9.sc.ss01;
},
{
glyphname = uni1EAB.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0302.loclVIET;
},
{
pos = (642,158);
ref = tildecomb.loclVIET;
}
);
width = 685;
}
);
note = uni1EAB.sc.ss01;
},
{
glyphname = uni0201.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni030F;
}
);
width = 685;
}
);
note = uni0201.sc.ss01;
},
{
glyphname = adieresis.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0308;
}
);
width = 685;
}
);
note = adieresis.sc.ss01;
},
{
glyphname = uni1EA1.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,0);
ref = dotbelowcomb;
}
);
width = 685;
}
);
note = uni1EA1.sc.ss01;
},
{
glyphname = agrave.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = gravecomb;
}
);
width = 685;
}
);
note = agrave.sc.ss01;
},
{
glyphname = uni1EA3.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = hookabovecomb;
}
);
width = 685;
}
);
note = uni1EA3.sc.ss01;
},
{
glyphname = uni0203.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0311;
}
);
width = 685;
}
);
note = uni0203.sc.ss01;
},
{
glyphname = amacron.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni0304;
}
);
width = 685;
}
);
note = amacron.sc.ss01;
},
{
glyphname = aogonek.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (885,0);
ref = uni0328;
}
);
width = 685;
}
);
note = aogonek.sc.ss01;
},
{
glyphname = aring.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni030A;
}
);
width = 685;
}
);
note = aring.sc.ss01;
},
{
glyphname = aringacute.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = uni030A0301;
}
);
width = 685;
}
);
note = aringacute.sc.ss01;
},
{
glyphname = atilde.sc.ss01;
kernLeft = a.sc.ss01;
kernRight = a.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.sc.ss01;
},
{
pos = (642,40);
ref = tildecomb;
}
);
width = 685;
}
);
note = atilde.sc.ss01;
},
{
glyphname = ae.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(522,259,l),
(815,259,l),
(815,316,l),
(522,316,l),
(522,506,l),
(852,506,l),
(852,565,l),
(329,565,ls),
(216,565,o),
(93,437,o),
(93,320,qs),
(93,0,l),
(162,0,l),
(162,168,l),
(451,168,l),
(451,0,l),
(864,0,l),
(864,59,l),
(522,59,l)
);
},
{
closed = 1;
nodes = (
(162,318,ls),
(162,408,o),
(250,503,o),
(334,503,qs),
(451,503,l),
(451,228,l),
(162,228,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 3 8 1 4 5 3 4 101 0 5 0 6 9 5 6 101 11 1 9 0 1 7 9 1 101 10 1 7 7 0 93 2 1 0 0 33 0 76 19 19 0 0 19 25 19 25 22 20 0 18 0 18 17 17 17 35 17 17 17 12 7 27 
CALL[ ]	/* CallFunction */";
};
width = 913;
}
);
note = ae.sc.ss01;
},
{
glyphname = aeacute.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae.sc.ss01;
},
{
pos = (752,40);
ref = acutecomb;
}
);
width = 913;
}
);
note = aeacute.sc.ss01;
},
{
glyphname = uni01C6.sc.ss01;
kernLeft = b.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = d.sc;
},
{
pos = (691,0);
ref = z.sc.ss01;
},
{
pos = (1269,40);
ref = uni030C;
}
);
width = 1246;
}
);
note = uni01C6.sc.ss01;
},
{
glyphname = e.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(452,87,o),
(348,54,o),
(289,54,qs),
(204,54,o),
(119,110,o),
(119,159,qs),
(119,208,o),
(194,257,o),
(259,257,qs),
(411,257,l),
(411,316,l),
(263,316,ls),
(205,316,o),
(143,364,o),
(143,408,qs),
(143,454,o),
(223,511,o),
(301,511,qs),
(395,511,o),
(465,470,q),
(487,526,l),
(451,548,o),
(351,572,o),
(298,572,qs),
(225,572,o),
(122,529,o),
(70,457,o),
(70,413,qs),
(70,369,o),
(113,305,o),
(153,289,q),
(104,274,o),
(46,204,o),
(46,155,qs),
(46,83,o),
(170,-6,o),
(286,-6,qs),
(356,-6,o),
(475,30,o),
(511,61,q),
(485,116,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
19 1 2 1 20 1 3 2 9 1 4 3 40 1 5 4 4 74 0 1 0 2 3 1 2 103 0 3 0 4 5 3 4 101 0 5 5 0 95 0 0 0 38 0 76 36 33 36 36 43 34 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = e.sc.ss01;
},
{
glyphname = eacute.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = acutecomb;
}
);
width = 541;
}
);
note = eacute.sc.ss01;
},
{
glyphname = ebreve.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0306;
}
);
width = 541;
}
);
note = ebreve.sc.ss01;
},
{
glyphname = ecaron.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni030C;
}
);
width = 541;
}
);
note = ecaron.sc.ss01;
},
{
glyphname = uni1E1D.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,0);
ref = uni0327;
},
{
pos = (589,40);
ref = uni0306;
}
);
width = 541;
}
);
note = uni1E1D.sc.ss01;
},
{
glyphname = ecircumflex.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0302;
}
);
width = 541;
}
);
note = ecircumflex.sc.ss01;
},
{
glyphname = uni1EBF.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0302.loclVIET;
},
{
pos = (741,124);
ref = acutecomb.loclVIET;
}
);
width = 541;
}
);
note = uni1EBF.sc.ss01;
},
{
glyphname = uni1EC7.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,0);
ref = dotbelowcomb;
},
{
pos = (589,40);
ref = uni0302;
}
);
width = 541;
}
);
note = uni1EC7.sc.ss01;
},
{
glyphname = uni1EC1.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0302.loclVIET;
},
{
pos = (741,124);
ref = gravecomb.loclVIET;
}
);
width = 541;
}
);
note = uni1EC1.sc.ss01;
},
{
glyphname = uni1EC3.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0302.loclVIET;
},
{
pos = (709,114);
ref = hookabovecomb.loclVIET;
}
);
width = 541;
}
);
note = uni1EC3.sc.ss01;
},
{
glyphname = uni1EC5.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0302.loclVIET;
},
{
pos = (589,158);
ref = tildecomb.loclVIET;
}
);
width = 541;
}
);
note = uni1EC5.sc.ss01;
},
{
glyphname = uni0205.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni030F;
}
);
width = 541;
}
);
note = uni0205.sc.ss01;
},
{
glyphname = edieresis.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0308;
}
);
width = 541;
}
);
note = edieresis.sc.ss01;
},
{
glyphname = edotaccent.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0307;
}
);
width = 541;
}
);
note = edotaccent.sc.ss01;
},
{
glyphname = uni1EB9.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,0);
ref = dotbelowcomb;
}
);
width = 541;
}
);
note = uni1EB9.sc.ss01;
},
{
glyphname = egrave.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = gravecomb;
}
);
width = 541;
}
);
note = egrave.sc.ss01;
},
{
glyphname = uni1EBB.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = hookabovecomb;
}
);
width = 541;
}
);
note = uni1EBB.sc.ss01;
},
{
glyphname = uni0207.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0311;
}
);
width = 541;
}
);
note = uni0207.sc.ss01;
},
{
glyphname = emacron.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0304;
}
);
width = 541;
}
);
note = emacron.sc.ss01;
},
{
glyphname = uni1E17.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0304.loclVIET;
},
{
pos = (589,172);
ref = acutecomb.loclVIET;
}
);
width = 541;
}
);
note = uni1E17.sc.ss01;
},
{
glyphname = uni1E15.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = uni0304.loclVIET;
},
{
pos = (589,172);
ref = gravecomb.loclVIET;
}
);
width = 541;
}
);
note = uni1E15.sc.ss01;
},
{
glyphname = eogonek.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(481,-176,o),
(443,-176,qs),
(414,-176,o),
(378,-146,o),
(378,-118,qs),
(378,-82,o),
(436,4,o),
(511,61,q),
(485,116,l),
(452,87,o),
(348,54,o),
(289,54,qs),
(204,54,o),
(119,110,o),
(119,159,qs),
(119,208,o),
(194,257,o),
(259,257,qs),
(411,257,l),
(411,316,l),
(263,316,ls),
(205,316,o),
(143,364,o),
(143,408,qs),
(143,454,o),
(223,511,o),
(301,511,qs),
(395,511,o),
(465,470,q),
(487,526,l),
(451,548,o),
(351,572,o),
(298,572,qs),
(225,572,o),
(122,529,o),
(70,457,o),
(70,413,qs),
(70,369,o),
(113,305,o),
(153,289,q),
(104,274,o),
(46,204,o),
(46,155,qs),
(46,83,o),
(170,-6,o),
(286,-6,qs),
(340,-6,o),
(385,5,q),
(326,-57,o),
(326,-125,qs),
(326,-168,o),
(385,-220,o),
(435,-220,qs),
(486,-220,o),
(520,-196,q),
(504,-157,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
25 1 3 2 26 1 4 3 15 1 5 4 47 46 2 6 5 7 1 1 6 55 1 7 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 2 0 3 4 2 3 103 0 4 0 5 6 4 5 101 0 6 6 1 95 0 1 1 38 75 0 7 7 0 95 0 0 0 41 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 2 0 3 4 2 3 103 0 4 0 5 6 4 5 101 0 7 0 0 7 0 99 0 6 6 1 95 0 1 1 38 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
40 36 33 36 36 43 37 33 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 541;
}
);
note = eogonek.sc.ss01;
},
{
glyphname = uni1EBD.sc.ss01;
kernLeft = e.sc.ss01;
kernRight = e.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.sc.ss01;
},
{
pos = (589,40);
ref = tildecomb;
}
);
width = 541;
}
);
note = uni1EBD.sc.ss01;
},
{
glyphname = uni0259.sc.ss01;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,572,o),
(149,529,o),
(111,490,q),
(151,442,l),
(221,509,o),
(322,509,qs),
(392,509,o),
(502,437,o),
(527,377,q),
(65,183,l),
(94,96,o),
(238,-6,o),
(332,-6,qs),
(411,-6,o),
(541,70,o),
(615,203,o),
(615,283,qs),
(615,364,o),
(539,496,o),
(406,572,o),
(325,572,qs)
);
},
{
closed = 1;
nodes = (
(545,213,o),
(490,112,o),
(393,55,o),
(333,55,qs),
(272,55,o),
(176,111,o),
(149,159,q),
(542,324,l),
(545,306,o),
(545,286,qs),
(545,277,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
24 23 17 16 11 10 6 3 1 1 74 4 1 2 0 1 3 2 1 103 0 3 3 0 95 0 0 0 38 0 76 0 0 28 26 0 20 0 19 37 38 5 7 22 
CALL[ ]	/* CallFunction */";
};
width = 664;
}
);
note = uni0259.sc.ss01;
},
{
glyphname = f.sc.ss01;
kernLeft = f.sc.ss01;
kernRight = f.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(416,509,o),
(473,469,q),
(497,528,l),
(466,550,o),
(379,572,o),
(329,572,qs),
(218,572,o),
(99,463,o),
(99,366,qs),
(99,0,l),
(171,0,l),
(171,234,l),
(439,234,l),
(439,295,l),
(171,295,l),
(171,367,ls),
(171,436,o),
(251,509,o),
(330,509,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
15 1 4 3 16 1 0 4 2 74 0 3 5 1 4 0 3 4 103 0 0 0 1 2 0 1 101 0 2 2 33 2 76 0 0 0 18 0 17 35 17 17 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 514;
}
);
note = f.sc.ss01;
},
{
glyphname = g.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(466,85,o),
(389,56,o),
(348,56,qs),
(285,56,o),
(181,113,o),
(120,216,o),
(120,282,qs),
(120,347,o),
(180,450,o),
(287,509,o),
(353,509,qs),
(456,509,o),
(524,441,q),
(570,488,l),
(494,572,o),
(352,572,qs),
(266,572,o),
(127,496,o),
(48,364,o),
(48,282,qs),
(48,197,o),
(129,66,o),
(264,-6,o),
(344,-6,qs),
(446,-6,o),
(513,49,q),
(513,0,l),
(566,0,l),
(566,283,l),
(497,283,l),
(497,113,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
17 16 2 0 4 30 1 5 0 4 1 1 5 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 31 values pushed */
0 3 0 4 0 3 4 103 0 0 0 1 95 2 1 1 1 33 75 0 5 5 1 95 2 1 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 3 0 4 0 3 4 103 0 0 0 1 93 0 1 1 33 75 0 5 5 2 95 0 2 2 38 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
38 35 38 34 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 652;
}
);
note = g.sc.ss01;
},
{
glyphname = gbreve.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (643,41);
ref = uni0306;
}
);
width = 652;
}
);
note = gbreve.sc.ss01;
},
{
glyphname = gcaron.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (643,41);
ref = uni030C;
}
);
width = 652;
}
);
note = gcaron.sc.ss01;
},
{
glyphname = gcircumflex.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (643,41);
ref = uni0302;
}
);
width = 652;
}
);
note = gcircumflex.sc.ss01;
},
{
glyphname = gcommaaccent.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (639,1);
ref = uni0326;
}
);
width = 652;
}
);
note = gcommaaccent.sc.ss01;
},
{
glyphname = gdotaccent.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (643,41);
ref = uni0307;
}
);
width = 652;
}
);
note = gdotaccent.sc.ss01;
},
{
glyphname = uni1E21.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (643,41);
ref = uni0304;
}
);
width = 652;
}
);
note = uni1E21.sc.ss01;
},
{
glyphname = uni01E5.sc.ss01;
kernLeft = c.sc;
kernRight = g.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = g.sc.ss01;
},
{
pos = (587,-247);
ref = uni0335;
scale = (0.7911,1);
}
);
width = 686;
}
);
note = uni01E5.sc.ss01;
},
{
glyphname = i.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(358,565,l),
(61,565,l),
(61,505,l),
(173,505,l),
(173,60,l),
(61,60,l),
(61,0,l),
(358,0,l),
(358,60,l),
(245,60,l),
(245,505,l),
(358,505,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 4 6 5 2 3 0 4 3 101 2 1 0 0 1 93 0 1 1 33 1 76 0 0 0 11 0 11 17 17 17 17 17 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 418;
}
);
note = i.sc.ss01;
},
{
glyphname = dotlessi.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
}
);
width = 418;
}
);
note = dotlessi.sc.ss01;
},
{
glyphname = iacute.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = acutecomb;
}
);
width = 418;
}
);
note = iacute.sc.ss01;
},
{
glyphname = iacute_j.loclNLD.sc.ss01;
kernLeft = b.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(137,647,l),
(298,771,l),
(215,771,l),
(77,647,l)
);
},
{
closed = 1;
nodes = (
(485,647,l),
(647,771,l),
(563,771,l),
(426,647,l)
);
},
{
closed = 1;
nodes = (
(377,-5,o),
(504,124,o),
(504,247,qs),
(504,565,l),
(432,565,l),
(432,243,ls),
(432,150,o),
(344,58,o),
(263,58,qs),
(219,58,o),
(137,85,o),
(104,110,q),
(75,53,l),
(156,-5,o),
(266,-5,qs)
);
},
{
closed = 1;
nodes = (
(156,247,l),
(156,565,l),
(84,565,l),
(84,247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
10 1 4 8 9 1 6 4 2 74 2 1 0 1 0 131 3 1 1 5 1 131 7 1 5 0 8 4 5 8 101 0 4 4 6 95 9 1 6 6 40 6 76 8 8 26 25 24 23 8 22 8 21 19 37 17 17 17 16 10 7 26 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = iacute_j.loclNLD.sc.ss01;
},
{
glyphname = ibreve.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni0306.narrow;
}
);
width = 418;
}
);
note = ibreve.sc.ss01;
},
{
glyphname = icircumflex.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni0302.narrow;
}
);
width = 418;
}
);
note = icircumflex.sc.ss01;
},
{
glyphname = uni0209.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni030F;
}
);
width = 418;
}
);
note = uni0209.sc.ss01;
},
{
glyphname = idieresis.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni0308.narrow;
}
);
width = 418;
}
);
note = idieresis.sc.ss01;
},
{
glyphname = uni1E2F.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni0308.loclVIET;
},
{
pos = (510,172);
ref = acutecomb.loclVIET;
}
);
width = 418;
}
);
note = uni1E2F.sc.ss01;
},
{
glyphname = uni1ECB.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,0);
ref = dotbelowcomb;
}
);
width = 418;
}
);
note = uni1ECB.sc.ss01;
},
{
glyphname = igrave.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = gravecomb;
}
);
width = 418;
}
);
note = igrave.sc.ss01;
},
{
glyphname = uni1EC9.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = hookabovecomb;
}
);
width = 418;
}
);
note = uni1EC9.sc.ss01;
},
{
glyphname = uni020B.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni0311.narrow;
}
);
width = 418;
}
);
note = uni020B.sc.ss01;
},
{
glyphname = ij.sc.ss01;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(393,-85,o),
(520,45,o),
(520,167,qs),
(520,565,l),
(448,565,l),
(448,164,ls),
(448,71,o),
(361,-22,o),
(281,-22,qs),
(190,-22,o),
(120,28,q),
(89,-28,l),
(126,-54,o),
(225,-85,o),
(282,-85,qs)
);
},
{
closed = 1;
nodes = (
(172,167,l),
(172,565,l),
(100,565,l),
(100,167,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
3 1 0 4 2 1 2 0 2 74 3 1 1 0 4 0 1 4 101 0 0 2 2 0 87 0 0 0 2 95 5 1 2 0 2 79 0 0 18 17 16 15 0 14 0 13 19 36 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 619;
}
);
note = ij.sc.ss01;
},
{
glyphname = imacron.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = uni0304.narrow;
}
);
width = 418;
}
);
note = imacron.sc.ss01;
},
{
glyphname = iogonek.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (544,0);
ref = uni0328.i;
}
);
width = 418;
}
);
note = iogonek.sc.ss01;
},
{
glyphname = itilde.sc.ss01;
kernLeft = i.sc.ss01;
kernRight = i.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = i.sc.ss01;
},
{
pos = (510,40);
ref = tildecomb.narrow;
}
);
width = 418;
}
);
note = itilde.sc.ss01;
},
{
glyphname = j.sc.ss01;
kernLeft = j.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(337,-87,o),
(337,100,qs),
(337,565,l),
(58,565,l),
(58,505,l),
(266,505,l),
(266,96,ls),
(266,35,o),
(216,-24,o),
(164,-24,qs),
(128,-24,o),
(68,10,o),
(46,41,q),
(1,-4,l),
(26,-44,o),
(113,-87,o),
(165,-87,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
3 2 2 0 1 1 74 0 2 0 1 0 2 1 101 0 0 3 3 0 87 0 0 0 3 95 4 1 3 0 3 79 0 0 0 16 0 15 17 19 37 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 436;
}
);
note = j.sc.ss01;
},
{
glyphname = jcircumflex.sc.ss01;
kernLeft = j.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = j.sc.ss01;
},
{
pos = (497,40);
ref = uni0302.narrow;
}
);
width = 436;
}
);
note = jcircumflex.sc.ss01;
},
{
glyphname = uni01C9.sc.ss01;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = l.sc;
},
{
pos = (500,0);
ref = j.sc.ss01;
}
);
width = 936;
}
);
note = uni01C9.sc.ss01;
},
{
glyphname = m.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,572,o),
(560,521,o),
(533,472,q),
(509,521,o),
(416,572,o),
(353,572,qs),
(294,572,o),
(202,529,o),
(175,487,q),
(175,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,343,ls),
(177,427,o),
(260,509,o),
(333,509,qs),
(405,509,o),
(483,430,o),
(483,350,qs),
(483,0,l),
(555,0,l),
(555,343,ls),
(555,427,o),
(636,509,o),
(709,509,qs),
(782,509,o),
(861,430,o),
(861,350,qs),
(861,0,l),
(933,0,l),
(933,355,ls),
(933,460,o),
(823,572,o),
(726,572,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
31 25 2 0 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
3 1 1 0 5 1 87 8 7 6 3 5 5 0 93 4 2 2 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
8 7 2 6 3 1 1 0 6 1 103 0 5 5 0 93 4 2 2 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 33 35 17 19 35 19 35 19 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1032;
}
);
note = m.sc.ss01;
},
{
glyphname = uni1E43.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = m.sc.ss01;
},
{
pos = (819,0);
ref = dotbelowcomb;
}
);
width = 1032;
}
);
note = uni1E43.sc.ss01;
},
{
glyphname = n.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,572,o),
(202,526,o),
(174,480,q),
(174,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,326,ls),
(177,415,o),
(267,509,o),
(349,509,qs),
(428,509,o),
(513,420,o),
(513,336,qs),
(513,0,l),
(585,0,l),
(585,339,ls),
(585,449,o),
(467,572,o),
(363,572,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 0 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 3 1 87 5 4 2 3 3 0 93 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
5 1 4 0 1 0 4 1 103 0 3 3 0 93 2 1 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 19 0 18 17 19 35 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = n.sc.ss01;
},
{
glyphname = nacute.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (645,40);
ref = acutecomb;
}
);
width = 684;
}
);
note = nacute.sc.ss01;
},
{
glyphname = ncaron.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (645,40);
ref = uni030C;
}
);
width = 684;
}
);
note = ncaron.sc.ss01;
},
{
glyphname = ncommaaccent.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (643,0);
ref = uni0326;
}
);
width = 684;
}
);
note = ncommaaccent.sc.ss01;
},
{
glyphname = uni1E45.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (645,40);
ref = uni0307;
}
);
width = 684;
}
);
note = uni1E45.sc.ss01;
},
{
glyphname = uni1E47.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (643,0);
ref = dotbelowcomb;
}
);
width = 684;
}
);
note = uni1E47.sc.ss01;
},
{
glyphname = eng.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(298,572,o),
(202,526,o),
(174,480,q),
(174,565,l),
(105,565,l),
(105,0,l),
(177,0,l),
(177,326,ls),
(177,415,o),
(267,509,o),
(349,509,qs),
(428,509,o),
(513,420,o),
(513,336,qs),
(513,20,ls),
(513,-40,o),
(464,-98,o),
(414,-98,qs),
(344,-98,o),
(300,-43,q),
(267,-96,l),
(292,-127,o),
(370,-161,o),
(414,-161,qs),
(499,-161,o),
(585,-66,o),
(585,26,qs),
(585,339,ls),
(585,449,o),
(467,572,o),
(363,572,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
27 1 3 2 10 9 2 1 3 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
0 2 3 4 2 87 0 1 0 0 1 0 99 6 5 2 4 4 3 93 0 3 3 33 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
6 1 5 0 2 3 5 2 103 0 1 0 0 1 0 99 0 4 4 3 93 0 3 3 33 3 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 30 0 29 17 19 37 36 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = eng.sc.ss01;
},
{
glyphname = uni01CC.sc.ss01;
kernLeft = b.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (684,0);
ref = j.sc.ss01;
}
);
width = 1120;
}
);
note = uni01CC.sc.ss01;
},
{
glyphname = uni1E49.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (643,0);
ref = uni0331;
}
);
width = 684;
}
);
note = uni1E49.sc.ss01;
},
{
glyphname = ntilde.sc.ss01;
kernLeft = b.sc;
kernRight = m.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = n.sc.ss01;
},
{
pos = (645,40);
ref = tildecomb;
}
);
width = 684;
}
);
note = ntilde.sc.ss01;
},
{
glyphname = q.sc.ss01;
kernLeft = c.sc;
kernRight = d.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(654,364,o),
(575,497,o),
(437,572,o),
(351,572,qs),
(266,572,o),
(127,496,o),
(48,364,o),
(48,283,qs),
(48,207,o),
(117,82,o),
(238,4,o),
(315,-4,q),
(315,-109,l),
(387,-109,l),
(387,-4,l),
(464,4,o),
(585,82,o),
(654,207,o),
(654,283,qs)
);
},
{
closed = 1;
nodes = (
(385,196,l),
(317,196,l),
(317,59,l),
(260,66,o),
(170,128,o),
(120,224,o),
(120,283,qs),
(120,347,o),
(180,450,o),
(286,509,o),
(351,509,qs),
(416,509,o),
(522,450,o),
(582,347,o),
(582,283,qs),
(582,224,o),
(532,128,o),
(442,66,o),
(385,59,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
37 34 6 3 4 0 3 1 74 0 1 0 2 3 1 2 103 0 3 0 0 3 85 0 3 3 0 93 0 0 3 0 77 24 42 40 20 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 702;
}
);
note = q.sc.ss01;
},
{
glyphname = t.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(379,572,o),
(242,572,qs),
(106,572,o),
(-2,507,q),
(24,452,l),
(109,500,o),
(207,508,q),
(207,0,l),
(278,0,l),
(278,508,l),
(378,500,o),
(461,452,q),
(487,507,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
12 8 7 5 2 5 0 1 1 74 0 1 1 0 93 0 0 0 33 0 76 37 19 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 485;
}
);
note = t.sc.ss01;
},
{
glyphname = tbar.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (-4,-20);
ref = uni0335.sc;
}
);
width = 485;
}
);
note = tbar.sc.ss01;
},
{
glyphname = tcaron.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (542,41);
ref = uni030C;
}
);
width = 485;
}
);
note = tcaron.sc.ss01;
},
{
glyphname = uni0163.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (542,0);
ref = uni0327;
}
);
width = 485;
}
);
note = uni0163.sc.ss01;
},
{
glyphname = uni021B.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (542,0);
ref = uni0326;
}
);
width = 485;
}
);
note = uni021B.sc.ss01;
},
{
glyphname = uni1E97.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (542,41);
ref = uni0308;
}
);
width = 485;
}
);
note = uni1E97.sc.ss01;
},
{
glyphname = uni1E6D.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (542,0);
ref = dotbelowcomb;
}
);
width = 485;
}
);
note = uni1E6D.sc.ss01;
},
{
glyphname = uni1E6F.sc.ss01;
kernLeft = t.sc;
kernRight = t.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = t.sc.ss01;
},
{
pos = (542,0);
ref = uni0331;
}
);
width = 485;
}
);
note = uni1E6F.sc.ss01;
},
{
glyphname = u.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,239,ls),
(507,150,o),
(416,56,o),
(334,56,qs),
(256,56,o),
(171,145,o),
(171,229,qs),
(171,565,l),
(99,565,l),
(99,227,ls),
(99,116,o),
(217,-6,o),
(321,-6,qs),
(453,-6,o),
(510,85,q),
(510,0,l),
(579,0,l),
(579,565,l),
(507,565,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
3 1 3 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
5 4 2 2 2 0 95 1 1 0 0 33 75 0 3 3 0 95 1 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
5 4 2 2 2 0 93 0 0 0 33 75 0 3 3 1 95 0 1 1 38 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 18 0 18 35 19 34 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 684;
}
);
note = u.sc.ss01;
},
{
glyphname = uacute.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = acutecomb;
}
);
width = 684;
}
);
note = uacute.sc.ss01;
},
{
glyphname = ubreve.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni0306;
}
);
width = 684;
}
);
note = ubreve.sc.ss01;
},
{
glyphname = uni01D4.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni030C;
}
);
width = 684;
}
);
note = uni01D4.sc.ss01;
},
{
glyphname = ucircumflex.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni0302;
}
);
width = 684;
}
);
note = ucircumflex.sc.ss01;
},
{
glyphname = uni0215.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni030F;
}
);
width = 684;
}
);
note = uni0215.sc.ss01;
},
{
glyphname = udieresis.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni0308;
}
);
width = 684;
}
);
note = udieresis.sc.ss01;
},
{
glyphname = uni1EE5.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,0);
ref = dotbelowcomb;
}
);
width = 684;
}
);
note = uni1EE5.sc.ss01;
},
{
glyphname = ugrave.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = gravecomb;
}
);
width = 684;
}
);
note = ugrave.sc.ss01;
},
{
glyphname = uni1EE7.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = hookabovecomb;
}
);
width = 684;
}
);
note = uni1EE7.sc.ss01;
},
{
glyphname = uhorn.sc.ss01;
kernLeft = u.sc;
kernRight = uhorn.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (848,40);
ref = uni031B;
}
);
width = 690;
}
);
note = uhorn.sc.ss01;
},
{
glyphname = uni1EE9.sc.ss01;
kernLeft = u.sc;
kernRight = uni1EE9.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (848,40);
ref = uni031B;
},
{
pos = (639,40);
ref = acutecomb;
}
);
width = 690;
}
);
note = uni1EE9.sc.ss01;
},
{
glyphname = uni1EF1.sc.ss01;
kernLeft = u.sc;
kernRight = uni1EE9.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (848,40);
ref = uni031B;
},
{
pos = (639,0);
ref = dotbelowcomb;
}
);
width = 690;
}
);
note = uni1EF1.sc.ss01;
},
{
glyphname = uni1EEB.sc.ss01;
kernLeft = u.sc;
kernRight = uni1EE9.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (848,40);
ref = uni031B;
},
{
pos = (639,40);
ref = gravecomb;
}
);
width = 690;
}
);
note = uni1EEB.sc.ss01;
},
{
glyphname = uni1EED.sc.ss01;
kernLeft = u.sc;
kernRight = uni1EE9.sc.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (848,40);
ref = uni031B;
},
{
pos = (639,40);
ref = hookabovecomb;
}
);
width = 690;
}
);
note = uni1EED.sc.ss01;
},
{
glyphname = uni1EEF.sc.ss01;
kernLeft = u.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (848,40);
ref = uni031B;
},
{
pos = (639,40);
ref = tildecomb;
}
);
width = 690;
}
);
note = uni1EEF.sc.ss01;
},
{
glyphname = uhungarumlaut.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni030B;
}
);
width = 684;
}
);
note = uhungarumlaut.sc.ss01;
},
{
glyphname = uni0217.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni0311;
}
);
width = 684;
}
);
note = uni0217.sc.ss01;
},
{
glyphname = umacron.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni0304;
}
);
width = 684;
}
);
note = umacron.sc.ss01;
},
{
glyphname = uni1E7B.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni0304.loclVIET;
},
{
pos = (639,172);
ref = uni0308.loclVIET;
}
);
width = 684;
}
);
note = uni1E7B.sc.ss01;
},
{
glyphname = uogonek.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (878,0);
ref = uni0328;
}
);
width = 684;
}
);
note = uogonek.sc.ss01;
},
{
glyphname = uring.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = uni030A;
}
);
width = 684;
}
);
note = uring.sc.ss01;
},
{
glyphname = utilde.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = tildecomb;
}
);
width = 684;
}
);
note = utilde.sc.ss01;
},
{
glyphname = uni1E79.sc.ss01;
kernLeft = u.sc;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = u.sc.ss01;
},
{
pos = (639,40);
ref = tildecomb.loclVIET;
},
{
pos = (639,172);
ref = acutecomb.loclVIET;
}
);
width = 684;
}
);
note = uni1E79.sc.ss01;
},
{
glyphname = w.sc.ss01;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(858,222,ls),
(858,140,o),
(778,57,o),
(704,57,qs),
(630,57,o),
(551,139,o),
(551,222,qs),
(551,565,l),
(479,565,l),
(479,222,ls),
(479,139,o),
(400,57,o),
(327,57,qs),
(253,57,o),
(172,140,o),
(172,222,qs),
(172,565,l),
(99,565,l),
(99,221,ls),
(99,111,o),
(219,-6,o),
(326,-6,qs),
(394,-6,o),
(491,43,o),
(515,90,q),
(539,43,o),
(637,-6,o),
(704,-6,qs),
(811,-6,o),
(930,111,o),
(930,221,qs),
(930,565,l),
(858,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
7 1 3 2 1 74 7 6 4 3 2 3 2 131 5 1 3 3 0 95 1 1 0 0 38 0 76 0 0 0 32 0 32 35 19 35 19 36 35 8 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1029;
}
);
note = w.sc.ss01;
},
{
glyphname = wacute.sc.ss01;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc.ss01;
},
{
pos = (824,40);
ref = acutecomb;
}
);
width = 1029;
}
);
note = wacute.sc.ss01;
},
{
glyphname = wcircumflex.sc.ss01;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc.ss01;
},
{
pos = (824,40);
ref = uni0302;
}
);
width = 1029;
}
);
note = wcircumflex.sc.ss01;
},
{
glyphname = wdieresis.sc.ss01;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc.ss01;
},
{
pos = (824,40);
ref = uni0308;
}
);
width = 1029;
}
);
note = wdieresis.sc.ss01;
},
{
glyphname = wgrave.sc.ss01;
kernLeft = u.sc;
kernRight = iacute_j.loclNLD.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = w.sc.ss01;
},
{
pos = (824,40);
ref = gravecomb;
}
);
width = 1029;
}
);
note = wgrave.sc.ss01;
},
{
glyphname = y.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(502,386,ls),
(502,297,o),
(411,203,o),
(329,203,qs),
(251,203,o),
(166,292,o),
(166,376,qs),
(166,565,l),
(94,565,l),
(94,374,ls),
(94,263,o),
(214,141,o),
(318,141,qs),
(445,141,o),
(502,227,q),
(502,161,ls),
(502,-24,o),
(328,-24,qs),
(211,-24,o),
(138,52,q),
(105,-2,l),
(145,-43,o),
(258,-87,o),
(329,-87,qs),
(444,-87,o),
(574,42,o),
(574,165,qs),
(574,565,l),
(502,565,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
13 1 4 3 8 7 2 1 2 2 74 6 5 2 3 4 3 131 0 4 0 2 1 4 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 28 0 28 35 19 35 36 35 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 673;
}
);
note = y.sc.ss01;
},
{
glyphname = yacute.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = acutecomb;
}
);
width = 673;
}
);
note = yacute.sc.ss01;
},
{
glyphname = ycircumflex.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = uni0302;
}
);
width = 673;
}
);
note = ycircumflex.sc.ss01;
},
{
glyphname = ydieresis.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = uni0308;
}
);
width = 673;
}
);
note = ydieresis.sc.ss01;
},
{
glyphname = uni1E8F.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = uni0307;
}
);
width = 673;
}
);
note = uni1E8F.sc.ss01;
},
{
glyphname = uni1EF5.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (862,3);
ref = dotbelowcomb;
}
);
width = 673;
}
);
note = uni1EF5.sc.ss01;
},
{
glyphname = ygrave.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = gravecomb;
}
);
width = 673;
}
);
note = ygrave.sc.ss01;
},
{
glyphname = uni1EF7.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = hookabovecomb;
}
);
width = 673;
}
);
note = uni1EF7.sc.ss01;
},
{
glyphname = uni0233.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = uni0304;
}
);
width = 673;
}
);
note = uni0233.sc.ss01;
},
{
glyphname = uni1EF9.sc.ss01;
kernLeft = y.sc.ss01;
kernRight = h.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.sc.ss01;
},
{
pos = (634,40);
ref = tildecomb;
}
);
width = 673;
}
);
note = uni1EF9.sc.ss01;
},
{
glyphname = z.sc.ss01;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(295,256,l),
(486,256,l),
(486,316,l),
(344,316,l),
(506,517,l),
(506,565,l),
(47,565,l),
(47,505,l),
(412,505,l),
(259,316,l),
(78,316,l),
(78,257,l),
(212,257,l),
(43,48,l),
(43,0,l),
(518,0,l),
(518,60,l),
(137,60,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
12 1 3 4 3 1 0 7 2 74 0 4 0 3 2 4 3 101 5 1 2 6 1 1 7 2 1 101 8 1 7 7 0 93 0 0 0 33 0 76 0 0 0 17 0 17 17 18 17 17 17 18 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 546;
}
);
note = z.sc.ss01;
},
{
glyphname = zacute.sc.ss01;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc.ss01;
},
{
pos = (578,40);
ref = acutecomb;
}
);
width = 546;
}
);
note = zacute.sc.ss01;
},
{
glyphname = zcaron.sc.ss01;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc.ss01;
},
{
pos = (578,40);
ref = uni030C;
}
);
width = 546;
}
);
note = zcaron.sc.ss01;
},
{
glyphname = zdotaccent.sc.ss01;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc.ss01;
},
{
pos = (578,40);
ref = uni0307;
}
);
width = 546;
}
);
note = zdotaccent.sc.ss01;
},
{
glyphname = uni1E93.sc.ss01;
kernLeft = z.sc;
kernRight = uni01C6.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = z.sc.ss01;
},
{
pos = (583,0);
ref = dotbelowcomb;
}
);
width = 546;
}
);
note = uni1E93.sc.ss01;
},
{
glyphname = uni0414.loclBGR;
kernLeft = uni0409;
kernRight = uni0414;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(423,700,l),
(351,700,l),
(88,64,l),
(13,64,l),
(13,-157,l),
(82,-157,l),
(82,0,l),
(692,0,l),
(692,-157,l),
(761,-157,l),
(761,64,l),
(684,64,l)
);
},
{
closed = 1;
nodes = (
(604,64,l),
(162,64,l),
(385,618,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
14 1 3 4 1 74 2 1 0 1 0 132 0 4 4 32 75 6 7 5 3 3 3 1 93 0 1 1 33 1 76 0 0 13 12 0 11 0 11 17 17 17 17 17 8 7 25 
CALL[ ]	/* CallFunction */";
};
width = 774;
}
);
note = uni0414.loclBGR;
},
{
glyphname = uni041B.loclBGR;
kernLeft = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(400,700,l),
(327,700,l),
(17,0,l),
(92,0,l),
(361,608,l),
(629,0,l),
(710,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 0 1 1 74 0 1 1 32 75 3 2 2 0 0 33 0 76 0 0 0 6 0 6 17 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 727;
}
);
note = uni041B.loclBGR;
},
{
glyphname = uni0424.loclBGR;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(858,446,o),
(766,602,o),
(599,696,o),
(491,703,q),
(491,747,l),
(422,747,l),
(422,703,l),
(314,696,o),
(148,602,o),
(56,446,o),
(56,351,qs),
(56,256,o),
(148,100,o),
(314,6,o),
(422,-1,q),
(422,-47,l),
(491,-47,l),
(491,-1,l),
(599,6,o),
(766,100,o),
(858,256,o),
(858,351,qs)
);
},
{
closed = 1;
nodes = (
(127,429,o),
(200,555,o),
(334,633,o),
(422,639,q),
(422,62,l),
(334,69,o),
(200,147,o),
(127,273,o),
(127,351,qs)
);
},
{
closed = 1;
nodes = (
(491,639,l),
(579,632,o),
(714,555,o),
(787,429,o),
(787,351,qs),
(787,273,o),
(714,147,o),
(579,69,o),
(491,62,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
38 1 6 3 39 25 2 0 6 2 74 0 4 3 4 131 0 1 0 1 132 0 6 6 3 95 5 1 3 3 32 75 2 1 0 0 33 0 76 24 17 17 22 17 17 18 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 913;
}
);
note = uni0424.loclBGR;
},
{
glyphname = uni0492.loclBSH;
kernLeft = B;
kernRight = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(563,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,297,l),
(492,297,l),
(492,353,l),
(190,353,l),
(190,636,l),
(563,636,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 2 0 1 101 5 1 4 4 3 93 0 3 3 32 75 0 2 2 33 2 76 0 0 0 9 0 9 17 17 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 584;
}
);
note = uni0492.loclBSH;
},
{
glyphname = uni0498.loclBSH;
kernRight = B;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0417;
},
{
pos = (162,0);
ref = verticalbarcy.case;
}
);
width = 636;
}
);
note = uni0498.loclBSH;
},
{
glyphname = uni04AA.loclBSH;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (6,0);
ref = C;
},
{
pos = (271,0);
ref = verticalbarcy.case;
}
);
width = 716;
}
);
note = uni04AA.loclBSH;
},
{
glyphname = uni04AA.loclCHU;
kernLeft = at;
kernRight = C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (6,0);
ref = C;
},
{
pos = (710,0);
ref = uni0327;
}
);
width = 716;
}
);
note = uni04AA.loclCHU;
},
{
glyphname = uni0410.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
}
);
width = 801;
}
);
note = uni0410.ss01;
},
{
glyphname = uni0414.ss01;
kernLeft = uni0414.ss01;
kernRight = uni0414.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(707,405,ls),
(707,551,o),
(550,706,o),
(415,706,qs),
(280,706,o),
(123,551,o),
(123,405,qs),
(123,64,l),
(35,64,l),
(34,-157,l),
(103,-157,l),
(104,0,l),
(726,0,l),
(726,-157,l),
(795,-157,l),
(795,64,l),
(707,64,l)
);
},
{
closed = 1;
nodes = (
(196,412,ls),
(196,525,o),
(311,640,o),
(415,640,qs),
(518,640,o),
(633,525,o),
(633,412,qs),
(633,64,l),
(196,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
2 1 0 1 0 132 0 6 6 4 95 0 4 4 37 75 9 7 8 5 4 3 3 1 93 0 1 1 33 1 76 17 17 0 0 17 25 17 25 22 20 0 16 0 16 35 17 17 17 17 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 830;
}
);
note = uni0414.ss01;
},
{
glyphname = uni0415.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
}
);
width = 634;
}
);
note = uni0415.ss01;
},
{
glyphname = uni0400.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = gravecomb.case;
}
);
width = 634;
}
);
note = uni0400.ss01;
},
{
glyphname = uni0401.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (646,0);
ref = uni0308.case;
}
);
width = 634;
}
);
note = uni0401.ss01;
},
{
glyphname = uni0418.ss01;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
}
);
width = 795;
}
);
note = uni0418.ss01;
},
{
glyphname = uni0419.ss01;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (632,0);
ref = brevecombcy.case;
}
);
width = 795;
}
);
note = uni0419.ss01;
},
{
glyphname = uni048A.ss01;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(473,751,o),
(561,819,o),
(562,880,q),
(507,880,l),
(506,840,o),
(447,794,o),
(399,794,qs),
(350,794,o),
(292,840,o),
(291,880,q),
(236,880,l),
(237,819,o),
(324,751,o),
(399,751,qs)
);
},
{
closed = 1;
nodes = (
(681,700,l),
(607,700,l),
(607,302,ls),
(607,181,o),
(492,60,o),
(389,60,qs),
(291,60,o),
(182,174,o),
(182,285,qs),
(182,700,l),
(108,700,l),
(108,283,ls),
(108,144,o),
(250,-6,o),
(375,-6,qs),
(541,-6,o),
(610,118,q),
(610,0,l),
(699,0,l),
(658,-157,l),
(717,-157,l),
(784,64,l),
(681,64,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 8 7 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 1 0 131 0 4 5 4 132 0 1 11 1 3 7 1 3 103 9 1 7 7 32 75 12 10 2 8 8 5 95 6 1 5 5 33 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 1 0 131 0 4 6 4 132 0 1 11 1 3 7 1 3 103 9 1 7 7 32 75 12 10 2 8 8 5 93 0 5 5 33 75 12 10 2 8 8 6 95 0 6 6 38 6 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
14 14 0 0 14 36 14 36 35 34 31 29 26 25 22 20 18 17 16 15 0 13 0 12 18 34 18 13 7 23 
CALL[ ]	/* CallFunction */";
};
width = 795;
}
);
note = uni048A.ss01;
},
{
glyphname = uni040D.ss01;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (699,0);
ref = gravecomb.case;
}
);
width = 795;
}
);
note = uni040D.ss01;
},
{
glyphname = uni041B.ss01;
kernLeft = uni041B.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(275,706,o),
(121,550,o),
(121,405,qs),
(121,64,l),
(37,64,l),
(37,0,l),
(195,0,l),
(195,412,ls),
(195,525,o),
(306,640,o),
(406,640,qs),
(505,640,o),
(615,525,o),
(615,412,qs),
(615,0,l),
(689,0,l),
(689,405,ls),
(689,550,o),
(537,706,o),
(406,706,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 1 1 4 95 5 1 4 4 37 75 0 3 3 0 93 2 1 0 0 33 0 76 0 0 0 19 0 18 17 19 35 19 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 788;
}
);
note = uni041B.ss01;
},
{
glyphname = uni0420.ss01;
kernLeft = A.ss01;
kernRight = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(247,705,o),
(100,561,o),
(100,431,qs),
(100,0,l),
(173,0,l),
(173,257,l),
(228,221,o),
(338,186,o),
(399,186,qs),
(523,186,o),
(665,323,o),
(665,442,qs),
(665,565,o),
(513,705,o),
(380,705,qs)
);
},
{
closed = 1;
nodes = (
(326,247,o),
(217,288,o),
(173,328,q),
(173,431,ls),
(173,530,o),
(283,639,o),
(382,639,qs),
(479,639,o),
(591,533,o),
(591,441,qs),
(591,350,o),
(483,247,o),
(388,247,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
24 8 2 4 3 1 74 6 1 4 0 0 1 4 0 103 0 3 3 2 95 5 1 2 2 37 75 0 1 1 33 1 76 15 15 0 0 15 27 15 26 21 19 0 14 0 13 19 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 714;
}
);
note = uni0420.ss01;
},
{
glyphname = uni0422.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
pos = (15,0);
ref = T.ss01;
}
);
width = 611;
}
);
note = uni0422.ss01;
},
{
glyphname = uni0423.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
}
);
width = 788;
}
);
note = uni0423.ss01;
},
{
glyphname = uni040E.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (627,0);
ref = brevecombcy.case;
}
);
width = 788;
}
);
note = uni040E.ss01;
},
{
glyphname = uni0424.ss01;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(341,706,o),
(158,614,o),
(56,451,o),
(56,350,qs),
(56,249,o),
(158,86,o),
(341,-6,o),
(458,-6,qs),
(575,-6,o),
(758,86,o),
(859,249,o),
(859,350,qs),
(859,451,o),
(758,614,o),
(575,706,o),
(458,706,qs)
);
},
{
closed = 1;
nodes = (
(492,639,l),
(580,632,o),
(713,554,o),
(786,428,o),
(786,350,qs),
(786,272,o),
(713,146,o),
(580,68,o),
(492,61,q)
);
},
{
closed = 1;
nodes = (
(129,428,o),
(202,554,o),
(335,632,o),
(423,639,q),
(423,61,l),
(335,68,o),
(202,146,o),
(129,272,o),
(129,350,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
29 28 24 23 4 0 1 1 74 2 1 1 1 37 75 0 0 0 38 0 76 0 0 0 15 0 14 38 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 915;
}
);
note = uni0424.ss01;
},
{
glyphname = uni042C.ss01;
kernLeft = U;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,476,o),
(175,401,q),
(175,700,l),
(103,700,l),
(103,243,ls),
(103,122,o),
(249,-10,o),
(383,-10,qs),
(516,-10,o),
(667,120,o),
(667,235,qs),
(667,348,o),
(526,476,o),
(408,476,qs)
);
},
{
closed = 1;
nodes = (
(286,53,o),
(175,153,o),
(175,244,qs),
(175,329,l),
(221,371,o),
(331,414,o),
(390,414,qs),
(482,414,o),
(593,318,o),
(593,233,qs),
(593,149,o),
(483,53,o),
(385,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
22 11 2 4 3 1 74 5 1 2 0 3 4 2 3 103 0 1 1 32 75 6 1 4 4 0 95 0 0 0 38 0 76 14 14 0 0 14 26 14 25 20 18 0 13 0 12 19 36 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 713;
}
);
note = uni042C.ss01;
},
{
glyphname = uni042A.ss01;
kernLeft = T;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,476,o),
(330,401,q),
(330,700,l),
(12,700,l),
(12,636,l),
(257,636,l),
(257,243,ls),
(257,122,o),
(403,-10,o),
(537,-10,qs),
(671,-10,o),
(822,120,o),
(822,235,qs),
(822,348,o),
(681,476,o),
(563,476,qs)
);
},
{
closed = 1;
nodes = (
(440,53,o),
(330,153,o),
(330,244,qs),
(330,330,l),
(376,372,o),
(486,414,o),
(545,414,qs),
(636,414,o),
(748,318,o),
(748,233,qs),
(748,149,o),
(637,53,o),
(540,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
24 13 2 5 4 1 74 6 1 3 0 4 5 3 4 103 0 1 1 2 93 0 2 2 32 75 7 1 5 5 0 95 0 0 0 38 0 76 16 16 0 0 16 28 16 27 22 20 0 15 0 14 17 19 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 868;
}
);
note = uni042A.ss01;
},
{
glyphname = uni042B.ss01;
kernLeft = U;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(283,476,o),
(175,401,q),
(175,700,l),
(103,700,l),
(103,243,ls),
(103,122,o),
(249,-10,o),
(383,-10,qs),
(516,-10,o),
(667,120,o),
(667,235,qs),
(667,348,o),
(526,476,o),
(408,476,qs)
);
},
{
closed = 1;
nodes = (
(787,0,l),
(860,0,l),
(860,700,l),
(787,700,l)
);
},
{
closed = 1;
nodes = (
(286,53,o),
(175,153,o),
(175,244,qs),
(175,329,l),
(221,371,o),
(331,414,o),
(390,414,qs),
(482,414,o),
(593,318,o),
(593,233,qs),
(593,149,o),
(483,53,o),
(385,53,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
26 11 2 6 5 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
7 1 2 0 5 6 2 5 103 8 4 2 1 1 32 75 9 1 6 6 0 95 3 1 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
7 1 2 0 5 6 2 5 103 8 4 2 1 1 32 75 0 3 3 33 75 9 1 6 6 0 95 0 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
18 18 14 14 0 0 18 30 18 29 24 22 14 17 14 17 16 15 0 13 0 12 19 36 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 978;
}
);
note = uni042B.ss01;
},
{
glyphname = uni0409.ss01;
kernLeft = uni0409;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,476,o),
(647,401,q),
(647,700,l),
(192,700,l),
(182,400,ls),
(177,279,o),
(149,132,o),
(94,62,o),
(50,62,qs),
(33,62,o),
(17,66,q),
(11,0,l),
(40,-7,o),
(67,-7,qs),
(130,-7,o),
(206,80,o),
(243,257,o),
(248,402,qs),
(256,636,l),
(574,636,l),
(574,243,ls),
(574,122,o),
(720,-10,o),
(854,-10,qs),
(988,-10,o),
(1139,120,o),
(1139,235,qs),
(1139,348,o),
(998,476,o),
(880,476,qs)
);
},
{
closed = 1;
nodes = (
(757,53,o),
(647,153,o),
(647,244,qs),
(647,330,l),
(740,414,o),
(862,414,qs),
(953,414,o),
(1065,318,o),
(1065,233,qs),
(1065,149,o),
(954,53,o),
(857,53,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
37 27 18 3 3 6 17 1 0 3 2 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
37 27 18 3 3 6 17 1 0 7 2 74 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
8 1 5 0 6 3 5 6 103 0 1 1 4 93 0 4 4 32 75 9 7 2 3 3 0 95 2 1 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 43 values pushed */
8 1 5 0 6 3 5 6 103 0 1 1 4 93 0 4 4 32 75 0 3 3 0 95 2 1 0 0 38 75 9 1 7 7 0 95 2 1 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
30 30 0 0 30 41 30 40 36 34 0 29 0 28 20 35 36 19 36 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 1184;
}
);
note = uni0409.ss01;
},
{
glyphname = uni040A.ss01;
kernLeft = B;
kernRight = uni0409;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(986,-11,o),
(1129,108,o),
(1129,211,qs),
(1129,306,o),
(1000,415,o),
(885,415,qs),
(667,415,l),
(667,700,l),
(594,700,l),
(594,413,l),
(191,413,l),
(191,700,l),
(118,700,l),
(118,0,l),
(191,0,l),
(191,349,l),
(594,349,l),
(594,213,ls),
(594,109,o),
(737,-11,o),
(861,-11,qs)
);
},
{
closed = 1;
nodes = (
(772,47,o),
(667,135,o),
(667,211,qs),
(667,355,l),
(867,355,ls),
(957,355,o),
(1055,279,o),
(1055,209,qs),
(1055,135,o),
(950,47,o),
(861,47,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
5 1 3 7 1 0 8 3 0 101 4 1 2 2 32 75 10 1 8 8 1 95 9 6 2 1 1 33 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
5 1 3 7 1 0 8 3 0 101 4 1 2 2 32 75 0 1 1 33 75 10 1 8 8 6 95 9 1 6 6 38 6 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 7 0 3 7 85 5 1 3 0 0 8 3 0 101 4 1 2 2 32 75 0 1 1 33 75 10 1 8 8 6 95 9 1 6 6 38 6 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
21 21 0 0 21 31 21 30 27 25 0 20 0 19 33 17 17 17 17 19 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 1169;
}
);
note = uni040A.ss01;
},
{
glyphname = uni0408.ss01;
kernLeft = J.ss01;
kernRight = IJ.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = J.ss01;
}
);
width = 500;
}
);
note = uni0408.ss01;
},
{
glyphname = uni0462.ss01;
kernLeft = uni0462.ss01;
kernRight = uni0462;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(390,476,o),
(282,401,q),
(282,566,l),
(501,566,l),
(501,622,l),
(282,622,l),
(282,742,l),
(209,742,l),
(209,622,l),
(19,622,l),
(19,566,l),
(209,566,l),
(209,243,ls),
(209,122,o),
(355,-10,o),
(489,-10,qs),
(623,-10,o),
(774,120,o),
(774,235,qs),
(774,348,o),
(633,476,o),
(515,476,qs)
);
},
{
closed = 1;
nodes = (
(392,53,o),
(282,153,o),
(282,244,qs),
(282,330,l),
(328,372,o),
(438,414,o),
(497,414,qs),
(588,414,o),
(700,318,o),
(700,233,qs),
(700,149,o),
(589,53,o),
(492,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
30 19 2 8 7 1 74 0 3 2 3 131 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 103 10 1 8 8 0 95 0 0 0 38 0 76 22 22 0 0 22 34 22 33 28 26 0 21 0 20 17 17 17 17 19 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 819;
}
);
note = uni0462.ss01;
},
{
glyphname = uni04AC.ss01;
kernLeft = T.ss01;
kernRight = T.ss01;
layers = (
{
layerId = m01;
shapes = (
{
pos = (15,0);
ref = T.ss01;
},
{
pos = (223,0);
ref = descendercy.case;
}
);
width = 611;
}
);
note = uni04AC.ss01;
},
{
glyphname = uni04D0.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (633,0);
ref = brevecombcy.case;
}
);
width = 801;
}
);
note = uni04D0.ss01;
},
{
glyphname = uni04D2.ss01;
kernLeft = A.ss01;
kernRight = A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = A.ss01;
},
{
pos = (700,0);
ref = uni0308.case;
}
);
width = 801;
}
);
note = uni04D2.ss01;
},
{
glyphname = uni04D4.ss01;
kernLeft = A;
kernRight = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = AE.ss01;
}
);
width = 1069;
}
);
note = uni04D4.ss01;
},
{
glyphname = uni04D6.ss01;
kernLeft = uni0510;
kernRight = uni0510;
layers = (
{
layerId = m01;
shapes = (
{
ref = E.ss01;
},
{
pos = (579,0);
ref = brevecombcy.case;
}
);
width = 634;
}
);
note = uni04D6.ss01;
},
{
glyphname = uni04E2.ss01;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (699,0);
ref = uni0304.case;
}
);
width = 795;
}
);
note = uni04E2.ss01;
},
{
glyphname = uni04E4.ss01;
kernLeft = B;
kernRight = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = U.ss01;
},
{
pos = (699,0);
ref = uni0308.case;
}
);
width = 795;
}
);
note = uni04E4.ss01;
},
{
glyphname = uni04EE.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (694,0);
ref = uni0304.case;
}
);
width = 788;
}
);
note = uni04EE.ss01;
},
{
glyphname = uni04F0.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (694,0);
ref = uni0308.case;
}
);
width = 788;
}
);
note = uni04F0.ss01;
},
{
glyphname = uni04F2.ss01;
kernLeft = Y.ss01;
kernRight = J;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y.ss01;
},
{
pos = (694,0);
ref = uni030B.case;
}
);
width = 788;
}
);
note = uni04F2.ss01;
},
{
glyphname = uni04F8.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni042B.ss01;
},
{
pos = (789,0);
ref = uni0308.case;
}
);
width = 978;
}
);
note = uni04F8.ss01;
},
{
glyphname = uni051A.ss01;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
ref = Q.ss01;
}
);
width = 839;
}
);
note = uni051A.ss01;
},
{
glyphname = uni048C.ss01;
kernLeft = U;
kernRight = uni0462;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,476,o),
(211,401,q),
(210,566,l),
(433,566,l),
(433,622,l),
(210,622,l),
(210,742,l),
(137,742,l),
(137,622,l),
(27,622,l),
(27,566,l),
(137,566,l),
(138,243,ls),
(138,122,o),
(284,-10,o),
(418,-10,qs),
(552,-10,o),
(703,120,o),
(703,235,qs),
(703,348,o),
(562,476,o),
(444,476,qs)
);
},
{
closed = 1;
nodes = (
(321,53,o),
(211,153,o),
(211,244,qs),
(211,329,l),
(256,371,o),
(366,414,o),
(426,414,qs),
(517,414,o),
(628,318,o),
(628,233,qs),
(628,149,o),
(518,53,o),
(420,53,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
30 19 2 8 7 1 74 0 3 2 3 131 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 103 10 1 8 8 0 95 0 0 0 38 0 76 22 22 0 0 22 34 22 33 28 26 0 21 0 20 17 17 17 17 19 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 748;
}
);
note = uni048C.ss01;
},
{
glyphname = uni0432.loclBGR;
kernLeft = c;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,410,o),
(546,496,o),
(546,557,qs),
(546,619,o),
(483,707,o),
(380,752,o),
(321,752,qs),
(260,752,o),
(151,703,o),
(83,604,o),
(83,534,qs),
(83,203,ls),
(83,135,o),
(152,39,o),
(265,-8,o),
(329,-8,qs),
(395,-8,o),
(510,41,o),
(581,138,o),
(581,207,qs),
(581,278,o),
(500,373,o),
(425,390,q)
);
},
{
closed = 1;
nodes = (
(154,582,o),
(201,655,o),
(276,690,o),
(319,690,qs),
(383,690,o),
(474,616,o),
(474,549,qs),
(474,482,o),
(386,412,o),
(309,412,qs),
(154,412,l),
(154,530,ls)
);
},
{
closed = 1;
nodes = (
(284,52,o),
(204,88,o),
(154,159,o),
(154,210,qs),
(154,355,l),
(330,355,ls),
(415,355,o),
(508,283,o),
(508,212,qs),
(508,160,o),
(458,88,o),
(376,52,o),
(330,52,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
22 1 4 2 1 74 0 1 0 3 2 1 3 103 0 2 0 4 5 2 4 101 6 1 5 5 0 95 0 0 0 38 0 76 35 35 35 47 35 46 41 36 39 39 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 636;
}
);
note = uni0432.loclBGR;
},
{
glyphname = uni0433.loclBGR;
kernLeft = s;
kernRight = s;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(331,-5,o),
(447,32,o),
(490,63,q),
(464,114,l),
(426,89,o),
(325,55,o),
(268,55,qs),
(201,55,o),
(123,100,o),
(123,142,qs),
(123,171,o),
(162,205,o),
(221,224,o),
(272,234,qs),
(335,247,o),
(413,273,o),
(468,331,o),
(468,380,qs),
(468,453,o),
(355,532,o),
(259,532,qs),
(208,532,o),
(105,502,o),
(65,478,q),
(90,424,l),
(124,445,o),
(214,472,o),
(258,472,qs),
(324,472,o),
(395,426,o),
(395,383,qs),
(395,353,o),
(355,317,o),
(295,299,o),
(244,288,qs),
(181,275,o),
(105,249,o),
(51,193,o),
(51,145,qs),
(51,73,o),
(171,-5,o),
(268,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
17 1 0 1 38 37 16 3 2 0 2 74 0 0 0 1 95 0 1 1 39 75 0 2 2 3 95 4 1 3 3 40 3 76 0 0 0 41 0 40 44 37 44 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 536;
}
);
note = uni0433.loclBGR;
},
{
glyphname = uni0434.loclBGR;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1,0);
ref = g;
}
);
width = 688;
}
);
note = uni0434.loclBGR;
},
{
glyphname = uni0436.loclBGR;
kernLeft = x;
kernRight = x;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(809,0,l),
(620,270,l),
(794,526,l),
(717,526,l),
(562,295,l),
(448,295,l),
(448,742,l),
(377,742,l),
(377,295,l),
(263,295,l),
(109,526,l),
(32,526,l),
(206,271,l),
(17,0,l),
(102,0,l),
(263,234,l),
(377,234,l),
(377,0,l),
(448,0,l),
(448,234,l),
(562,234,l),
(724,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
19 8 2 0 5 1 74 0 6 4 6 131 7 1 5 2 1 0 1 5 0 101 8 1 4 4 34 75 9 3 2 1 1 33 1 76 21 20 17 17 17 17 18 17 17 17 16 10 7 29 
CALL[ ]	/* CallFunction */";
};
width = 826;
}
);
note = uni0436.loclBGR;
},
{
glyphname = uni0437.loclBGR;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,198,o),
(407,285,o),
(407,343,qs),
(407,399,o),
(352,486,o),
(253,533,o),
(189,533,qs),
(100,533,o),
(7,489,q),
(29,434,l),
(113,472,o),
(182,472,qs),
(252,472,o),
(336,396,o),
(336,333,qs),
(336,275,o),
(265,203,o),
(208,203,qs),
(104,203,l),
(104,146,l),
(213,146,ls),
(280,146,o),
(359,72,o),
(359,10,qs),
(359,-32,o),
(314,-100,o),
(233,-138,o),
(182,-138,qs),
(95,-138,o),
(14,-82,q),
(-10,-134,l),
(33,-166,o),
(134,-199,o),
(186,-199,qs),
(254,-199,o),
(366,-146,o),
(430,-52,o),
(430,7,qs),
(430,72,o),
(359,164,o),
(298,180,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
31 1 4 5 30 1 3 4 40 1 2 3 10 9 2 1 2 4 74 0 3 0 2 1 3 2 101 0 4 4 5 95 0 5 5 39 75 0 1 1 0 95 0 0 0 41 0 76 35 36 33 37 36 37 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 486;
}
);
note = uni0437.loclBGR;
},
{
glyphname = uni0438.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
}
);
width = 665;
}
);
note = uni0438.loclBGR;
},
{
glyphname = uni0439.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (547,1);
ref = brevecombcy;
}
);
width = 665;
}
);
note = uni0439.loclBGR;
},
{
glyphname = uni045D.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (625,1);
ref = gravecomb;
}
);
width = 665;
}
);
note = uni045D.loclBGR;
},
{
glyphname = uni043A.loclBGR;
kernLeft = b;
kernRight = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,0,l),
(348,271,l),
(556,526,l),
(478,526,l),
(293,295,l),
(173,295,l),
(173,742,l),
(102,742,l),
(102,0,l),
(173,0,l),
(173,234,l),
(292,234,l),
(486,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
10 1 0 3 1 74 0 2 4 2 131 0 3 0 0 1 3 0 101 0 4 4 34 75 5 1 1 1 33 1 76 18 17 17 17 17 16 6 7 26 
CALL[ ]	/* CallFunction */";
};
width = 581;
}
);
note = uni043A.loclBGR;
},
{
glyphname = uni043B.loclBGR;
kernLeft = uni0434;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(315,526,l),
(242,526,l),
(9,0,l),
(79,0,l),
(277,447,l),
(474,0,l),
(549,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 0 1 1 74 0 1 1 34 75 3 2 2 0 0 33 0 76 0 0 0 6 0 6 17 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 557;
}
);
note = uni043B.loclBGR;
},
{
glyphname = uni043D.loclBGR;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni043D;
}
);
width = 675;
}
);
note = uni043D.loclBGR;
},
{
glyphname = uni043F.loclBGR;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = n;
}
);
width = 670;
}
);
note = uni043F.loclBGR;
},
{
glyphname = uni0442.loclBGR;
kernLeft = i;
kernRight = a;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = m;
}
);
width = 1054;
}
);
note = uni0442.loclBGR;
},
{
glyphname = uni0447.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(429,347,ls),
(429,289,o),
(335,229,o),
(264,229,qs),
(197,229,o),
(120,290,o),
(120,348,qs),
(120,526,l),
(49,526,l),
(49,346,ls),
(49,259,o),
(154,172,o),
(246,172,qs),
(315,172,o),
(409,214,o),
(429,253,q),
(429,0,l),
(500,0,l),
(500,526,l),
(429,526,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
3 1 3 2 1 74 0 3 0 1 0 3 1 103 5 4 2 2 2 34 75 0 0 0 33 0 76 0 0 0 19 0 19 35 19 35 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 601;
}
);
note = uni0447.loclBGR;
},
{
glyphname = uni0446.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (436,0);
ref = descendercy;
}
);
width = 686;
}
);
note = uni0446.loclBGR;
},
{
glyphname = uni0448.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(882,248,ls),
(882,159,o),
(787,58,o),
(705,58,qs),
(633,58,o),
(554,144,o),
(554,227,qs),
(554,524,l),
(483,524,l),
(483,248,ls),
(483,159,o),
(388,58,o),
(307,58,qs),
(235,58,o),
(156,144,o),
(156,227,qs),
(156,524,l),
(85,524,l),
(85,219,ls),
(85,109,o),
(199,-6,o),
(297,-6,qs),
(367,-6,o),
(476,54,o),
(504,106,q),
(528,51,o),
(625,-6,o),
(692,-6,qs),
(757,-6,o),
(856,46,o),
(884,93,q),
(884,-1,l),
(953,-1,l),
(953,524,l),
(882,524,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
9 3 2 4 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
8 7 5 3 3 3 34 75 6 1 4 4 0 95 2 1 2 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
8 7 5 3 3 3 34 75 0 0 0 33 75 6 1 4 4 1 95 2 1 1 1 38 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
0 0 0 34 0 34 35 19 35 19 36 35 17 9 7 27 
CALL[ ]	/* CallFunction */";
};
width = 1054;
}
);
note = uni0448.loclBGR;
},
{
glyphname = uni0449.loclBGR;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0448.loclBGR;
},
{
pos = (824,0);
ref = descendercy;
}
);
width = 1075;
}
);
note = uni0449.loclBGR;
},
{
glyphname = uni044C.loclBGR;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(411,-11,o),
(528,100,o),
(528,190,qs),
(528,275,o),
(421,374,o),
(324,374,qs),
(266,374,o),
(181,334,o),
(158,301,q),
(158,526,l),
(87,526,l),
(87,194,ls),
(87,96,o),
(202,-11,o),
(311,-11,qs)
);
},
{
closed = 1;
nodes = (
(237,44,o),
(158,121,o),
(158,189,qs),
(158,237,l),
(178,277,o),
(254,320,o),
(307,320,qs),
(379,320,o),
(456,247,o),
(456,188,qs),
(456,125,o),
(380,44,o),
(312,44,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
23 5 2 4 3 1 74 0 1 0 3 4 1 3 103 0 0 0 34 75 6 1 4 4 2 95 5 1 2 2 38 2 76 15 15 0 0 15 27 15 26 21 19 0 14 0 13 35 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = uni044C.loclBGR;
},
{
glyphname = uni044A.loclBGR;
kernLeft = uni0442;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(350,374,o),
(265,334,o),
(242,301,q),
(242,526,l),
(2,526,l),
(2,463,l),
(171,463,l),
(171,194,ls),
(171,96,o),
(286,-11,o),
(395,-11,qs),
(495,-11,o),
(612,100,o),
(612,190,qs),
(612,275,o),
(505,374,o),
(408,374,qs)
);
},
{
closed = 1;
nodes = (
(321,44,o),
(242,121,o),
(242,189,qs),
(242,237,l),
(262,277,o),
(338,320,o),
(391,320,qs),
(463,320,o),
(540,247,o),
(540,188,qs),
(540,125,o),
(464,44,o),
(396,44,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
25 13 2 5 4 1 74 6 1 3 0 4 5 3 4 103 0 1 1 2 93 0 2 2 34 75 7 1 5 5 0 95 0 0 0 38 0 76 17 17 0 0 17 29 17 28 23 21 0 16 0 15 17 19 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 650;
}
);
note = uni044A.loclBGR;
},
{
glyphname = uni044E.loclBGR;
kernLeft = b;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(461,530,o),
(349,472,o),
(278,367,o),
(270,299,q),
(173,299,l),
(173,742,l),
(102,742,l),
(102,0,l),
(173,0,l),
(173,234,l),
(269,234,l),
(275,164,o),
(346,56,o),
(459,-5,o),
(529,-5,qs),
(604,-5,o),
(723,64,o),
(791,186,o),
(791,263,qs),
(791,340,o),
(723,462,o),
(604,530,o),
(529,530,qs)
);
},
{
closed = 1;
nodes = (
(475,57,o),
(389,109,o),
(339,203,o),
(339,263,qs),
(339,323,o),
(389,417,o),
(475,468,o),
(529,468,qs),
(583,468,o),
(670,417,o),
(720,323,o),
(720,263,qs),
(720,203,o),
(670,109,o),
(583,57,o),
(529,57,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 3 5 3 131 0 4 0 1 7 4 1 101 0 6 6 5 95 8 1 5 5 39 75 9 1 7 7 0 95 2 1 0 0 40 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 3 5 3 131 0 4 0 1 7 4 1 101 0 6 6 5 95 8 1 5 5 39 75 0 2 2 33 75 9 1 7 7 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
23 23 0 0 23 38 23 37 31 29 0 22 0 21 17 17 17 19 38 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 842;
}
);
note = uni044E.loclBGR;
},
{
glyphname = uni0493.loclBSH;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(482,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,215,l),
(378,215,l),
(378,267,l),
(172,267,l),
(172,463,l),
(482,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
0 0 0 1 2 0 1 101 5 1 4 4 3 93 0 3 3 34 75 0 2 2 33 2 76 0 0 0 9 0 9 17 17 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 488;
}
);
note = uni0493.loclBSH;
},
{
glyphname = uni0499.loclBSH;
kernLeft = uni01EF;
kernRight = uni01EF;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0437;
},
{
pos = (545,0);
ref = uni0327;
}
);
width = 534;
}
);
note = uni0499.loclBSH;
},
{
glyphname = uni04AB.loclCHU;
kernLeft = c;
layers = (
{
layerId = m01;
shapes = (
{
pos = (4,0);
ref = c;
},
{
pos = (615,0);
ref = uni0327;
}
);
width = 563;
}
);
note = uni04AB.loclCHU;
},
{
glyphname = uni0453.loclMKD;
kernLeft = i;
kernRight = r;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0433;
},
{
pos = (590,-2);
ref = acutecomb;
}
);
width = 475;
}
);
note = uni0453.loclMKD;
},
{
glyphname = uni0431.loclSRB;
kernLeft = uni0431.loclSRB;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(290,533,o),
(173,605,o),
(173,639,qs),
(173,658,o),
(206,680,o),
(235,680,qs),
(528,681,l),
(528,742,l),
(213,742,ls),
(162,742,o),
(102,693,o),
(102,654,qs),
(102,611,o),
(195,525,o),
(297,477,q),
(226,481,o),
(111,424,o),
(45,314,o),
(45,243,qs),
(45,172,o),
(112,58,o),
(232,-6,o),
(308,-6,qs),
(384,-6,o),
(505,59,o),
(574,175,o),
(574,249,qs),
(574,403,o),
(420,474,qs)
);
},
{
closed = 1;
nodes = (
(252,55,o),
(165,103,o),
(116,189,o),
(116,243,qs),
(116,298,o),
(165,384,o),
(252,433,o),
(308,433,qs),
(364,433,o),
(453,384,o),
(504,298,o),
(504,243,qs),
(504,189,o),
(454,103,o),
(364,55,o),
(308,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
0 2 0 3 1 2 3 101 0 1 0 4 5 1 4 103 6 1 5 5 0 95 0 0 0 38 0 76 29 29 29 44 29 43 44 33 37 22 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 620;
}
);
note = uni0431.loclSRB;
},
{
glyphname = uni0433.loclSRB;
kernLeft = i;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = dotlessi;
},
{
pos = (435,1);
ref = uni0304.narrow;
}
);
width = 269;
}
);
note = uni0433.loclSRB;
},
{
glyphname = uni0434.loclSRB;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = g;
}
);
width = 688;
}
);
note = uni0434.loclSRB;
},
{
glyphname = uni043F.loclSRB;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (634,1);
ref = uni0304;
}
);
width = 673;
}
);
note = uni043F.loclSRB;
},
{
glyphname = uni0442.loclSRB;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(882,248,ls),
(882,159,o),
(787,58,o),
(705,58,qs),
(633,58,o),
(554,144,o),
(554,227,qs),
(554,524,l),
(483,524,l),
(483,248,ls),
(483,159,o),
(388,58,o),
(307,58,qs),
(235,58,o),
(156,144,o),
(156,227,qs),
(156,524,l),
(85,524,l),
(85,219,ls),
(85,109,o),
(199,-6,o),
(297,-6,qs),
(367,-6,o),
(476,54,o),
(504,106,q),
(528,51,o),
(625,-6,o),
(692,-6,qs),
(757,-6,o),
(856,46,o),
(884,93,q),
(884,-1,l),
(953,-1,l),
(953,524,l),
(882,524,l)
);
},
{
closed = 1;
nodes = (
(1948,643,l),
(1948,690,l),
(1332,690,l),
(1332,643,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
1 1 
PUSHW[ ]	/* 1 value pushed */
-2 
PUSHB[ ]	/* 1 value pushed */
51 
CALL[ ]	/* CallFunction */";
};
width = 1054;
}
);
note = uni0442.loclSRB;
},
{
glyphname = uni0430.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
}
);
width = 678;
}
);
note = uni0430.ss01;
},
{
glyphname = uni0434.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (1,0);
ref = g;
}
);
width = 688;
}
);
note = uni0434.ss01;
},
{
glyphname = uni0435.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
}
);
width = 604;
}
);
note = uni0435.ss01;
},
{
glyphname = uni0450.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = gravecomb;
}
);
width = 604;
}
);
note = uni0450.ss01;
},
{
glyphname = uni0451.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (600,1);
ref = uni0308;
}
);
width = 604;
}
);
note = uni0451.ss01;
},
{
glyphname = uni0438.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
}
);
width = 665;
}
);
note = uni0438.ss01;
},
{
glyphname = uni0439.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (547,1);
ref = brevecombcy;
}
);
width = 665;
}
);
note = uni0439.ss01;
},
{
glyphname = uni048B.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(389,603,o),
(475,673,o),
(477,732,q),
(427,732,l),
(426,693,o),
(368,647,o),
(325,647,qs),
(282,647,o),
(224,693,o),
(223,732,q),
(173,732,l),
(175,673,o),
(261,603,o),
(325,603,qs)
);
},
{
closed = 1;
nodes = (
(564,526,l),
(493,526,l),
(493,250,ls),
(493,160,o),
(397,59,o),
(314,59,qs),
(238,59,o),
(156,145,o),
(156,228,qs),
(156,526,l),
(85,526,l),
(85,221,ls),
(85,110,o),
(204,-5,o),
(307,-5,qs),
(370,-5,o),
(468,48,o),
(496,96,q),
(496,0,l),
(572,0,l),
(540,-115,l),
(598,-115,l),
(653,62,l),
(564,62,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
19 1 8 7 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
2 1 0 1 0 131 0 4 5 5 4 111 0 1 11 1 3 7 1 3 103 9 1 7 7 34 75 12 10 2 8 8 5 96 6 1 5 5 33 5 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
2 1 0 1 0 131 0 4 5 4 132 0 1 11 1 3 7 1 3 103 9 1 7 7 34 75 12 10 2 8 8 5 96 6 1 5 5 33 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
2 1 0 1 0 131 0 4 6 4 132 0 1 11 1 3 7 1 3 103 9 1 7 7 34 75 12 10 2 8 8 5 94 0 5 5 33 75 12 10 2 8 8 6 96 0 6 6 40 6 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
14 14 0 0 14 37 14 37 36 35 32 30 27 26 23 21 18 17 16 15 0 13 0 12 18 34 18 13 7 23 
CALL[ ]	/* CallFunction */";
};
width = 665;
}
);
note = uni048B.ss01;
},
{
glyphname = uni045D.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (625,1);
ref = gravecomb;
}
);
width = 665;
}
);
note = uni045D.ss01;
},
{
glyphname = uni0440.ss01;
kernLeft = uni0440.ss01;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(265,530,o),
(144,462,o),
(77,340,o),
(77,261,qs),
(77,-194,l),
(148,-194,l),
(148,98,l),
(180,48,o),
(283,-5,o),
(349,-5,qs),
(424,-5,o),
(541,63,o),
(607,184,o),
(607,262,qs),
(607,340,o),
(540,462,o),
(420,530,o),
(343,530,qs)
);
},
{
closed = 1;
nodes = (
(285,57,o),
(196,109,o),
(147,203,o),
(147,263,qs),
(147,323,o),
(196,416,o),
(285,468,o),
(341,468,qs),
(397,468,o),
(487,415,o),
(537,321,o),
(537,262,qs),
(537,203,o),
(487,109,o),
(397,57,o),
(341,57,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
10 1 4 3 1 74 0 3 3 2 95 5 1 2 2 39 75 6 1 4 4 0 95 0 0 0 40 75 0 1 1 36 1 76 18 18 0 0 18 33 18 32 26 24 0 17 0 16 19 38 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uni0440.ss01;
},
{
glyphname = uni0442.ss01;
layers = (
{
layerId = m01;
shapes = (
{
pos = (2,0);
ref = m;
}
);
width = 1054;
}
);
note = uni0442.ss01;
},
{
glyphname = uni0443.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
}
);
width = 673;
}
);
note = uni0443.ss01;
},
{
glyphname = uni045E.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (556,1);
ref = brevecombcy;
}
);
width = 673;
}
);
note = uni045E.ss01;
},
{
glyphname = uni044C.ss01;
kernLeft = u;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(418,-11,o),
(538,99,o),
(538,190,qs),
(538,274,o),
(429,374,o),
(331,374,qs),
(275,374,o),
(184,338,o),
(158,307,q),
(158,526,l),
(87,526,l),
(87,194,ls),
(87,97,o),
(205,-11,o),
(313,-11,qs)
);
},
{
closed = 1;
nodes = (
(241,44,o),
(158,121,o),
(158,189,qs),
(158,237,l),
(178,276,o),
(259,320,o),
(313,320,qs),
(386,320,o),
(466,248,o),
(466,188,qs),
(466,124,o),
(385,44,o),
(314,44,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
23 5 2 4 3 1 74 0 1 0 3 4 1 3 103 0 0 0 34 75 6 1 4 4 2 95 5 1 2 2 38 2 76 15 15 0 0 15 27 15 26 21 19 0 14 0 13 35 19 7 7 22 
CALL[ ]	/* CallFunction */";
};
width = 575;
}
);
note = uni044C.ss01;
},
{
glyphname = uni044A.ss01;
kernLeft = uni044A.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,374,o),
(274,334,o),
(251,301,q),
(251,526,l),
(2,526,l),
(2,463,l),
(180,463,l),
(180,194,ls),
(180,96,o),
(295,-11,o),
(404,-11,qs),
(504,-11,o),
(621,100,o),
(621,190,qs),
(621,275,o),
(514,374,o),
(417,374,qs)
);
},
{
closed = 1;
nodes = (
(330,44,o),
(251,121,o),
(251,189,qs),
(251,237,l),
(271,277,o),
(347,320,o),
(400,320,qs),
(472,320,o),
(549,247,o),
(549,188,qs),
(549,125,o),
(473,44,o),
(405,44,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
25 13 2 5 4 1 74 6 1 3 0 4 5 3 4 103 0 1 1 2 93 0 2 2 34 75 7 1 5 5 0 95 0 0 0 38 0 76 17 17 0 0 17 29 17 28 23 21 0 16 0 15 17 19 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 659;
}
);
note = uni044A.ss01;
},
{
glyphname = uni044B.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,-11,o),
(475,40,o),
(528,131,o),
(528,190,qs),
(528,275,o),
(421,374,o),
(325,374,qs),
(268,374,o),
(182,336,o),
(158,307,q),
(158,526,l),
(87,526,l),
(87,194,ls),
(87,96,o),
(202,-11,o),
(310,-11,qs)
);
},
{
closed = 1;
nodes = (
(685,0,l),
(685,526,l),
(614,526,l),
(614,0,l)
);
},
{
closed = 1;
nodes = (
(237,44,o),
(158,121,o),
(158,189,qs),
(158,237,l),
(178,276,o),
(255,320,o),
(307,320,qs),
(378,320,o),
(456,247,o),
(456,188,qs),
(456,125,o),
(380,44,o),
(312,44,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
28 5 2 6 5 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 5 6 1 5 103 3 1 0 0 34 75 8 1 6 6 2 95 4 7 2 2 2 38 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 1 0 5 6 1 5 103 3 1 0 0 34 75 0 4 4 33 75 8 1 6 6 2 95 7 1 2 2 38 2 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
20 20 0 0 20 32 20 31 26 24 19 18 17 16 0 15 0 14 35 19 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 786;
}
);
note = uni044B.ss01;
},
{
glyphname = uni0459.ss01;
kernLeft = uni0434;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(630,374,o),
(539,338,o),
(513,307,q),
(513,526,l),
(146,526,l),
(138,337,ls),
(131,199,o),
(88,62,o),
(43,62,qs),
(18,62,o),
(7,65,q),
(8,1,l),
(27,-7,o),
(60,-7,qs),
(131,-7,o),
(194,163,o),
(202,332,qs),
(209,463,l),
(442,463,l),
(442,194,ls),
(442,97,o),
(560,-11,o),
(668,-11,qs),
(773,-11,o),
(893,99,o),
(893,190,qs),
(893,275,o),
(784,374,o),
(686,374,qs)
);
},
{
closed = 1;
nodes = (
(596,44,o),
(513,121,o),
(513,189,qs),
(513,237,l),
(533,276,o),
(614,320,o),
(668,320,qs),
(741,320,o),
(821,248,o),
(821,188,qs),
(821,124,o),
(740,44,o),
(669,44,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
37 25 17 3 3 6 16 1 0 7 2 74 8 1 5 0 6 3 5 6 103 0 1 1 4 93 0 4 4 34 75 0 3 3 0 95 2 1 0 0 38 75 9 1 7 7 0 95 2 1 0 0 38 0 76 29 29 0 0 29 41 29 40 35 33 0 28 0 27 19 35 35 19 36 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 930;
}
);
note = uni0459.ss01;
},
{
glyphname = uni045A.ss01;
kernLeft = i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(549,314,l),
(549,526,l),
(478,526,l),
(478,314,l),
(172,314,l),
(172,526,l),
(101,526,l),
(101,0,l),
(172,0,l),
(172,253,l),
(478,253,l),
(478,172,ls),
(478,82,o),
(582,-11,o),
(684,-11,qs),
(787,-11,o),
(907,82,o),
(907,162,qs),
(907,234,o),
(806,314,o),
(715,314,qs)
);
},
{
closed = 1;
nodes = (
(619,43,o),
(549,108,o),
(549,170,qs),
(549,256,l),
(699,256,ls),
(768,256,o),
(835,209,o),
(835,160,qs),
(835,105,o),
(756,43,o),
(688,43,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
9 6 2 4 7 1 1 8 4 1 101 5 1 3 3 34 75 10 1 8 8 0 95 2 1 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
9 6 2 4 7 1 1 8 4 1 101 5 1 3 3 34 75 0 2 2 33 75 10 1 8 8 0 95 0 0 0 38 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
21 21 0 0 21 31 21 30 27 25 0 20 0 19 17 17 17 17 19 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 937;
}
);
note = uni045A.ss01;
},
{
glyphname = uni0463.ss01;
kernRight = uni0463;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,372,o),
(230,336,o),
(204,305,q),
(204,497,l),
(402,497,l),
(402,551,l),
(204,551,l),
(204,742,l),
(133,742,l),
(133,551,l),
(-3,551,l),
(-3,497,l),
(133,497,l),
(133,193,ls),
(133,96,o),
(251,-12,o),
(359,-12,qs),
(464,-12,o),
(584,98,o),
(584,189,qs),
(584,273,o),
(474,372,o),
(376,372,qs)
);
},
{
closed = 1;
nodes = (
(286,43,o),
(204,120,o),
(204,187,qs),
(204,236,l),
(224,275,o),
(305,319,o),
(359,319,qs),
(431,319,o),
(511,246,o),
(511,186,qs),
(511,122,o),
(430,43,o),
(360,43,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
31 19 2 8 7 1 74 0 3 2 3 131 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 103 10 1 8 8 0 95 0 0 0 38 0 76 23 23 0 0 23 35 23 34 29 27 0 22 0 21 17 17 17 17 19 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 621;
}
);
note = uni0463.ss01;
},
{
glyphname = uni04D1.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (551,1);
ref = brevecombcy;
}
);
width = 678;
}
);
note = uni04D1.ss01;
},
{
glyphname = uni04D3.ss01;
kernLeft = c;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = a.ss01;
},
{
pos = (629,1);
ref = uni0308;
}
);
width = 678;
}
);
note = uni04D3.ss01;
},
{
glyphname = uni04D5.ss01;
kernLeft = a;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = ae.ss01;
}
);
width = 987;
}
);
note = uni04D5.ss01;
},
{
glyphname = uni04D7.ss01;
kernLeft = c;
kernRight = e;
layers = (
{
layerId = m01;
shapes = (
{
ref = e.ss01;
},
{
pos = (522,1);
ref = brevecombcy;
}
);
width = 604;
}
);
note = uni04D7.ss01;
},
{
glyphname = uni04D9.ss01;
kernLeft = c;
kernRight = b;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(218,530,o),
(114,486,o),
(79,444,q),
(119,398,l),
(148,432,o),
(231,467,o),
(280,467,qs),
(353,467,o),
(458,394,o),
(478,330,q),
(46,246,l),
(48,173,o),
(115,59,o),
(228,-5,o),
(298,-5,qs),
(373,-5,o),
(491,63,o),
(558,185,o),
(558,262,qs),
(558,339,o),
(488,461,o),
(362,530,o),
(281,530,qs)
);
},
{
closed = 1;
nodes = (
(227,56,o),
(129,141,o),
(117,207,q),
(488,279,l),
(489,272,o),
(489,257,qs),
(489,198,o),
(440,107,o),
(353,56,o),
(298,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
29 19 18 12 11 5 3 1 1 74 0 1 1 2 95 4 1 2 2 39 75 5 1 3 3 0 95 0 0 0 40 0 76 23 23 0 0 23 32 23 31 0 22 0 21 38 38 6 7 22 
CALL[ ]	/* CallFunction */";
};
width = 604;
}
);
note = uni04D9.ss01;
},
{
glyphname = uni04DB.ss01;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni04D9.ss01;
},
{
pos = (604,-1);
ref = uni0308;
}
);
width = 604;
}
);
note = uni04DB.ss01;
},
{
glyphname = uni04E3.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (625,1);
ref = uni0304;
}
);
width = 665;
}
);
note = uni04E3.ss01;
},
{
glyphname = uni04E5.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-9,0);
ref = u;
},
{
pos = (625,1);
ref = uni0308;
}
);
width = 665;
}
);
note = uni04E5.ss01;
},
{
glyphname = uni04EF.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = uni0304;
}
);
width = 673;
}
);
note = uni04EF.ss01;
},
{
glyphname = uni04F1.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = uni0308;
}
);
width = 673;
}
);
note = uni04F1.ss01;
},
{
glyphname = uni04F3.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = y.ss01;
},
{
pos = (634,1);
ref = uni030B;
}
);
width = 673;
}
);
note = uni04F3.ss01;
},
{
glyphname = uni04F9.ss01;
kernLeft = u;
kernRight = g;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni044B.ss01;
},
{
pos = (693,1);
ref = uni0308;
}
);
width = 786;
}
);
note = uni04F9.ss01;
},
{
glyphname = uni048D.ss01;
kernLeft = uni048D;
kernRight = uni0463;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(308,340,o),
(220,304,o),
(198,275,q),
(198,406,l),
(395,406,l),
(395,459,l),
(198,459,l),
(198,526,l),
(127,526,l),
(127,459,l),
(18,459,l),
(18,406,l),
(127,406,l),
(127,176,ls),
(127,87,o),
(243,-11,o),
(353,-11,qs),
(455,-11,o),
(575,89,o),
(575,172,qs),
(575,250,o),
(466,340,o),
(367,340,qs)
);
},
{
closed = 1;
nodes = (
(279,44,o),
(198,111,o),
(198,170,qs),
(198,213,l),
(218,247,o),
(296,285,o),
(350,285,qs),
(424,285,o),
(503,221,o),
(503,169,qs),
(503,114,o),
(425,44,o),
(355,44,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
31 19 2 8 7 1 74 4 1 2 5 1 1 6 2 1 101 9 1 6 0 7 8 6 7 103 0 3 3 34 75 10 1 8 8 0 95 0 0 0 38 0 76 23 23 0 0 23 35 23 34 29 27 0 22 0 21 17 17 17 17 19 36 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 607;
}
);
note = uni048D.ss01;
},
{
glyphname = zero.osf;
kernLeft = zero.osf;
kernRight = zero.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(422,-6,o),
(552,72,o),
(626,211,o),
(626,300,qs),
(626,389,o),
(552,528,o),
(422,606,o),
(340,606,qs),
(257,606,o),
(126,528,o),
(53,389,o),
(53,300,qs),
(53,211,o),
(126,72,o),
(257,-6,o),
(340,-6,qs)
);
},
{
closed = 1;
nodes = (
(278,60,o),
(181,119,o),
(127,227,o),
(127,300,qs),
(127,373,o),
(181,481,o),
(278,540,o),
(340,540,qs),
(402,540,o),
(498,481,o),
(552,373,o),
(552,300,qs),
(552,227,o),
(498,119,o),
(402,60,o),
(340,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 103 5 1 3 3 1 95 4 1 1 1 38 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 679;
}
);
note = zero.osf;
},
{
glyphname = one.osf;
kernLeft = one.osf;
kernRight = one.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,536,l),
(174,536,l),
(174,0,l),
(246,0,l),
(246,600,l),
(9,600,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 2 0 1 0 2 1 101 0 0 0 33 0 76 0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 361;
}
);
note = one.osf;
},
{
glyphname = two.osf;
kernLeft = two.osf;
kernRight = two.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(377,243,ls),
(442,297,o),
(492,383,o),
(492,434,qs),
(492,483,o),
(435,562,o),
(330,606,o),
(260,606,qs),
(178,606,o),
(51,553,o),
(11,501,q),
(66,462,l),
(131,542,o),
(256,542,qs),
(334,542,o),
(418,479,o),
(418,429,qs),
(418,393,o),
(379,329,o),
(325,284,qs),
(33,44,l),
(33,0,l),
(525,0,l),
(525,64,l),
(160,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
13 12 2 3 1 3 1 0 3 2 74 0 2 0 1 3 2 1 103 4 1 3 3 0 93 0 0 0 33 0 76 0 0 0 24 0 24 36 39 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 568;
}
);
note = two.osf;
},
{
glyphname = three.osf;
kernLeft = three.osf;
kernRight = three.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(492,549,l),
(492,600,l),
(43,600,l),
(43,536,l),
(400,536,l),
(206,293,l),
(206,240,l),
(256,240,ls),
(351,240,o),
(445,166,o),
(445,101,qs),
(445,35,o),
(351,-40,o),
(265,-40,qs),
(198,-40,o),
(83,5,o),
(49,41,q),
(14,-16,l),
(55,-57,o),
(190,-106,o),
(266,-106,qs),
(348,-106,o),
(462,-52,o),
(519,41,o),
(519,101,qs),
(519,187,o),
(405,294,o),
(295,300,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
26 1 3 4 21 1 2 5 10 9 2 1 2 3 74 0 4 0 3 5 4 3 101 6 1 5 0 2 1 5 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 27 0 27 17 18 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 564;
}
);
note = three.osf;
},
{
glyphname = four.osf;
kernLeft = four.osf;
kernRight = four.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(507,148,l),
(507,310,l),
(437,310,l),
(437,148,l),
(133,148,l),
(491,600,l),
(411,600,l),
(40,136,l),
(40,84,l),
(435,84,l),
(435,-100,l),
(507,-100,l),
(507,84,l),
(647,84,l),
(647,148,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
6 1 0 4 1 74 0 3 5 3 131 0 5 4 1 5 85 6 1 4 2 1 0 1 4 0 102 0 5 5 1 93 0 1 5 1 77 17 17 17 18 17 17 16 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 661;
}
);
note = four.osf;
},
{
glyphname = five.osf;
kernLeft = five.osf;
kernRight = five.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(146,313,l),
(170,536,l),
(490,536,l),
(490,600,l),
(107,600,l),
(71,249,l),
(220,249,ls),
(347,249,o),
(454,175,o),
(454,103,qs),
(454,38,o),
(359,-40,o),
(272,-40,qs),
(206,-40,o),
(92,5,o),
(57,41,q),
(22,-16,l),
(63,-57,o),
(198,-106,o),
(273,-106,qs),
(356,-106,o),
(470,-51,o),
(527,45,o),
(527,106,qs),
(527,204,o),
(388,313,o),
(236,313,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
10 9 2 1 2 1 74 0 3 0 4 5 3 4 101 6 1 5 0 2 1 5 2 101 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 26 0 25 17 17 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 566;
}
);
note = five.osf;
},
{
glyphname = six.osf;
kernLeft = zero;
kernRight = six;
layers = (
{
layerId = m01;
shapes = (
{
ref = six;
}
);
width = 609;
}
);
note = six.osf;
},
{
glyphname = seven.osf;
kernLeft = seven.osf;
kernRight = seven.osf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(32,405,l),
(103,405,l),
(103,536,l),
(463,536,l),
(175,-100,l),
(253,-100,l),
(546,549,l),
(546,600,l),
(32,600,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 1 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 0 1 2 112 0 0 0 130 4 1 3 1 1 3 85 4 1 3 3 1 93 0 1 3 1 77 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 0 1 2 0 126 0 0 0 130 4 1 3 1 1 3 85 4 1 3 3 1 93 0 1 3 1 77 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 8 0 8 17 17 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 589;
}
);
note = seven.osf;
},
{
glyphname = eight.osf;
kernLeft = eight;
layers = (
{
layerId = m01;
shapes = (
{
ref = eight;
}
);
width = 638;
}
);
note = eight.osf;
},
{
glyphname = nine.osf;
kernLeft = nine.osf;
kernRight = nine.osf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-100);
ref = nine;
}
);
width = 609;
}
);
note = nine.osf;
},
{
glyphname = zero.sinf;
kernRight = zero.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = zero.dnom;
}
);
width = 430;
}
);
note = zero.sinf;
},
{
glyphname = one.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = one.dnom;
}
);
width = 430;
}
);
note = one.sinf;
},
{
glyphname = two.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = two.dnom;
}
);
width = 430;
}
);
note = two.sinf;
},
{
glyphname = three.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = three.dnom;
}
);
width = 430;
}
);
note = three.sinf;
},
{
glyphname = four.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = four.dnom;
}
);
width = 430;
}
);
note = four.sinf;
},
{
glyphname = five.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = five.dnom;
}
);
width = 430;
}
);
note = five.sinf;
},
{
glyphname = six.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = six.dnom;
}
);
width = 430;
}
);
note = six.sinf;
},
{
glyphname = seven.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = seven.dnom;
}
);
width = 430;
}
);
note = seven.sinf;
},
{
glyphname = eight.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = eight.dnom;
}
);
width = 430;
}
);
note = eight.sinf;
},
{
glyphname = nine.sinf;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-194);
ref = nine.dnom;
}
);
width = 430;
}
);
note = nine.sinf;
},
{
glyphname = zero.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(433,-6,o),
(562,81,o),
(633,242,o),
(633,350,qs),
(633,458,o),
(562,619,o),
(433,706,o),
(350,706,qs),
(267,706,o),
(138,619,o),
(67,458,o),
(67,350,qs),
(67,242,o),
(138,81,o),
(267,-6,o),
(350,-6,qs)
);
},
{
closed = 1;
nodes = (
(288,60,o),
(194,128,o),
(141,259,o),
(141,350,qs),
(141,441,o),
(194,572,o),
(288,640,o),
(350,640,qs),
(412,640,o),
(506,572,o),
(559,441,o),
(559,350,qs),
(559,259,o),
(506,128,o),
(412,60,o),
(350,60,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 2 2 0 95 0 0 0 37 75 5 1 3 3 1 95 4 1 1 1 38 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = zero.tf;
},
{
glyphname = one.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(414,700,l),
(160,700,l),
(160,636,l),
(340,636,l),
(340,64,l),
(148,64,l),
(148,0,l),
(586,0,l),
(586,64,l),
(414,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 2 2 3 93 0 3 3 32 75 5 4 2 1 1 0 93 0 0 0 33 0 76 0 0 0 9 0 9 17 17 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = one.tf;
},
{
glyphname = two.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(445,298,ls),
(515,365,o),
(567,464,o),
(567,518,qs),
(567,573,o),
(509,658,o),
(398,706,o),
(320,706,qs),
(239,706,o),
(109,656,o),
(66,607,q),
(116,562,l),
(185,640,o),
(315,640,qs),
(402,640,o),
(493,570,o),
(493,511,qs),
(493,470,o),
(451,392,o),
(393,336,qs),
(91,51,l),
(91,0,l),
(598,0,l),
(598,64,l),
(198,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
13 12 2 3 1 3 1 0 3 2 74 0 1 1 2 95 0 2 2 37 75 4 1 3 3 0 93 0 0 0 33 0 76 0 0 0 24 0 24 36 39 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = two.tf;
},
{
glyphname = three.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(567,649,l),
(567,700,l),
(82,700,l),
(82,636,l),
(474,636,l),
(270,393,l),
(270,340,l),
(324,340,ls),
(421,340,o),
(521,266,o),
(521,201,qs),
(521,135,o),
(422,60,o),
(330,60,qs),
(256,60,o),
(144,104,o),
(107,141,q),
(68,84,l),
(108,42,o),
(246,-6,o),
(330,-6,qs),
(415,-6,o),
(535,48,o),
(595,141,o),
(595,201,qs),
(595,288,o),
(472,395,o),
(359,400,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
26 1 3 4 21 1 2 5 10 9 2 1 2 3 74 6 1 5 0 2 1 5 2 103 0 3 3 4 93 0 4 4 32 75 0 1 1 0 95 0 0 0 38 0 76 0 0 0 27 0 27 17 18 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = three.tf;
},
{
glyphname = four.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,248,l),
(494,407,l),
(427,407,l),
(427,248,l),
(149,248,l),
(466,700,l),
(385,700,l),
(60,236,l),
(60,184,l),
(424,184,l),
(424,0,l),
(494,0,l),
(494,184,l),
(636,184,l),
(636,248,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
6 1 0 4 1 74 0 5 3 4 3 5 4 126 6 1 4 2 1 0 1 4 0 102 0 3 3 32 75 0 1 1 33 1 76 17 17 17 18 17 17 16 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = four.tf;
},
{
glyphname = five.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,413,l),
(224,636,l),
(558,636,l),
(558,700,l),
(162,700,l),
(125,349,l),
(290,349,ls),
(418,349,o),
(527,274,o),
(527,205,qs),
(527,140,o),
(430,60,o),
(338,60,qs),
(267,60,o),
(148,103,o),
(109,138,q),
(74,81,l),
(118,41,o),
(257,-6,o),
(337,-6,qs),
(423,-6,o),
(542,50,o),
(601,147,o),
(601,207,qs),
(601,303,o),
(458,413,o),
(304,413,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
10 9 2 1 2 1 74 6 1 5 0 2 1 5 2 101 0 4 4 3 93 0 3 3 32 75 0 1 1 0 95 0 0 0 38 0 76 0 0 0 26 0 25 17 17 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = five.tf;
},
{
glyphname = six.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(304,419,o),
(182,353,o),
(158,298,q),
(155,330,o),
(155,354,qs),
(155,446,o),
(222,576,o),
(342,643,o),
(422,643,qs),
(504,643,o),
(558,609,q),
(587,668,l),
(554,687,o),
(468,706,o),
(422,706,qs),
(320,706,o),
(166,618,o),
(82,454,o),
(82,342,qs),
(82,175,o),
(238,-6,o),
(378,-6,qs),
(449,-6,o),
(562,48,o),
(627,146,o),
(627,209,qs),
(627,270,o),
(564,366,o),
(452,419,o),
(382,419,qs)
);
},
{
closed = 1;
nodes = (
(316,55,o),
(228,99,o),
(183,170,o),
(183,207,qs),
(183,251,o),
(232,320,o),
(317,358,o),
(370,358,qs),
(453,358,o),
(554,274,o),
(554,207,qs),
(554,139,o),
(454,55,o),
(376,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
17 1 2 1 18 1 3 2 26 1 5 4 3 74 6 1 3 0 4 5 3 4 103 0 2 2 1 95 0 1 1 37 75 7 1 5 5 0 95 0 0 0 38 0 76 30 30 0 0 30 43 30 42 36 34 0 29 0 28 36 37 38 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = six.tf;
},
{
glyphname = seven.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,505,l),
(148,505,l),
(148,636,l),
(546,636,l),
(237,0,l),
(314,0,l),
(631,649,l),
(631,700,l),
(77,700,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 1 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 4 1 3 3 32 75 0 0 0 33 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 24 values pushed */
0 2 1 0 1 2 112 0 1 1 3 93 4 1 3 3 32 75 0 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 2 1 0 1 2 0 126 0 1 1 3 93 4 1 3 3 32 75 0 0 0 33 0 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 8 0 8 17 17 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = seven.tf;
},
{
glyphname = eight.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(550,388,o),
(611,468,o),
(611,522,qs),
(611,577,o),
(546,661,o),
(427,706,o),
(349,706,qs),
(271,706,o),
(153,661,o),
(89,577,o),
(89,522,qs),
(89,468,o),
(149,388,o),
(205,367,q),
(137,345,o),
(64,256,o),
(64,194,qs),
(64,133,o),
(132,43,o),
(261,-6,o),
(349,-6,qs),
(437,-6,o),
(567,43,o),
(636,133,o),
(636,194,qs),
(636,256,o),
(562,344,o),
(493,367,q)
);
},
{
closed = 1;
nodes = (
(162,577,o),
(262,645,o),
(349,645,qs),
(436,645,o),
(538,577,o),
(538,519,qs),
(538,461,o),
(437,393,o),
(349,393,qs),
(261,393,o),
(162,461,o),
(162,519,qs)
);
},
{
closed = 1;
nodes = (
(249,55,o),
(138,131,o),
(138,196,qs),
(138,261,o),
(249,336,o),
(349,336,qs),
(449,336,o),
(562,260,o),
(562,196,qs),
(562,131,o),
(449,55,o),
(349,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
27 13 2 4 2 1 74 0 2 0 4 5 2 4 103 0 3 3 1 95 0 1 1 37 75 6 1 5 5 0 95 0 0 0 38 0 76 40 40 40 51 40 50 39 36 40 44 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = eight.tf;
},
{
glyphname = nine.tf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,706,o),
(138,652,o),
(73,554,o),
(73,491,qs),
(73,430,o),
(136,334,o),
(248,281,o),
(318,281,qs),
(396,281,o),
(518,347,o),
(542,403,q),
(545,370,o),
(545,346,qs),
(545,254,o),
(478,124,o),
(358,57,o),
(278,57,qs),
(198,57,o),
(142,91,q),
(114,32,l),
(146,13,o),
(232,-6,o),
(278,-6,qs),
(380,-6,o),
(534,82,o),
(618,246,o),
(618,358,qs),
(618,525,o),
(462,706,o),
(322,706,qs)
);
},
{
closed = 1;
nodes = (
(247,342,o),
(146,426,o),
(146,493,qs),
(146,561,o),
(246,645,o),
(324,645,qs),
(384,645,o),
(472,601,o),
(517,530,o),
(517,493,qs),
(517,449,o),
(468,380,o),
(383,342,o),
(330,342,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
18 1 5 4 10 1 1 2 9 1 0 1 3 74 7 1 5 0 2 1 5 2 103 0 4 4 3 95 6 1 3 3 37 75 0 1 1 0 95 0 0 0 38 0 76 30 30 0 0 30 43 30 42 38 36 0 29 0 28 39 36 37 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = nine.tf;
},
{
glyphname = zero.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(432,-6,o),
(561,72,o),
(634,211,o),
(634,300,qs),
(634,389,o),
(561,528,o),
(432,606,o),
(350,606,qs),
(268,606,o),
(139,528,o),
(66,389,o),
(66,300,qs),
(66,211,o),
(139,72,o),
(268,-6,o),
(350,-6,qs)
);
},
{
closed = 1;
nodes = (
(289,59,o),
(193,118,o),
(140,227,o),
(140,300,qs),
(140,373,o),
(193,483,o),
(289,542,o),
(350,542,qs),
(411,542,o),
(507,483,o),
(560,373,o),
(560,300,qs),
(560,227,o),
(507,118,o),
(411,59,o),
(350,59,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 2 3 0 2 103 5 1 3 3 1 95 4 1 1 1 38 1 76 16 16 0 0 16 31 16 30 24 22 0 15 0 14 38 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = zero.tosf;
},
{
glyphname = one.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(413,600,l),
(161,600,l),
(161,536,l),
(340,536,l),
(340,64,l),
(148,64,l),
(148,0,l),
(586,0,l),
(586,64,l),
(413,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 3 0 2 1 3 2 101 5 4 2 1 1 0 93 0 0 0 33 0 76 0 0 0 9 0 9 17 17 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = one.tosf;
},
{
glyphname = two.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(458,243,ls),
(524,295,o),
(576,382,o),
(576,432,qs),
(576,483,o),
(519,562,o),
(411,606,o),
(337,606,qs),
(163,606,o),
(79,501,q),
(135,462,l),
(201,542,o),
(333,542,qs),
(415,542,o),
(502,479,o),
(502,429,qs),
(502,391,o),
(465,328,o),
(408,283,qs),
(101,44,l),
(101,0,l),
(611,0,l),
(611,65,l),
(228,65,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
13 12 2 3 1 3 1 0 3 2 74 0 2 0 1 3 2 1 103 4 1 3 3 0 93 0 0 0 33 0 76 0 0 0 23 0 23 35 39 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = two.tosf;
},
{
glyphname = three.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(567,549,l),
(567,600,l),
(82,600,l),
(82,536,l),
(474,536,l),
(270,293,l),
(270,240,l),
(324,240,ls),
(421,240,o),
(521,166,o),
(521,101,qs),
(521,35,o),
(421,-40,o),
(326,-40,qs),
(255,-40,o),
(143,4,o),
(107,41,q),
(68,-16,l),
(108,-58,o),
(246,-106,o),
(330,-106,qs),
(415,-106,o),
(535,-52,o),
(595,41,o),
(595,101,qs),
(595,188,o),
(472,295,o),
(359,300,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
26 1 3 4 21 1 2 5 10 9 2 1 2 3 74 0 4 0 3 5 4 3 101 6 1 5 0 2 1 5 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 27 0 27 17 18 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = three.tosf;
},
{
glyphname = four.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(494,148,l),
(494,307,l),
(427,307,l),
(427,148,l),
(149,148,l),
(466,600,l),
(385,600,l),
(60,136,l),
(60,84,l),
(424,84,l),
(424,-100,l),
(494,-100,l),
(494,84,l),
(636,84,l),
(636,148,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
6 1 0 4 1 74 0 3 5 3 131 0 5 4 5 131 0 1 0 1 132 6 1 4 0 0 4 85 6 1 4 4 0 94 2 1 0 4 0 78 17 17 17 18 17 17 16 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = four.tosf;
},
{
glyphname = five.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(201,313,l),
(224,536,l),
(558,536,l),
(558,600,l),
(162,600,l),
(125,249,l),
(290,249,ls),
(418,249,o),
(527,174,o),
(527,105,qs),
(527,40,o),
(430,-40,o),
(338,-40,qs),
(267,-40,o),
(148,3,o),
(109,38,q),
(74,-20,l),
(118,-59,o),
(258,-106,o),
(337,-106,qs),
(423,-106,o),
(542,-50,o),
(601,47,o),
(601,107,qs),
(601,203,o),
(458,313,o),
(304,313,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
10 9 2 1 2 1 74 0 3 0 4 5 3 4 101 6 1 5 0 2 1 5 2 101 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 0 0 0 26 0 25 17 17 36 37 37 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = five.tosf;
},
{
glyphname = six.tosf;
layers = (
{
layerId = m01;
shapes = (
{
ref = six.tf;
}
);
width = 700;
}
);
note = six.tosf;
},
{
glyphname = seven.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,405,l),
(148,405,l),
(148,536,l),
(546,536,l),
(237,-100,l),
(314,-100,l),
(631,549,l),
(631,600,l),
(77,600,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 1 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 2 1 0 1 2 112 0 0 0 130 4 1 3 1 1 3 85 4 1 3 3 1 93 0 1 3 1 77 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
0 2 1 0 1 2 0 126 0 0 0 130 4 1 3 1 1 3 85 4 1 3 3 1 93 0 1 3 1 77 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 8 0 8 17 17 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = seven.tosf;
},
{
glyphname = eight.tosf;
layers = (
{
layerId = m01;
shapes = (
{
ref = eight.tf;
}
);
width = 700;
}
);
note = eight.tosf;
},
{
glyphname = nine.tosf;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(251,606,o),
(138,552,o),
(73,454,o),
(73,391,qs),
(73,330,o),
(136,234,o),
(248,181,o),
(318,181,qs),
(396,181,o),
(518,247,o),
(542,303,q),
(545,270,o),
(545,246,qs),
(545,154,o),
(478,24,o),
(358,-43,o),
(278,-43,qs),
(196,-43,o),
(142,-9,q),
(114,-68,l),
(146,-87,o),
(232,-106,o),
(278,-106,qs),
(380,-106,o),
(534,-18,o),
(618,146,o),
(618,258,qs),
(618,425,o),
(462,606,o),
(322,606,qs)
);
},
{
closed = 1;
nodes = (
(247,242,o),
(146,326,o),
(146,393,qs),
(146,461,o),
(246,545,o),
(324,545,qs),
(384,545,o),
(472,501,o),
(517,430,o),
(517,393,qs),
(517,349,o),
(468,280,o),
(383,242,o),
(330,242,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
18 1 5 4 10 1 1 2 9 1 0 1 3 74 6 1 3 0 4 5 3 4 103 7 1 5 0 2 1 5 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 30 30 0 0 30 43 30 42 38 36 0 29 0 28 39 36 37 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 700;
}
);
note = nine.tosf;
},
{
glyphname = zero.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(297,-4,o),
(398,111,o),
(398,208,qs),
(398,305,o),
(297,419,o),
(215,419,qs),
(133,419,o),
(32,305,o),
(32,208,qs),
(32,111,o),
(133,-4,o),
(215,-4,qs)
);
},
{
closed = 1;
nodes = (
(157,42,o),
(85,130,o),
(85,208,qs),
(85,286,o),
(157,373,o),
(215,373,qs),
(273,373,o),
(345,286,o),
(345,208,qs),
(345,130,o),
(273,42,o),
(215,42,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 2 3 0 2 103 5 1 3 3 1 95 4 1 1 1 38 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 21 values pushed */
0 0 0 2 3 0 2 103 5 1 3 3 1 95 4 1 1 1 40 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = zero.dnom;
},
{
glyphname = one.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,415,l),
(91,415,l),
(91,370,l),
(205,370,l),
(205,45,l),
(84,45,l),
(84,0,l),
(368,0,l),
(368,45,l),
(260,45,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 3 0 2 1 3 2 101 5 4 2 1 1 0 93 0 0 0 33 0 76 0 0 0 9 0 9 17 17 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = one.dnom;
},
{
glyphname = two.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,176,ls),
(323,216,o),
(356,273,o),
(356,305,qs),
(356,355,o),
(272,419,o),
(194,419,qs),
(84,419,o),
(32,356,q),
(69,327,l),
(89,349,o),
(152,373,o),
(191,373,qs),
(247,373,o),
(302,333,o),
(302,302,qs),
(302,279,o),
(275,236,o),
(238,203,qs),
(48,35,l),
(48,0,l),
(376,0,l),
(376,45,l),
(130,45,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
14 13 2 3 1 3 1 0 3 2 74 0 2 0 1 3 2 1 103 4 1 3 3 0 93 0 0 0 33 0 76 0 0 0 23 0 23 36 39 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = two.dnom;
},
{
glyphname = three.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355,380,l),
(355,415,l),
(42,415,l),
(42,370,l),
(287,370,l),
(162,235,l),
(162,198,l),
(204,198,ls),
(263,198,o),
(321,157,o),
(321,120,qs),
(321,84,o),
(261,42,o),
(202,42,qs),
(156,42,o),
(77,68,o),
(54,89,q),
(31,49,l),
(55,25,o),
(148,-4,o),
(202,-4,qs),
(284,-4,o),
(375,66,o),
(375,120,qs),
(375,172,o),
(298,236,o),
(227,240,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
25 1 3 4 20 1 2 5 9 8 2 1 2 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 4 0 3 5 4 3 101 6 1 5 0 2 1 5 2 103 0 1 1 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 4 0 3 5 4 3 101 6 1 5 0 2 1 5 2 103 0 1 1 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 26 0 26 17 18 36 37 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = three.dnom;
},
{
glyphname = four.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(312,150,l),
(312,241,l),
(264,241,l),
(264,150,l),
(92,150,l),
(293,415,l),
(233,415,l),
(27,142,l),
(27,106,l),
(260,106,l),
(260,0,l),
(312,0,l),
(312,106,l),
(400,106,l),
(400,150,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
6 1 0 4 1 74 0 3 5 3 131 0 5 4 5 131 6 1 4 2 1 0 1 4 0 102 0 1 1 33 1 76 17 17 17 18 17 17 16 7 7 27 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = four.dnom;
},
{
glyphname = five.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,239,l),
(137,370,l),
(350,370,l),
(350,415,l),
(93,415,l),
(69,194,l),
(181,194,ls),
(259,194,o),
(324,157,o),
(324,120,qs),
(324,84,o),
(263,42,o),
(204,42,qs),
(158,42,o),
(79,68,o),
(56,89,q),
(34,49,l),
(57,25,o),
(150,-4,o),
(204,-4,qs),
(287,-4,o),
(377,65,o),
(377,120,qs),
(377,176,o),
(289,239,o),
(189,239,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
9 8 2 1 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 4 5 3 4 101 6 1 5 0 2 1 5 2 101 0 1 1 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 3 0 4 5 3 4 101 6 1 5 0 2 1 5 2 101 0 1 1 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 25 0 24 17 17 36 37 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = five.dnom;
},
{
glyphname = six.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(187,250,o),
(111,213,o),
(97,181,q),
(95,192,o),
(95,210,qs),
(95,287,o),
(186,373,o),
(262,373,qs),
(312,373,o),
(350,354,q),
(369,396,l),
(350,407,o),
(293,419,o),
(263,419,qs),
(161,419,o),
(42,304,o),
(42,202,qs),
(42,103,o),
(141,-4,o),
(233,-4,qs),
(304,-4,o),
(393,68,o),
(393,126,qs),
(393,181,o),
(306,250,o),
(237,250,qs)
);
},
{
closed = 1;
nodes = (
(174,38,o),
(113,89,o),
(113,123,qs),
(113,161,o),
(177,209,o),
(228,209,qs),
(281,209,o),
(340,162,o),
(340,123,qs),
(340,85,o),
(281,38,o),
(232,38,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
14 1 2 1 15 1 3 2 22 1 5 4 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 2 3 1 2 103 6 1 3 0 4 5 3 4 103 7 1 5 5 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 1 0 2 3 1 2 103 6 1 3 0 4 5 3 4 103 7 1 5 5 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 36 36 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = six.dnom;
},
{
glyphname = seven.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,295,l),
(87,295,l),
(87,370,l),
(331,370,l),
(136,0,l),
(196,0,l),
(397,380,l),
(397,415,l),
(39,415,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 1 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
0 2 1 0 1 2 112 4 1 3 0 1 2 3 1 101 0 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 0 1 2 0 126 4 1 3 0 1 2 3 1 101 0 0 0 33 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 8 0 8 17 17 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = seven.dnom;
},
{
glyphname = eight.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(384,243,o),
(384,308,qs),
(384,357,o),
(291,419,o),
(214,419,qs),
(137,419,o),
(46,358,o),
(46,309,qs),
(46,277,o),
(83,230,o),
(118,217,q),
(76,203,o),
(31,151,o),
(31,114,qs),
(31,60,o),
(129,-4,o),
(214,-4,qs),
(300,-4,o),
(399,60,o),
(399,114,qs),
(399,151,o),
(354,203,o),
(311,217,q)
);
},
{
closed = 1;
nodes = (
(99,340,o),
(160,377,o),
(214,377,qs),
(269,377,o),
(331,339,o),
(331,307,qs),
(331,275,o),
(269,236,o),
(214,236,qs),
(160,236,o),
(99,276,o),
(99,308,qs)
);
},
{
closed = 1;
nodes = (
(152,38,o),
(84,81,o),
(84,117,qs),
(84,152,o),
(154,196,o),
(214,196,qs),
(276,196,o),
(346,152,o),
(346,117,qs),
(346,81,o),
(276,38,o),
(214,38,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
22 11 2 4 2 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 2 1 3 103 0 2 0 4 5 2 4 103 6 1 5 5 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 28 values pushed */
0 1 0 3 2 1 3 103 0 2 0 4 5 2 4 103 6 1 5 5 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
35 35 35 46 35 45 39 36 38 42 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = eight.dnom;
},
{
glyphname = nine.dnom;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(126,419,o),
(37,347,o),
(37,289,qs),
(37,234,o),
(124,165,o),
(193,165,qs),
(243,165,o),
(319,202,o),
(333,234,q),
(335,223,o),
(335,205,qs),
(335,128,o),
(244,42,o),
(168,42,qs),
(118,42,o),
(80,61,q),
(61,19,l),
(80,8,o),
(137,-4,o),
(167,-4,qs),
(269,-4,o),
(388,111,o),
(388,213,qs),
(388,312,o),
(289,419,o),
(197,419,qs)
);
},
{
closed = 1;
nodes = (
(149,206,o),
(89,254,o),
(89,292,qs),
(89,330,o),
(148,377,o),
(198,377,qs),
(256,377,o),
(317,326,o),
(317,292,qs),
(317,254,o),
(253,206,o),
(202,206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
16 1 5 4 9 1 1 2 8 1 0 1 3 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
6 1 3 0 4 5 3 4 103 7 1 5 0 2 1 5 2 103 0 1 1 0 95 0 0 0 38 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
6 1 3 0 4 5 3 4 103 7 1 5 0 2 1 5 2 103 0 1 1 0 95 0 0 0 40 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
26 26 0 0 26 37 26 36 32 30 0 25 0 24 38 36 36 8 7 23 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = nine.dnom;
},
{
glyphname = zero.numr;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,285);
ref = zero.dnom;
}
);
width = 430;
}
);
note = zero.numr;
},
{
glyphname = one.numr;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(260,700,l),
(91,700,l),
(91,655,l),
(205,655,l),
(205,330,l),
(84,330,l),
(84,285,l),
(368,285,l),
(368,330,l),
(260,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 4 2 1 0 0 1 0 97 0 2 2 3 93 0 3 3 32 2 76 0 0 0 9 0 9 17 17 17 17 6 7 24 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = one.numr;
},
{
glyphname = two.numr;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,461,ls),
(323,501,o),
(356,558,o),
(356,590,qs),
(356,640,o),
(272,704,o),
(194,704,qs),
(84,704,o),
(32,641,q),
(69,612,l),
(89,634,o),
(152,658,o),
(191,658,qs),
(247,658,o),
(302,618,o),
(302,587,qs),
(302,564,o),
(275,521,o),
(238,488,qs),
(48,320,l),
(48,285,l),
(376,285,l),
(376,330,l),
(130,330,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
14 13 2 3 1 3 1 0 3 2 74 4 1 3 0 0 3 0 97 0 1 1 2 95 0 2 2 37 1 76 0 0 0 23 0 23 36 39 17 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = two.numr;
},
{
glyphname = three.numr;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(355,665,l),
(355,700,l),
(42,700,l),
(42,655,l),
(287,655,l),
(162,520,l),
(162,483,l),
(204,483,ls),
(263,483,o),
(321,442,o),
(321,405,qs),
(321,369,o),
(261,327,o),
(202,327,qs),
(156,327,o),
(77,353,o),
(54,374,q),
(31,334,l),
(55,310,o),
(148,281,o),
(202,281,qs),
(284,281,o),
(375,351,o),
(375,405,qs),
(375,457,o),
(298,521,o),
(227,525,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
25 1 3 4 20 1 2 5 9 8 2 1 2 3 74 0 1 0 0 1 0 99 0 3 3 4 93 0 4 4 32 75 0 2 2 5 95 6 1 5 5 34 2 76 0 0 0 26 0 26 17 18 36 37 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = three.numr;
},
{
glyphname = four.numr;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,285);
ref = four.dnom;
}
);
width = 430;
}
);
note = four.numr;
},
{
glyphname = five.numr;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,524,l),
(137,655,l),
(350,655,l),
(350,700,l),
(93,700,l),
(69,479,l),
(181,479,ls),
(259,479,o),
(324,442,o),
(324,405,qs),
(324,369,o),
(263,327,o),
(204,327,qs),
(158,327,o),
(79,353,o),
(56,374,q),
(34,334,l),
(57,310,o),
(150,281,o),
(204,281,qs),
(287,281,o),
(377,350,o),
(377,405,qs),
(377,461,o),
(289,524,o),
(189,524,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
9 8 2 1 2 1 74 0 1 0 0 1 0 99 0 4 4 3 93 0 3 3 32 75 0 2 2 5 95 6 1 5 5 34 2 76 0 0 0 25 0 24 17 17 36 37 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = five.numr;
},
{
glyphname = six.numr;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,285);
ref = six.dnom;
}
);
width = 430;
}
);
note = six.numr;
},
{
glyphname = seven.numr;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,580,l),
(87,580,l),
(87,655,l),
(331,655,l),
(136,285,l),
(196,285,l),
(397,665,l),
(397,700,l),
(39,700,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
1 1 1 3 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
16 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 2 1 0 1 2 112 0 0 0 130 0 1 1 3 93 4 1 3 3 32 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 1 0 1 2 0 126 0 0 0 130 0 1 1 3 93 4 1 3 3 32 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 8 0 8 17 17 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 430;
}
);
note = seven.numr;
},
{
glyphname = eight.numr;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,285);
ref = eight.dnom;
}
);
width = 430;
}
);
note = eight.numr;
},
{
glyphname = nine.numr;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,285);
ref = nine.dnom;
}
);
width = 430;
}
);
note = nine.numr;
},
{
glyphname = backslash.case;
kernLeft = backslash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(30,842,l),
(-35,842,l),
(295,-100,l),
(360,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
0 0 1 0 131 2 1 1 1 116 0 0 0 3 0 3 17 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = backslash.case;
},
{
glyphname = periodcentered.case;
kernLeft = periodcentered.case;
kernRight = periodcentered.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(159,294,o),
(190,325,o),
(190,349,qs),
(190,373,o),
(159,404,o),
(136,404,qs),
(113,404,o),
(83,373,o),
(83,349,qs),
(83,325,o),
(113,294,o),
(136,294,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 272;
}
);
note = periodcentered.case;
},
{
glyphname = bullet.case;
kernLeft = periodcentered.case;
kernRight = periodcentered.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,78);
ref = bullet;
}
);
width = 315;
}
);
note = bullet.case;
},
{
glyphname = periodcentered.loclCAT.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(204,375,o),
(232,404,o),
(232,425,qs),
(232,447,o),
(204,475,o),
(183,475,qs),
(163,475,o),
(134,447,o),
(134,425,qs),
(134,404,o),
(163,375,o),
(183,375,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 343;
}
);
note = periodcentered.loclCAT.case;
},
{
glyphname = slash.case;
kernLeft = slash;
kernRight = slash;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(40,-100,l),
(370,842,l),
(305,842,l),
(-25,-100,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 335;
}
);
note = slash.case;
},
{
glyphname = periodcentered.loclCAT;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(117,227,o),
(144,255,o),
(144,274,qs),
(144,294,o),
(117,321,o),
(97,321,qs),
(77,321,o),
(50,294,o),
(50,274,qs),
(50,254,o),
(77,227,o),
(97,227,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 110;
}
);
note = periodcentered.loclCAT;
},
{
glyphname = braceleft.case;
kernRight = braceleft.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,67);
ref = braceleft;
}
);
width = 354;
}
);
note = braceleft.case;
},
{
glyphname = braceright.case;
kernLeft = braceright.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,67);
ref = braceright;
}
);
width = 354;
}
);
note = braceright.case;
},
{
glyphname = bracketleft.case;
kernRight = braceleft.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,67);
ref = bracketleft;
}
);
width = 338;
}
);
note = bracketleft.case;
},
{
glyphname = bracketright.case;
kernLeft = braceright.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,67);
ref = bracketright;
}
);
width = 338;
}
);
note = bracketright.case;
},
{
glyphname = parenleft.case;
kernRight = parenleft.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,67);
ref = parenleft;
}
);
width = 349;
}
);
note = parenleft.case;
},
{
glyphname = parenright.case;
kernLeft = parenright.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,67);
ref = parenright;
}
);
width = 349;
}
);
note = parenright.case;
},
{
glyphname = emdash.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,81);
ref = emdash;
}
);
width = 1000;
}
);
note = emdash.case;
},
{
glyphname = endash.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,81);
ref = endash;
}
);
width = 500;
}
);
note = endash.case;
},
{
glyphname = hyphen.case;
kernLeft = periodcentered.case;
kernRight = periodcentered.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,81);
ref = hyphen;
}
);
width = 402;
}
);
note = hyphen.case;
},
{
glyphname = guillemotleft.case;
kernLeft = periodcentered.case;
kernRight = guillemotleft.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,81);
ref = guilsinglleft;
},
{
pos = (188,81);
ref = guilsinglleft;
}
);
width = 497;
}
);
note = guillemotleft.case;
},
{
glyphname = guillemotright.case;
kernLeft = guillemotright.case;
kernRight = periodcentered.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,81);
ref = guilsinglright;
},
{
pos = (188,81);
ref = guilsinglright;
}
);
width = 497;
}
);
note = guillemotright.case;
},
{
glyphname = guilsinglleft.case;
kernLeft = periodcentered.case;
kernRight = guillemotleft.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,81);
ref = guilsinglleft;
}
);
width = 319;
}
);
note = guilsinglleft.case;
},
{
glyphname = guilsinglright.case;
kernLeft = guillemotright.case;
kernRight = periodcentered.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (10,81);
ref = guilsinglright;
}
);
width = 319;
}
);
note = guilsinglright.case;
},
{
glyphname = exclam.sc;
kernLeft = exclam.sc;
kernRight = exclam.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(157,190,l),
(171,565,l),
(90,565,l),
(102,190,l)
);
},
{
closed = 1;
nodes = (
(153,-5,o),
(182,25,o),
(182,44,qs),
(182,64,o),
(153,93,o),
(130,93,qs),
(107,93,o),
(77,64,o),
(77,44,qs),
(77,25,o),
(107,-5,o),
(130,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
0 1 1 0 93 0 0 0 46 75 0 2 2 3 95 4 1 3 3 49 3 76 4 4 4 15 4 14 37 17 16 5 8 23 
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = exclam.sc;
},
{
glyphname = exclamdown.sc;
kernLeft = exclamdown.sc;
kernRight = exclamdown.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(107,571,o),
(77,541,o),
(77,521,qs),
(77,501,o),
(107,473,o),
(130,473,qs),
(153,473,o),
(182,501,o),
(182,521,qs),
(182,541,o),
(153,571,o),
(130,571,qs)
);
},
{
closed = 1;
nodes = (
(102,375,l),
(90,0,l),
(171,0,l),
(157,375,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 0 0 1 95 4 1 1 1 48 75 0 3 3 2 93 0 2 2 47 2 76 0 0 15 14 13 12 0 11 0 10 36 5 8 21 
CALL[ ]	/* CallFunction */";
};
width = 260;
}
);
note = exclamdown.sc;
},
{
glyphname = guillemotleft.sc;
kernLeft = plus;
kernRight = guillemotleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = guilsinglleft.sc;
},
{
pos = (174,0);
ref = guilsinglleft.sc;
}
);
width = 454;
}
);
note = guillemotleft.sc;
},
{
glyphname = guillemotright.sc;
kernLeft = guillemotright.sc;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
ref = guilsinglright.sc;
},
{
pos = (174,0);
ref = guilsinglright.sc;
}
);
width = 454;
}
);
note = guillemotright.sc;
},
{
glyphname = guilsinglleft.sc;
kernLeft = plus;
kernRight = guillemotleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(242,112,l),
(113,282,l),
(242,453,l),
(181,453,l),
(50,282,l),
(181,112,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
3 1 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 18 17 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 280;
}
);
note = guilsinglleft.sc;
},
{
glyphname = guilsinglright.sc;
kernLeft = guillemotright.sc;
kernRight = plus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(230,282,l),
(99,453,l),
(38,453,l),
(167,282,l),
(38,112,l),
(99,112,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
4 1 2 1 0 1 74 0 0 1 1 0 85 0 0 0 1 93 2 1 1 0 1 77 0 0 0 5 0 5 18 3 8 21 
CALL[ ]	/* CallFunction */";
};
width = 281;
}
);
note = guilsinglright.sc;
},
{
glyphname = period.sc;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(129,-5,o),
(160,26,o),
(160,47,qs),
(160,69,o),
(130,98,o),
(107,98,qs),
(85,98,o),
(55,69,o),
(55,47,qs),
(55,26,o),
(85,-5,o),
(107,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
0 0 0 1 95 2 1 1 1 49 1 76 0 0 0 11 0 10 36 3 8 21 
CALL[ ]	/* CallFunction */";
};
width = 215;
}
);
note = period.sc;
},
{
glyphname = question.sc;
kernLeft = question.sc;
kernRight = question.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(278,190,l),
(278,226,o),
(316,272,o),
(355,302,qs),
(398,335,o),
(442,391,o),
(442,437,qs),
(442,499,o),
(330,571,o),
(235,571,qs),
(164,571,o),
(51,530,o),
(12,494,q),
(61,453,l),
(123,510,o),
(228,510,qs),
(296,510,o),
(369,466,o),
(369,428,qs),
(369,396,o),
(334,354,o),
(297,326,qs),
(254,293,o),
(210,237,o),
(210,190,q)
);
},
{
closed = 1;
nodes = (
(270,-5,o),
(299,25,o),
(299,44,qs),
(299,64,o),
(270,93,o),
(247,93,qs),
(224,93,o),
(194,64,o),
(194,44,qs),
(194,24,o),
(224,-5,o),
(247,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
11 10 2 2 0 1 74 0 2 0 3 0 2 3 126 0 0 0 1 95 0 1 1 48 75 0 3 3 4 95 5 1 4 4 49 4 76 25 25 25 36 25 35 37 24 36 39 6 8 24 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = question.sc;
},
{
glyphname = questiondown.sc;
kernLeft = questiondown.sc;
kernRight = questiondown.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,473,o),
(323,501,o),
(323,521,qs),
(323,541,o),
(294,571,o),
(271,571,qs),
(248,571,o),
(219,541,o),
(219,521,qs),
(219,501,o),
(248,473,o),
(271,473,qs)
);
},
{
closed = 1;
nodes = (
(354,-5,o),
(467,36,o),
(505,72,q),
(456,113,l),
(396,56,o),
(289,56,qs),
(221,56,o),
(149,100,o),
(149,138,qs),
(149,170,o),
(184,212,o),
(220,239,qs),
(263,272,o),
(307,328,o),
(307,375,q),
(239,375,l),
(239,339,o),
(201,293,o),
(162,263,qs),
(119,230,o),
(75,174,o),
(75,128,qs),
(75,66,o),
(187,-5,o),
(282,-5,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
33 32 2 3 2 1 74 0 2 1 3 1 2 3 126 5 1 1 1 0 95 0 0 0 48 75 0 3 3 4 96 6 1 4 4 49 4 76 12 12 0 0 12 36 12 35 31 29 21 20 0 11 0 10 36 7 8 21 
CALL[ ]	/* CallFunction */";
};
width = 517;
}
);
note = questiondown.sc;
},
{
glyphname = quotedbl.sc;
kernLeft = quotedbl.sc;
kernRight = quotedbl.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = quotesingle.sc;
},
{
pos = (171,0);
ref = quotesingle.sc;
}
);
width = 373;
}
);
note = quotedbl.sc;
},
{
glyphname = quotedblbase.sc;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
pos = (-1,0);
ref = quotesinglbase.sc;
},
{
pos = (168,0);
ref = quotesinglbase.sc;
}
);
width = 380;
}
);
note = quotedblbase.sc;
},
{
glyphname = quotedblleft.sc;
kernLeft = quotedblleft.sc;
kernRight = quotedblleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = quoteleft.sc;
},
{
pos = (170,0);
ref = quoteleft.sc;
}
);
width = 380;
}
);
note = quotedblleft.sc;
},
{
glyphname = quotedblright.sc;
kernLeft = quotedblright.sc;
kernRight = quotedblright.sc;
layers = (
{
layerId = m01;
shapes = (
{
ref = quoteright.sc;
},
{
pos = (170,0);
ref = quoteright.sc;
}
);
width = 380;
}
);
note = quotedblright.sc;
},
{
glyphname = quoteleft.sc;
kernLeft = quotedblleft.sc;
kernRight = quotedblleft.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(149,565,l),
(101,565,l),
(65,452,ls),
(58,431,o),
(53,408,o),
(53,396,qs),
(53,373,o),
(82,343,o),
(106,343,qs),
(128,343,o),
(158,374,o),
(158,396,qs),
(158,414,o),
(138,441,o),
(121,446,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
14 1 0 1 1 74 0 0 0 1 93 0 1 1 46 0 76 22 36 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = quoteleft.sc;
},
{
glyphname = quoteright.sc;
kernLeft = quotedblright.sc;
kernRight = quotedblright.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(82,571,o),
(52,540,o),
(52,517,qs),
(52,499,o),
(72,473,o),
(89,468,q),
(61,348,l),
(110,348,l),
(146,462,ls),
(153,482,o),
(158,505,o),
(158,517,qs),
(158,540,o),
(128,571,o),
(105,571,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
8 1 0 1 1 74 0 0 0 1 95 2 1 1 1 48 0 76 0 0 0 14 0 13 22 3 8 21 
CALL[ ]	/* CallFunction */";
};
width = 211;
}
);
note = quoteright.sc;
},
{
glyphname = quotesinglbase.sc;
kernLeft = comma;
kernRight = comma;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(85,101,o),
(54,71,o),
(54,49,qs),
(54,31,o),
(74,3,o),
(91,-2,q),
(63,-121,l),
(111,-121,l),
(147,-9,ls),
(155,13,o),
(160,36,o),
(160,49,qs),
(160,71,o),
(130,101,o),
(107,101,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
8 1 0 1 1 74 2 1 1 0 0 1 87 2 1 1 1 0 93 0 0 1 0 77 0 0 0 14 0 13 22 3 8 21 
CALL[ ]	/* CallFunction */";
};
width = 212;
}
);
note = quotesinglbase.sc;
},
{
glyphname = quotesingle.sc;
kernLeft = quotedbl.sc;
kernRight = quotedbl.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(127,342,l),
(132,565,l),
(69,565,l),
(74,342,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 93 0 0 0 46 1 76 17 16 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 202;
}
);
note = quotesingle.sc;
},
{
glyphname = arrowup.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(299,537,l),
(104,402,l),
(104,338,l),
(270,448,l),
(270,113,l),
(329,113,l),
(329,447,l),
(496,338,l),
(496,402,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
8 7 6 5 4 1 0 7 0 72 0 0 0 116 18 1 7 21 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowup.case;
},
{
glyphname = arrowright.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(293,519,l),
(404,350,l),
(74,350,l),
(74,295,l),
(404,295,l),
(293,125,l),
(360,125,l),
(494,323,l),
(360,519,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
0 0 1 0 132 0 2 0 1 0 2 1 102 0 3 3 34 3 76 17 17 17 17 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowright.case;
},
{
glyphname = arrowdown.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(342,532,l),
(283,532,l),
(283,198,l),
(116,308,l),
(116,243,l),
(313,108,l),
(508,243,l),
(508,308,l),
(342,197,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
8 5 4 3 2 1 0 7 0 71 0 0 0 34 0 76 22 1 7 21 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowdown.case;
},
{
glyphname = arrowleft.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(197,350,l),
(307,520,l),
(240,520,l),
(106,322,l),
(240,126,l),
(307,126,l),
(197,295,l),
(526,295,l),
(526,350,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
4 1 0 3 1 74 0 1 0 1 132 0 3 0 0 1 3 0 102 0 2 2 34 2 76 17 18 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = arrowleft.case;
},
{
glyphname = at.case;
kernLeft = at;
kernRight = at;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,67);
ref = at;
}
);
width = 1033;
}
);
note = at.case;
},
{
glyphname = uni2116.ss01;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(252,706,o),
(185,582,q),
(185,700,l),
(114,700,l),
(114,0,l),
(188,0,l),
(188,398,ls),
(188,519,o),
(304,640,o),
(408,640,qs),
(507,640,o),
(617,526,o),
(617,415,qs),
(617,0,l),
(691,0,l),
(691,417,ls),
(691,556,o),
(548,706,o),
(422,706,qs)
);
},
{
closed = 1;
nodes = (
(1012,386,o),
(1091,427,o),
(1135,500,o),
(1135,546,qs),
(1135,592,o),
(1091,664,o),
(1012,705,o),
(963,705,qs),
(914,705,o),
(835,664,o),
(790,592,o),
(790,546,qs),
(790,500,o),
(835,427,o),
(914,386,o),
(963,386,qs)
);
},
{
closed = 1;
nodes = (
(1016,661,o),
(1084,597,o),
(1084,546,qs),
(1084,495,o),
(1016,431,o),
(963,431,qs),
(909,431,o),
(841,495,o),
(841,546,qs),
(841,597,o),
(910,661,o),
(963,661,qs)
);
},
{
closed = 1;
nodes = (
(1116,250,l),
(1116,300,l),
(810,300,l),
(810,250,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 7 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 7 12 1 6 9 7 6 103 0 9 0 10 0 9 10 101 13 1 8 8 3 95 5 11 4 3 3 3 32 75 0 1 1 3 95 5 11 4 3 3 3 32 75 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 7 12 1 6 9 7 6 103 0 9 0 10 0 9 10 101 13 1 8 8 3 95 5 1 3 3 32 75 0 1 1 4 95 11 1 4 4 37 75 2 1 0 0 33 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 54 values pushed */
0 7 12 1 6 9 7 6 103 0 9 0 10 0 9 10 101 0 3 3 32 75 13 1 8 8 4 95 5 11 2 4 4 37 75 0 1 1 4 95 5 11 2 4 4 37 75 2 1 0 0 33 0 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
35 35 19 19 0 0 50 49 48 47 35 46 35 45 41 39 19 34 19 33 27 25 0 18 0 17 17 19 35 19 14 7 24 
CALL[ ]	/* CallFunction */";
};
width = 1191;
}
);
note = uni2116.ss01;
},
{
glyphname = ampersand.sc;
kernLeft = ampersand.sc;
kernRight = ampersand.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(465,115,l),
(501,171,o),
(517,246,q),
(462,262,l),
(449,201,o),
(423,156,q),
(273,306,l),
(341,343,o),
(397,411,o),
(397,455,qs),
(397,508,o),
(322,571,o),
(259,571,qs),
(191,571,o),
(111,502,o),
(111,446,qs),
(111,413,o),
(141,354,o),
(179,315,q),
(104,274,o),
(39,193,o),
(39,144,qs),
(39,100,o),
(90,32,o),
(181,-6,o),
(238,-6,qs),
(351,-6,o),
(427,68,q),
(505,-9,l),
(545,35,l)
);
},
{
closed = 1;
nodes = (
(298,519,o),
(339,483,o),
(339,453,qs),
(339,424,o),
(293,377,o),
(234,345,q),
(197,382,o),
(173,423,o),
(173,447,qs),
(173,479,o),
(219,519,o),
(260,519,qs)
);
},
{
closed = 1;
nodes = (
(180,49,o),
(106,104,o),
(106,147,qs),
(106,183,o),
(155,240,o),
(218,276,q),
(387,108,l),
(330,49,o),
(241,49,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
44 43 35 28 26 25 23 22 10 1 10 3 2 29 1 0 3 2 74 4 1 2 2 1 95 0 1 1 48 75 5 1 3 3 0 95 0 0 0 49 0 76 42 42 30 30 42 50 42 49 30 41 30 40 43 34 6 8 22 
CALL[ ]	/* CallFunction */";
};
width = 552;
}
);
note = ampersand.sc;
},
{
glyphname = uni03080300;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0308.loclVIET;
},
{
pos = (0,132);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03080300;
},
{
glyphname = uni03080301;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0308.loclVIET;
},
{
pos = (0,132);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03080301;
},
{
glyphname = uni03080304;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0308.loclVIET;
},
{
pos = (0,132);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03080304;
},
{
glyphname = uni03070304;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0307.loclVIET;
},
{
pos = (0,135);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03070304;
},
{
glyphname = uni03000304;
layers = (
{
layerId = m01;
shapes = (
{
ref = gravecomb.loclVIET;
},
{
pos = (0,132);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03000304;
},
{
glyphname = uni03010307;
layers = (
{
layerId = m01;
shapes = (
{
ref = acutecomb.loclVIET;
},
{
pos = (0,132);
ref = uni0307.loclVIET;
}
);
width = 0;
}
);
note = uni03010307;
},
{
glyphname = uni03010304;
layers = (
{
layerId = m01;
shapes = (
{
ref = acutecomb.loclVIET;
},
{
pos = (0,132);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03010304;
},
{
glyphname = caroncomb.alt;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-249,540,l),
(-240,729,l),
(-300,729,l),
(-300,540,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 93 0 0 0 68 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = caroncomb.alt;
},
{
glyphname = uni030C0307;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni030C.loclVIET;
},
{
pos = (0,109);
ref = uni0307.loclVIET;
}
);
width = 0;
}
);
note = uni030C0307;
},
{
glyphname = uni030A0301;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-164,868,l),
(-246,787,l),
(-273,802,o),
(-301,802,qs),
(-345,802,o),
(-405,740,o),
(-405,697,qs),
(-405,655,o),
(-346,595,o),
(-301,595,qs),
(-256,595,o),
(-196,655,o),
(-196,697,qs),
(-196,731,o),
(-216,759,q),
(-124,836,l)
);
},
{
closed = 1;
nodes = (
(-331,630,o),
(-368,668,o),
(-368,697,qs),
(-368,727,o),
(-330,767,o),
(-301,767,qs),
(-272,767,o),
(-233,726,o),
(-233,697,qs),
(-233,668,o),
(-271,630,o),
(-301,630,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
13 1 2 1 1 74 15 14 2 1 72 0 1 0 2 3 1 2 103 4 1 3 0 0 3 87 4 1 3 3 0 95 0 0 3 0 79 16 16 16 27 16 26 40 36 36 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030A0301;
},
{
glyphname = uni03030308;
layers = (
{
layerId = m01;
shapes = (
{
ref = tildecomb.loclVIET;
},
{
pos = (0,132);
ref = uni0308.loclVIET;
}
);
width = 0;
}
);
note = uni03030308;
},
{
glyphname = tildecomb_acutecomb;
layers = (
{
layerId = m01;
shapes = (
{
ref = tildecomb.loclVIET;
},
{
pos = (0,132);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = tildecomb_acutecomb;
},
{
glyphname = uni03030304;
layers = (
{
layerId = m01;
shapes = (
{
ref = tildecomb.loclVIET;
},
{
pos = (0,132);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03030304;
},
{
glyphname = uni03040308;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0304.loclVIET;
},
{
pos = (0,132);
ref = uni0308.loclVIET;
}
);
width = 0;
}
);
note = uni03040308;
},
{
glyphname = uni03040300;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0304.loclVIET;
},
{
pos = (0,132);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03040300;
},
{
glyphname = uni03040301;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0304.loclVIET;
},
{
pos = (0,132);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03040301;
},
{
glyphname = uni0308.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-371,780,o),
(-346,805,o),
(-346,823,qs),
(-346,841,o),
(-372,866,o),
(-389,866,qs),
(-407,866,o),
(-432,841,o),
(-432,823,qs),
(-432,804,o),
(-407,780,o),
(-389,780,qs)
);
},
{
closed = 1;
nodes = (
(-193,780,o),
(-168,804,o),
(-168,823,qs),
(-168,841,o),
(-193,866,o),
(-211,866,qs),
(-228,866,o),
(-254,841,o),
(-254,823,qs),
(-254,805,o),
(-229,780,o),
(-211,780,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 5 3 4 3 1 0 1 79 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.case;
},
{
glyphname = uni03080300.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0308.loclVIET;
},
{
pos = (0,282);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03080300.case;
},
{
glyphname = uni03080301.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0308.loclVIET;
},
{
pos = (0,282);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03080301.case;
},
{
glyphname = uni03080304.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0308.loclVIET;
},
{
pos = (0,282);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03080304.case;
},
{
glyphname = uni0307.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-280,780,o),
(-252,808,o),
(-252,828,qs),
(-252,848,o),
(-280,876,o),
(-300,876,qs),
(-320,876,o),
(-348,848,o),
(-348,828,qs),
(-348,808,o),
(-320,780,o),
(-300,780,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 11 0 10 36 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0307.case;
},
{
glyphname = uni03070304.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0307.loclVIET;
},
{
pos = (0,285);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03070304.case;
},
{
glyphname = gravecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-235,757,l),
(-372,881,l),
(-467,881,l),
(-305,757,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb.case;
},
{
glyphname = uni03000304.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = gravecomb.loclVIET;
},
{
pos = (0,282);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03000304.case;
},
{
glyphname = acutecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-295,757,l),
(-133,881,l),
(-228,881,l),
(-365,757,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb.case;
},
{
glyphname = uni03010307.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = acutecomb.loclVIET;
},
{
pos = (0,282);
ref = uni0307.loclVIET;
}
);
width = 0;
}
);
note = uni03010307.case;
},
{
glyphname = uni03010304.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = acutecomb.loclVIET;
},
{
pos = (0,282);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03010304.case;
},
{
glyphname = uni030B.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-350,757,l),
(-237,881,l),
(-316,881,l),
(-413,757,l)
);
},
{
closed = 1;
nodes = (
(-187,757,l),
(-75,881,l),
(-154,881,l),
(-250,757,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 85 2 1 0 0 1 93 3 1 1 0 1 77 17 17 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030B.case;
},
{
glyphname = uni0302.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-264,881,l),
(-336,881,l),
(-465,757,l),
(-399,757,l),
(-300,840,l),
(-201,757,l),
(-135,757,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
1 1 0 1 1 74 0 1 0 1 131 3 2 2 0 0 116 0 0 0 6 0 6 17 18 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.case;
},
{
glyphname = uni030C.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-300,799,l),
(-399,881,l),
(-465,881,l),
(-336,757,l),
(-264,757,l),
(-135,881,l),
(-201,881,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
5 1 0 1 1 74 3 2 2 1 0 1 131 0 0 0 116 0 0 0 6 0 6 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.case;
},
{
glyphname = uni030C0307.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni030C.loclVIET;
},
{
pos = (0,259);
ref = uni0307.loclVIET;
}
);
width = 0;
}
);
note = uni030C0307.case;
},
{
glyphname = uni0306.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-236,752,o),
(-150,822,o),
(-148,881,q),
(-198,881,l),
(-199,842,o),
(-257,796,o),
(-300,796,qs),
(-343,796,o),
(-401,842,o),
(-402,881,q),
(-452,881,l),
(-450,822,o),
(-364,752,o),
(-300,752,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 95 4 1 3 1 3 79 0 0 0 13 0 12 18 34 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0306.case;
},
{
glyphname = tildecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-192,763,o),
(-144,822,o),
(-142,871,q),
(-185,871,l),
(-187,842,o),
(-215,809,o),
(-237,809,qs),
(-249,809,o),
(-271,823,o),
(-287,837,qs),
(-310,857,o),
(-345,877,o),
(-368,877,qs),
(-408,877,o),
(-456,817,o),
(-458,767,q),
(-415,767,l),
(-414,797,o),
(-386,831,o),
(-363,831,qs),
(-351,831,o),
(-330,818,o),
(-312,803,qs),
(-291,784,o),
(-255,763,o),
(-232,763,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
4 1 2 0 0 3 2 0 103 0 3 1 1 3 87 0 3 3 1 95 6 5 2 1 3 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 4 2 0 2 4 0 126 0 2 0 0 3 2 0 103 0 3 1 1 3 87 0 3 3 1 95 6 5 2 1 3 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 25 0 24 18 36 34 18 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = tildecomb.case;
},
{
glyphname = uni03030308.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = tildecomb.loclVIET;
},
{
pos = (0,282);
ref = uni0308.loclVIET;
}
);
width = 0;
}
);
note = uni03030308.case;
},
{
glyphname = tildecomb_acutecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = tildecomb.loclVIET;
},
{
pos = (0,282);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = tildecomb_acutecomb.case;
},
{
glyphname = uni03030304.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = tildecomb.loclVIET;
},
{
pos = (0,282);
ref = uni0304.loclVIET;
}
);
width = 0;
}
);
note = uni03030304.case;
},
{
glyphname = uni0304.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-146,795,l),
(-146,842,l),
(-454,842,l),
(-454,795,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.case;
},
{
glyphname = uni03040308.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0304.loclVIET;
},
{
pos = (0,282);
ref = uni0308.loclVIET;
}
);
width = 0;
}
);
note = uni03040308.case;
},
{
glyphname = uni03040300.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0304.loclVIET;
},
{
pos = (0,282);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03040300.case;
},
{
glyphname = uni03040301.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0304.loclVIET;
},
{
pos = (0,282);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03040301.case;
},
{
glyphname = hookabovecomb.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-207,787,o),
(-207,857,qs),
(-207,896,o),
(-260,943,o),
(-302,943,qs),
(-324,943,o),
(-369,929,o),
(-385,917,q),
(-368,882,l),
(-339,901,o),
(-308,901,qs),
(-284,901,o),
(-253,873,o),
(-253,852,qs),
(-253,808,o),
(-312,781,q),
(-287,750,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
8 1 0 1 1 74 16 7 2 0 71 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 36 36 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = hookabovecomb.case;
},
{
glyphname = uni030F.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-350,757,l),
(-446,881,l),
(-525,881,l),
(-413,757,l)
);
},
{
closed = 1;
nodes = (
(-187,757,l),
(-284,881,l),
(-363,881,l),
(-250,757,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 0 1 1 0 85 2 1 0 0 1 93 3 1 1 0 1 77 17 17 17 16 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030F.case;
},
{
glyphname = uni0311.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-402,757,l),
(-401,795,o),
(-343,842,o),
(-300,842,qs),
(-257,842,o),
(-199,795,o),
(-198,757,q),
(-148,757,l),
(-150,816,o),
(-236,885,o),
(-300,885,qs),
(-364,885,o),
(-450,816,o),
(-452,757,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 1 2 1 132 0 0 2 2 0 87 0 0 0 2 95 0 2 0 2 79 18 34 18 33 4 7 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0311.case;
},
{
glyphname = uni0335.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-106,327,l),
(-106,386,l),
(-494,386,l),
(-494,327,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0335.case;
},
{
glyphname = uni0337.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-13,490,l),
(-47,533,l),
(-339,313,l),
(-306,271,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
3 1 1 48 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0337.case;
},
{
glyphname = uni0338.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-685,-70,l),
(-79,770,l),
(-138,770,l),
(-745,-70,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0338.case;
},
{
glyphname = uni0304.narrow.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-174,795,l),
(-174,842,l),
(-426,842,l),
(-426,795,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.narrow.case;
},
{
glyphname = uni0307.i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-278,641,o),
(-248,671,o),
(-248,693,qs),
(-248,713,o),
(-278,742,o),
(-300,742,qs),
(-322,742,o),
(-352,712,o),
(-352,692,qs),
(-352,671,o),
(-322,641,o),
(-300,641,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 68 1 76 0 0 0 11 0 10 36 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0307.i;
},
{
glyphname = uni0328.i;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-282,-220,o),
(-261,-199,q),
(-275,-163,l),
(-292,-177,o),
(-312,-177,qs),
(-331,-177,o),
(-357,-147,o),
(-357,-122,qs),
(-357,-93,o),
(-333,-35,o),
(-299,0,q),
(-325,27,l),
(-409,-45,o),
(-409,-129,qs),
(-409,-170,o),
(-360,-220,o),
(-320,-220,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
14 1 1 0 1 74 13 5 4 3 0 72 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
0 0 0 1 95 2 1 1 1 77 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 16 0 15 42 3 10 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0328.i;
},
{
glyphname = uni0308.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-371,630,o),
(-346,654,o),
(-346,672,qs),
(-346,689,o),
(-371,713,o),
(-388,713,qs),
(-405,713,o),
(-430,689,o),
(-430,672,qs),
(-430,654,o),
(-405,630,o),
(-388,630,qs)
);
},
{
closed = 1;
nodes = (
(-195,630,o),
(-170,654,o),
(-170,672,qs),
(-170,689,o),
(-195,713,o),
(-212,713,qs),
(-229,713,o),
(-254,689,o),
(-254,672,qs),
(-254,654,o),
(-229,630,o),
(-212,630,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
5 3 4 3 1 1 0 95 2 1 0 0 37 1 76 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 7 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.loclVIET;
},
{
glyphname = uni0307.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-282,629,o),
(-257,653,o),
(-257,672,qs),
(-257,691,o),
(-282,715,o),
(-300,715,qs),
(-318,715,o),
(-343,691,o),
(-343,672,qs),
(-343,653,o),
(-318,629,o),
(-300,629,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 37 1 76 0 0 0 11 0 10 36 3 7 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0307.loclVIET;
},
{
glyphname = gravecomb.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-239,607,l),
(-359,716,l),
(-446,716,l),
(-301,607,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 132 0 0 0 32 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 131 0 1 1 116 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = gravecomb.loclVIET;
},
{
glyphname = acutecomb.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-298,607,l),
(-154,716,l),
(-240,716,l),
(-361,607,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 0 1 132 0 0 0 32 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 9 values pushed */
0 0 1 0 131 0 1 1 116 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = acutecomb.loclVIET;
},
{
glyphname = uni0302.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-265,701,l),
(-335,701,l),
(-465,607,l),
(-397,607,l),
(-300,666,l),
(-203,607,l),
(-135,607,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
1 1 0 1 1 74 3 2 2 0 1 0 132 0 1 1 66 1 76 0 0 0 6 0 6 17 18 4 10 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.loclVIET;
},
{
glyphname = uni030C.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-300,642,l),
(-397,701,l),
(-465,701,l),
(-335,607,l),
(-265,607,l),
(-135,701,l),
(-203,701,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
5 1 0 1 1 74 0 0 1 0 132 3 2 2 1 1 32 1 76 0 0 0 6 0 6 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni030C.loclVIET;
},
{
glyphname = uni0306.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-237,602,o),
(-154,655,o),
(-148,701,q),
(-197,701,l),
(-201,674,o),
(-257,644,o),
(-300,644,qs),
(-343,644,o),
(-399,674,o),
(-403,701,q),
(-452,701,l),
(-446,655,o),
(-363,602,o),
(-300,602,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 1 4 1 3 1 3 99 2 1 0 0 66 0 76 0 0 0 13 0 12 18 34 18 5 10 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0306.loclVIET;
},
{
glyphname = tildecomb.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-193,615,o),
(-146,664,o),
(-145,706,q),
(-187,706,l),
(-188,683,o),
(-213,657,o),
(-236,657,qs),
(-248,657,o),
(-270,668,o),
(-288,680,qs),
(-310,695,o),
(-345,711,o),
(-366,711,qs),
(-406,711,o),
(-454,662,o),
(-455,619,q),
(-412,619,l),
(-411,643,o),
(-386,669,o),
(-364,669,qs),
(-352,669,o),
(-329,658,o),
(-313,646,qs),
(-291,631,o),
(-256,615,o),
(-233,615,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 21 values pushed */
0 3 6 5 2 1 3 1 99 0 0 0 2 95 4 1 2 2 37 0 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 25 values pushed */
0 3 6 5 2 1 3 1 99 0 4 4 32 75 0 0 0 2 95 0 2 2 37 0 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 25 0 24 18 36 34 18 36 7 7 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = tildecomb.loclVIET;
},
{
glyphname = uni0304.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-146,631,l),
(-146,676,l),
(-454,676,l),
(-454,631,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 93 0 0 0 32 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.loclVIET;
},
{
glyphname = hookabovecomb.loclVIET;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-260,612,o),
(-229,653,o),
(-229,679,qs),
(-229,708,o),
(-268,744,o),
(-301,744,qs),
(-336,744,o),
(-365,725,q),
(-350,696,l),
(-329,708,o),
(-307,708,qs),
(-290,708,o),
(-267,690,o),
(-267,675,qs),
(-267,661,o),
(-289,635,o),
(-309,625,q),
(-288,600,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
9 1 0 1 1 74 17 8 2 0 71 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 35 37 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = hookabovecomb.loclVIET;
},
{
glyphname = uni0308.narrow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-349,630,o),
(-325,654,o),
(-325,673,qs),
(-325,691,o),
(-349,715,o),
(-366,715,qs),
(-384,715,o),
(-408,690,o),
(-408,673,qs),
(-408,655,o),
(-384,630,o),
(-366,630,qs)
);
},
{
closed = 1;
nodes = (
(-216,630,o),
(-192,654,o),
(-192,673,qs),
(-192,691,o),
(-216,715,o),
(-234,715,qs),
(-251,715,o),
(-275,690,o),
(-275,673,qs),
(-275,655,o),
(-251,630,o),
(-234,630,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 0 1 1 0 87 2 1 0 0 1 95 5 3 4 3 1 0 1 79 12 12 0 0 12 23 12 22 18 16 0 11 0 10 36 6 13 21 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0308.narrow;
},
{
glyphname = uni0302.narrow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-265,731,l),
(-335,731,l),
(-440,607,l),
(-376,607,l),
(-300,688,l),
(-224,607,l),
(-160,607,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
1 1 0 1 1 74 0 1 0 1 131 3 2 2 0 0 116 0 0 0 6 0 6 17 18 4 13 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0302.narrow;
},
{
glyphname = uni0306.narrow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-244,602,o),
(-173,672,o),
(-173,731,q),
(-220,731,l),
(-220,692,o),
(-264,646,o),
(-300,646,qs),
(-336,646,o),
(-379,691,o),
(-379,731,q),
(-427,731,l),
(-427,672,o),
(-356,602,o),
(-300,602,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 95 4 1 3 1 3 79 0 0 0 13 0 12 18 34 18 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0306.narrow;
},
{
glyphname = tildecomb.narrow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-207,613,o),
(-167,671,o),
(-167,721,q),
(-210,721,l),
(-210,692,o),
(-229,660,o),
(-246,660,qs),
(-255,660,o),
(-271,672,o),
(-286,687,qs),
(-306,707,o),
(-336,727,o),
(-357,727,qs),
(-393,727,o),
(-433,669,o),
(-433,617,q),
(-390,617,l),
(-390,647,o),
(-371,681,o),
(-354,681,qs),
(-345,681,o),
(-329,669,o),
(-314,654,qs),
(-295,634,o),
(-264,613,o),
(-243,613,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 0 3 4 112 0 1 3 5 0 1 112 0 2 0 0 3 2 0 103 0 3 1 5 3 87 0 3 3 5 96 6 1 5 3 5 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 4 2 0 3 4 112 0 2 0 0 3 2 0 103 0 3 1 1 3 87 0 3 3 1 96 6 5 2 1 3 1 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
20 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
0 4 2 0 3 4 112 0 1 3 5 0 1 112 0 2 0 0 3 2 0 103 0 3 1 5 3 87 0 3 3 5 96 6 1 5 3 5 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 4 2 0 3 4 112 0 1 3 5 3 1 5 126 0 2 0 0 3 2 0 103 0 3 1 5 3 87 0 3 3 5 96 6 1 5 3 5 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 4 2 0 2 4 0 126 0 1 3 5 3 1 5 126 0 2 0 0 3 2 0 103 0 3 1 5 3 87 0 3 3 5 96 6 1 5 3 5 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
0 0 0 25 0 24 18 36 34 18 36 7 13 25 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = tildecomb.narrow;
},
{
glyphname = uni0304.narrow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-174,645,l),
(-174,692,l),
(-426,692,l),
(-426,645,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0304.narrow;
},
{
glyphname = uni0311.narrow;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-379,607,l),
(-379,646,o),
(-336,692,o),
(-300,692,qs),
(-264,692,o),
(-220,646,o),
(-220,607,q),
(-173,607,l),
(-173,666,o),
(-244,735,o),
(-300,735,qs),
(-356,735,o),
(-427,666,o),
(-427,607,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
3 1 1 2 1 132 0 0 2 2 0 87 0 0 0 2 95 0 2 0 2 79 18 34 18 33 4 13 24 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0311.narrow;
},
{
glyphname = caroncomb.alt.short;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-252,598,l),
(-243,764,l),
(-300,764,l),
(-300,598,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
22 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
0 1 1 0 93 0 0 0 68 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 5 values pushed */
17 16 2 10 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = caroncomb.alt.short;
},
{
glyphname = uni0335.t;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-149,413,l),
(-149,464,l),
(-451,464,l),
(-451,413,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 13 22 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uni0335.t;
},
{
glyphname = uni0335.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(407,260,l),
(407,316,l),
(84,316,l),
(84,260,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 600;
}
);
note = uni0335.sc;
},
{
glyphname = uni0336.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,327,l),
(681,382,l),
(25,382,l),
(25,327,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 93 0 1 0 1 77 17 16 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 849;
}
);
note = uni0336.sc;
},
{
glyphname = uni0338.sc;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(112,-57,l),
(608,622,l),
(551,622,l),
(57,-57,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 131 0 1 1 116 17 16 2 8 22 
CALL[ ]	/* CallFunction */";
};
width = 616;
}
);
note = uni0338.sc;
},
{
glyphname = brevecombcy;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-154,601,o),
(-73,669,o),
(-72,731,q),
(-123,731,l),
(-124,692,o),
(-179,645,o),
(-222,645,qs),
(-265,645,o),
(-319,692,o),
(-320,731,q),
(-371,731,l),
(-370,669,o),
(-290,601,o),
(-222,601,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 95 4 1 3 1 3 79 0 0 0 13 0 12 18 34 18 5 13 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = brevecombcy;
},
{
glyphname = brevecombcy.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-159,751,o),
(-71,819,o),
(-70,880,q),
(-125,880,l),
(-126,840,o),
(-185,794,o),
(-233,794,qs),
(-282,794,o),
(-340,840,o),
(-341,880,q),
(-396,880,l),
(-395,819,o),
(-308,751,o),
(-233,751,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
2 1 0 1 0 131 0 1 3 3 1 87 0 1 1 3 95 4 1 3 1 3 79 0 0 0 13 0 12 18 34 18 5 7 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = brevecombcy.case;
},
{
glyphname = descendercy;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,0,l),
(149,0,l),
(149,-115,l),
(216,-115,l),
(216,62,l),
(60,62,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 1 1 0 111 3 1 2 2 1 93 0 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 0 132 3 1 2 2 1 93 0 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 315;
}
);
note = descendercy;
},
{
glyphname = descendercy.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(46,0,l),
(160,0,l),
(160,-157,l),
(229,-157,l),
(229,64,l),
(46,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 1 0 132 3 1 2 2 1 93 0 1 1 33 1 76 0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 329;
}
);
note = descendercy.case;
},
{
glyphname = descendercy.case.short;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(62,0,l),
(130,0,l),
(130,-157,l),
(199,-157,l),
(199,64,l),
(62,64,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
0 0 1 0 132 3 1 2 2 1 93 0 1 1 33 1 76 0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 299;
}
);
note = descendercy.case.short;
},
{
glyphname = descendercy.short;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(66,0,l),
(133,0,l),
(133,-116,l),
(198,-116,l),
(198,61,l),
(66,61,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 18 values pushed */
0 0 1 1 0 111 3 1 2 2 1 93 0 1 1 33 1 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
0 0 1 0 132 3 1 2 2 1 93 0 1 1 33 1 76 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
0 0 0 5 0 5 17 17 4 7 22 
CALL[ ]	/* CallFunction */";
};
width = 298;
}
);
note = descendercy.short;
},
{
glyphname = uni03060301;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306.loclVIET;
},
{
pos = (0,113);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060301;
},
{
glyphname = uni03060300;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306.loclVIET;
},
{
pos = (0,113);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060300;
},
{
glyphname = uni03060309;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306.loclVIET;
},
{
pos = (0,94);
ref = hookabovecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060309;
},
{
glyphname = uni03060303;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0306.loclVIET;
},
{
pos = (0,113);
ref = tildecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060303;
},
{
glyphname = uni03020301;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302.loclVIET;
},
{
pos = (152,84);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020301;
},
{
glyphname = uni03020300;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302.loclVIET;
},
{
pos = (152,84);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020300;
},
{
glyphname = uni03020309;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302.loclVIET;
},
{
pos = (120,74);
ref = hookabovecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020309;
},
{
glyphname = uni03020303;
layers = (
{
layerId = m01;
shapes = (
{
ref = uni0302.loclVIET;
},
{
pos = (0,118);
ref = tildecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020303;
},
{
glyphname = uni03060301.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0306.loclVIET;
},
{
pos = (0,263);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060301.case;
},
{
glyphname = uni03060300.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0306.loclVIET;
},
{
pos = (0,263);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060300.case;
},
{
glyphname = uni03060309.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0306.loclVIET;
},
{
pos = (0,244);
ref = hookabovecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060309.case;
},
{
glyphname = uni03060303.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0306.loclVIET;
},
{
pos = (0,263);
ref = tildecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03060303.case;
},
{
glyphname = uni03020301.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0302.loclVIET;
},
{
pos = (152,234);
ref = acutecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020301.case;
},
{
glyphname = uni03020300.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0302.loclVIET;
},
{
pos = (152,234);
ref = gravecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020300.case;
},
{
glyphname = uni03020309.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0302.loclVIET;
},
{
pos = (120,224);
ref = hookabovecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020309.case;
},
{
glyphname = uni03020303.case;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,150);
ref = uni0302.loclVIET;
},
{
pos = (0,268);
ref = tildecomb.loclVIET;
}
);
width = 0;
}
);
note = uni03020303.case;
},
{
glyphname = verticalbarcy.case;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(105,19,l),
(105,-157,l),
(173,-157,l),
(173,19,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = verticalbarcy.case;
},
{
glyphname = verticalbarcy;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,17,l),
(104,-115,l),
(171,-115,l),
(171,17,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
0 1 0 0 1 85 0 1 1 0 93 0 0 1 0 77 17 16 2 7 22 
CALL[ ]	/* CallFunction */";
};
width = 275;
}
);
note = verticalbarcy;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = styleNames;
values = (
{
language = ENG;
value = Regular;
}
);
},
{
key = postscriptFullName;
value = "Montserrat Regular";
},
{
key = postscriptFontName;
value = "Montserrat-Regular";
}
);
}
);
kerningLTR = {
m01 = {
"@MMK_L_A.ss01" = {
"@MMK_R_J.ss01" = -2;
"@MMK_R_T" = -14;
"@MMK_R_T.ss01" = -10;
"@MMK_R_V" = -20;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -26;
"@MMK_R_Y.ss01" = -23;
"@MMK_R_asterisk" = -8;
"@MMK_R_backslash" = -25;
"@MMK_R_one" = -8;
"@MMK_R_question" = -20;
"@MMK_R_quoteright" = -15;
"@MMK_R_trademark" = -10;
"@MMK_R_uni01B7" = -2;
"@MMK_R_uni02BB" = -15;
"@MMK_R_uni0409" = -10;
"@MMK_R_uni041B.ss01" = -11;
"@MMK_R_uni0427" = -20;
"@MMK_R_uni0434" = -8;
"@MMK_R_uni0442" = -14;
"@MMK_R_uni044A.ss01" = -27;
"@MMK_R_uni048D" = -29;
"@MMK_R_uni04BC" = -7;
"@MMK_R_uni04BD" = -26;
"@MMK_R_uni0510" = -3;
"@MMK_R_v" = -4;
};
"@MMK_L_B" = {
"@MMK_R_J.ss01" = -30;
"@MMK_R_T" = -10;
"@MMK_R_T.ss01" = -5;
"@MMK_R_V" = -5;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -15;
"@MMK_R_backslash" = -20;
"@MMK_R_comma" = 2;
"@MMK_R_j.sc.ss01" = -20;
"@MMK_R_quoteright" = -2;
"@MMK_R_three.osf" = -9;
"@MMK_R_trademark" = -2;
"@MMK_R_underscore" = -10;
"@MMK_R_uni02BB" = -10;
"@MMK_R_uni048D" = -20;
"@MMK_R_uni04BD" = -6;
"@MMK_R_y.sc" = -10;
};
"@MMK_L_C" = {
"@MMK_R_A" = -18;
"@MMK_R_J.ss01" = -28;
"@MMK_R_T" = -9;
"@MMK_R_U" = -2;
"@MMK_R_V" = -8;
"@MMK_R_X" = -18;
"@MMK_R_Y" = -15;
"@MMK_R_Y.ss01" = -15;
"@MMK_R_a" = -8;
"@MMK_R_a.sc" = -10;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = 20;
"@MMK_R_at" = -15;
"@MMK_R_b.sc" = -8;
"@MMK_R_backslash" = -10;
"@MMK_R_c" = -23;
"@MMK_R_c.sc" = -18;
"@MMK_R_colon" = -6;
"@MMK_R_comma" = 14;
"@MMK_R_degree" = 10;
"@MMK_R_dollar" = -4;
"@MMK_R_e.sc.ss01" = -14;
"@MMK_R_eight" = -14;
"@MMK_R_exclamdown" = -10;
"@MMK_R_f.sc.ss01" = -8;
"@MMK_R_five" = -10;
"@MMK_R_five.osf" = -21;
"@MMK_R_four" = -30;
"@MMK_R_four.osf" = -23;
"@MMK_R_guillemotright" = -2;
"@MMK_R_guillemotright.case" = -8;
"@MMK_R_j.sc.ss01" = -28;
"@MMK_R_nine" = -10;
"@MMK_R_nine.osf" = -21;
"@MMK_R_one" = 10;
"@MMK_R_one.osf" = 10;
"@MMK_R_paragraph" = 8;
"@MMK_R_periodcentered.case" = -25;
"@MMK_R_plus" = -2;
"@MMK_R_questiondown" = -15;
"@MMK_R_quoteright" = 16;
"@MMK_R_s" = -20;
"@MMK_R_s.sc" = -19;
"@MMK_R_section" = -8;
"@MMK_R_seven.osf" = -13;
"@MMK_R_t.sc" = -20;
"@MMK_R_three" = -4;
"@MMK_R_three.osf" = -21;
"@MMK_R_two" = -8;
"@MMK_R_two.osf" = -15;
"@MMK_R_u" = -18;
"@MMK_R_u.sc" = -18;
"@MMK_R_underscore" = 10;
"@MMK_R_uni01EF" = -15;
"@MMK_R_uni02BB" = 3;
"@MMK_R_uni0409" = -19;
"@MMK_R_uni0427" = -11;
"@MMK_R_uni0431.loclSRB" = -4;
"@MMK_R_uni0434" = -25;
"@MMK_R_uni0442" = -15;
"@MMK_R_uni048D" = -31;
"@MMK_R_uni04BC" = -35;
"@MMK_R_uni04BD" = -55;
"@MMK_R_uni0510" = -13;
"@MMK_R_uni0511" = -19;
"@MMK_R_x" = -18;
"@MMK_R_x.sc" = -5;
"@MMK_R_y.sc" = 22;
"@MMK_R_y.sc.ss01" = -40;
"@MMK_R_z" = -18;
"@MMK_R_z.sc" = -8;
"@MMK_R_zero" = -23;
"@MMK_R_zero.osf" = -31;
};
"@MMK_L_E" = {
"@MMK_R_V" = -10;
"@MMK_R_X" = -9;
"@MMK_R_Y" = -9;
"@MMK_R_a" = -8;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_at" = -4;
"@MMK_R_c" = -8;
"@MMK_R_c.sc" = -13;
"@MMK_R_colon" = -8;
"@MMK_R_comma" = 10;
"@MMK_R_e.sc.ss01" = -8;
"@MMK_R_eight" = -8;
"@MMK_R_exclamdown" = -8;
"@MMK_R_f.sc.ss01" = -8;
"@MMK_R_five" = -8;
"@MMK_R_five.osf" = -15;
"@MMK_R_four" = -38;
"@MMK_R_four.osf" = -25;
"@MMK_R_guillemotright.case" = -18;
"@MMK_R_i.sc.ss01" = -8;
"@MMK_R_j.sc" = 5;
"@MMK_R_j.sc.ss01" = -23;
"@MMK_R_nine" = -4;
"@MMK_R_nine.osf" = -19;
"@MMK_R_one.osf" = -11;
"@MMK_R_plus" = -20;
"@MMK_R_question" = -15;
"@MMK_R_s" = -8;
"@MMK_R_s.sc" = -8;
"@MMK_R_section" = -8;
"@MMK_R_seven" = -8;
"@MMK_R_seven.osf" = -23;
"@MMK_R_t" = -15;
"@MMK_R_t.sc" = -11;
"@MMK_R_three" = -15;
"@MMK_R_three.osf" = -15;
"@MMK_R_two" = -8;
"@MMK_R_two.osf" = -15;
"@MMK_R_u" = -8;
"@MMK_R_u.sc" = -11;
"@MMK_R_underscore" = 15;
"@MMK_R_uni048D" = -15;
"@MMK_R_uni04BD" = -7;
"@MMK_R_v" = -11;
"@MMK_R_v.sc" = -15;
"@MMK_R_x" = -15;
"@MMK_R_x.sc" = -8;
"@MMK_R_y.sc" = -8;
"@MMK_R_y.sc.ss01" = -8;
"@MMK_R_z" = -11;
"@MMK_R_z.sc" = -8;
"@MMK_R_zero" = -16;
"@MMK_R_zero.osf" = -15;
};
"@MMK_L_F" = {
"@MMK_R_A" = -33;
"@MMK_R_A.ss01" = -9;
"@MMK_R_J" = -15;
"@MMK_R_J.ss01" = -30;
"@MMK_R_T" = 5;
"@MMK_R_T.ss01" = 30;
"@MMK_R_X" = -18;
"@MMK_R_Y.ss01" = -8;
"@MMK_R_a" = -21;
"@MMK_R_a.sc" = -50;
"@MMK_R_a.sc.ss01" = -21;
"@MMK_R_ampersand" = -30;
"@MMK_R_asterisk" = 20;
"@MMK_R_at" = -9;
"@MMK_R_b.sc" = -8;
"@MMK_R_backslash" = 10;
"@MMK_R_braceright.case" = 2;
"@MMK_R_bracketright" = 10;
"@MMK_R_c" = -18;
"@MMK_R_c.sc" = -9;
"@MMK_R_comma" = -10;
"@MMK_R_degree" = 30;
"@MMK_R_dollar" = -4;
"@MMK_R_e.sc.ss01" = -18;
"@MMK_R_eight" = -18;
"@MMK_R_exclam" = 5;
"@MMK_R_exclam.sc" = -15;
"@MMK_R_exclamdown" = -10;
"@MMK_R_exclamdown.sc" = -15;
"@MMK_R_f.sc.ss01" = -18;
"@MMK_R_five" = -18;
"@MMK_R_five.osf" = -20;
"@MMK_R_four" = -50;
"@MMK_R_four.osf" = -75;
"@MMK_R_guillemotright" = -14;
"@MMK_R_guillemotright.case" = -11;
"@MMK_R_guillemotright.sc" = -8;
"@MMK_R_i" = -10;
"@MMK_R_i.sc.ss01" = -8;
"@MMK_R_j" = -15;
"@MMK_R_j.sc" = -23;
"@MMK_R_j.sc.ss01" = -40;
"@MMK_R_nine" = 6;
"@MMK_R_nine.osf" = -23;
"@MMK_R_one" = 15;
"@MMK_R_one.osf" = 10;
"@MMK_R_paragraph" = 10;
"@MMK_R_parenright" = -8;
"@MMK_R_periodcentered.case" = 14;
"@MMK_R_question" = -12;
"@MMK_R_questiondown" = -48;
"@MMK_R_quotedbl" = 40;
"@MMK_R_quoteright" = 28;
"@MMK_R_s" = -10;
"@MMK_R_s.sc" = -11;
"@MMK_R_section" = -8;
"@MMK_R_seven" = 10;
"@MMK_R_seven.osf" = -8;
"@MMK_R_slash" = -43;
"@MMK_R_t.sc" = 7;
"@MMK_R_three.osf" = -23;
"@MMK_R_trademark" = 30;
"@MMK_R_two" = -1;
"@MMK_R_two.osf" = -23;
"@MMK_R_u" = -18;
"@MMK_R_u.sc" = -18;
"@MMK_R_underscore" = -20;
"@MMK_R_uni01B7" = -15;
"@MMK_R_uni01EF" = -24;
"@MMK_R_uni02BB" = 18;
"@MMK_R_uni0409" = -41;
"@MMK_R_uni0414.ss01" = -30;
"@MMK_R_uni0427" = -15;
"@MMK_R_uni0431.loclSRB" = -20;
"@MMK_R_uni0434" = -40;
"@MMK_R_uni0442" = -15;
"@MMK_R_uni044A.ss01" = -40;
"@MMK_R_uni048D" = -25;
"@MMK_R_uni04BC" = -25;
"@MMK_R_uni04BD" = -22;
"@MMK_R_uni0510" = -4;
"@MMK_R_uni0511" = -6;
"@MMK_R_v" = 5;
"@MMK_R_v.sc" = 5;
"@MMK_R_x" = -21;
"@MMK_R_x.sc" = -11;
"@MMK_R_y.sc" = 2;
"@MMK_R_y.sc.ss01" = -15;
"@MMK_R_z" = -18;
"@MMK_R_z.sc" = -23;
"@MMK_R_zero" = -14;
"@MMK_R_zero.osf" = -13;
};
"@MMK_L_G" = {
"@MMK_R_J.ss01" = -10;
"@MMK_R_backslash" = -18;
"@MMK_R_comma" = 10;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_t.sc" = -10;
"@MMK_R_uni02BB" = -10;
"@MMK_R_v.sc" = 2;
"@MMK_R_y.sc" = 20;
};
"@MMK_L_H" = {
"@MMK_R_V" = -8;
"@MMK_R_uni0409" = -11;
"@MMK_R_uni0427" = -20;
"@MMK_R_uni0431.loclSRB" = -13;
"@MMK_R_uni048D" = -8;
"@MMK_R_uni04BC" = -11;
"@MMK_R_uni04BD" = -11;
};
"@MMK_L_I.ss01" = {
"@MMK_R_at" = -5;
"@MMK_R_eight" = -4;
"@MMK_R_four" = -10;
"@MMK_R_nine" = -4;
"@MMK_R_periodcentered.case" = -5;
"@MMK_R_trademark" = 20;
"@MMK_R_zero" = -10;
};
"@MMK_L_IJ.ss01" = {
"@MMK_R_J.ss01" = -20;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_three.osf" = -8;
"@MMK_R_underscore" = -10;
};
"@MMK_L_J" = {
"@MMK_R_A" = -15;
"@MMK_R_J.ss01" = -25;
"@MMK_R_T" = -14;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_a.sc" = -5;
"@MMK_R_comma" = -9;
"@MMK_R_four.osf" = -16;
"@MMK_R_j" = -5;
"@MMK_R_j.sc" = -1;
"@MMK_R_j.sc.ss01" = -11;
"@MMK_R_questiondown" = -8;
"@MMK_R_slash" = -10;
"@MMK_R_three.osf" = -15;
"@MMK_R_underscore" = -10;
"@MMK_R_uni01EF" = -15;
"@MMK_R_uni0409" = -21;
"@MMK_R_uni0414.ss01" = -8;
"@MMK_R_uni0427" = -26;
"@MMK_R_uni0434" = -15;
"@MMK_R_uni0442" = -15;
"@MMK_R_uni048D" = -17;
"@MMK_R_uni04BC" = -17;
"@MMK_R_uni04BD" = -28;
"@MMK_R_uni0511" = -11;
"@MMK_R_x" = -8;
};
"@MMK_L_K" = {
"@MMK_R_A" = -27;
"@MMK_R_A.ss01" = -10;
"@MMK_R_T" = -40;
"@MMK_R_T.ss01" = -20;
"@MMK_R_U" = -10;
"@MMK_R_V" = -40;
"@MMK_R_X" = -37;
"@MMK_R_Y" = -47;
"@MMK_R_Y.ss01" = -28;
"@MMK_R_a" = -14;
"@MMK_R_a.sc" = -15;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_ampersand" = -20;
"@MMK_R_at" = -25;
"@MMK_R_b.sc" = -10;
"@MMK_R_braceright.case" = 5;
"@MMK_R_bracketleft" = -30;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -24;
"@MMK_R_c.sc" = -21;
"@MMK_R_degree" = -10;
"@MMK_R_dollar" = -15;
"@MMK_R_e.sc.ss01" = -25;
"@MMK_R_eight" = -21;
"@MMK_R_f.sc.ss01" = -4;
"@MMK_R_five.osf" = -15;
"@MMK_R_four" = -48;
"@MMK_R_four.osf" = -15;
"@MMK_R_guillemotright" = -2;
"@MMK_R_guillemotright.case" = -28;
"@MMK_R_i" = -10;
"@MMK_R_i.sc.ss01" = -8;
"@MMK_R_j" = -4;
"@MMK_R_j.sc" = 20;
"@MMK_R_j.sc.ss01" = 12;
"@MMK_R_nine" = -10;
"@MMK_R_nine.osf" = -23;
"@MMK_R_one" = 20;
"@MMK_R_one.osf" = -15;
"@MMK_R_paragraph" = -5;
"@MMK_R_periodcentered.case" = -26;
"@MMK_R_plus" = -32;
"@MMK_R_question" = -40;
"@MMK_R_s" = -18;
"@MMK_R_s.sc" = -15;
"@MMK_R_seven.osf" = -48;
"@MMK_R_slash" = 8;
"@MMK_R_t" = -28;
"@MMK_R_t.sc" = -52;
"@MMK_R_three" = -8;
"@MMK_R_three.osf" = -8;
"@MMK_R_trademark" = 20;
"@MMK_R_two" = 1;
"@MMK_R_two.osf" = 1;
"@MMK_R_u" = -19;
"@MMK_R_u.sc" = -25;
"@MMK_R_underscore" = 68;
"@MMK_R_uni01B7" = -24;
"@MMK_R_uni01EF" = -26;
"@MMK_R_uni02BB" = -15;
"@MMK_R_uni0409" = -5;
"@MMK_R_uni0427" = -33;
"@MMK_R_uni0431.loclSRB" = -25;
"@MMK_R_uni0442" = -40;
"@MMK_R_uni044A.ss01" = -57;
"@MMK_R_uni048D" = -44;
"@MMK_R_uni04BC" = -55;
"@MMK_R_uni04BD" = -76;
"@MMK_R_uni0510" = -10;
"@MMK_R_uni0511" = -26;
"@MMK_R_v" = -36;
"@MMK_R_v.sc" = -19;
"@MMK_R_x" = -39;
"@MMK_R_x.sc" = -20;
"@MMK_R_y.sc" = -36;
"@MMK_R_y.sc.ss01" = -35;
"@MMK_R_z" = -22;
"@MMK_R_z.sc" = -11;
"@MMK_R_zero" = -21;
"@MMK_R_zero.osf" = -25;
};
"@MMK_L_L" = {
"@MMK_R_A" = 2;
"@MMK_R_J.ss01" = 30;
"@MMK_R_T" = -65;
"@MMK_R_T.ss01" = -65;
"@MMK_R_U" = -13;
"@MMK_R_V" = -53;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -74;
"@MMK_R_Y.ss01" = -28;
"@MMK_R_a" = 2;
"@MMK_R_a.sc" = 30;
"@MMK_R_a.sc.ss01" = 5;
"@MMK_R_ampersand" = 2;
"@MMK_R_asterisk" = -70;
"@MMK_R_at" = -14;
"@MMK_R_b.sc" = 10;
"@MMK_R_backslash" = -70;
"@MMK_R_braceright.case" = 2;
"@MMK_R_c" = -8;
"@MMK_R_c.sc" = -8;
"@MMK_R_colon" = 20;
"@MMK_R_comma" = 30;
"@MMK_R_degree" = -65;
"@MMK_R_dollar" = -8;
"@MMK_R_eight" = -8;
"@MMK_R_four" = -38;
"@MMK_R_four.osf" = -3;
"@MMK_R_guillemotright" = 8;
"@MMK_R_guillemotright.case" = -8;
"@MMK_R_i.sc.ss01" = 2;
"@MMK_R_j.sc" = 40;
"@MMK_R_j.sc.ss01" = 22;
"@MMK_R_nine" = -10;
"@MMK_R_nine.osf" = -23;
"@MMK_R_one" = -38;
"@MMK_R_one.osf" = -43;
"@MMK_R_paragraph" = -75;
"@MMK_R_periodcentered.case" = -30;
"@MMK_R_plus" = -13;
"@MMK_R_question" = -95;
"@MMK_R_quoteright" = -46;
"@MMK_R_seven" = -50;
"@MMK_R_seven.osf" = -73;
"@MMK_R_slash" = 25;
"@MMK_R_t" = -5;
"@MMK_R_t.sc" = -40;
"@MMK_R_three" = 2;
"@MMK_R_trademark" = -65;
"@MMK_R_two.osf" = 10;
"@MMK_R_u" = -8;
"@MMK_R_u.sc" = -15;
"@MMK_R_underscore" = 63;
"@MMK_R_uni02BB" = -42;
"@MMK_R_uni0510" = -8;
"@MMK_R_v" = -39;
"@MMK_R_v.sc" = -29;
"@MMK_R_x" = -8;
"@MMK_R_x.sc" = 12;
"@MMK_R_y.sc" = -56;
"@MMK_R_y.sc.ss01" = -25;
"@MMK_R_z.sc" = 10;
"@MMK_R_zero" = -25;
"@MMK_R_zero.osf" = -8;
};
"@MMK_L_M.ss01" = {
"@MMK_R_backslash" = -10;
"@MMK_R_one" = -4;
"@MMK_R_question" = -5;
"@MMK_R_trademark" = -10;
"@MMK_R_uni02BB" = -11;
};
"@MMK_L_P" = {
"@MMK_R_A" = -45;
"@MMK_R_A.ss01" = -26;
"@MMK_R_B" = -10;
"@MMK_R_I.ss01" = -10;
"@MMK_R_J" = -34;
"@MMK_R_J.ss01" = -48;
"@MMK_R_T" = -33;
"@MMK_R_U" = -5;
"@MMK_R_V" = -16;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -10;
"@MMK_R_Z" = -18;
"@MMK_R_a" = -15;
"@MMK_R_a.sc" = -45;
"@MMK_R_a.sc.ss01" = -14;
"@MMK_R_ampersand" = -33;
"@MMK_R_backslash" = -20;
"@MMK_R_bracketright" = -11;
"@MMK_R_c" = -13;
"@MMK_R_comma" = -29;
"@MMK_R_degree" = 20;
"@MMK_R_e.sc.ss01" = -10;
"@MMK_R_eight" = -6;
"@MMK_R_five" = -10;
"@MMK_R_four" = -30;
"@MMK_R_four.osf" = -71;
"@MMK_R_i" = -23;
"@MMK_R_j" = -10;
"@MMK_R_j.sc" = -10;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_nine.osf" = 5;
"@MMK_R_one.osf" = 5;
"@MMK_R_parenright" = -11;
"@MMK_R_periodcentered.case" = 14;
"@MMK_R_plus" = -2;
"@MMK_R_questiondown" = -53;
"@MMK_R_quoteright" = 10;
"@MMK_R_seven.osf" = 5;
"@MMK_R_slash" = -48;
"@MMK_R_t" = 5;
"@MMK_R_t.sc" = 10;
"@MMK_R_three" = -15;
"@MMK_R_three.osf" = -8;
"@MMK_R_two" = -5;
"@MMK_R_underscore" = -32;
"@MMK_R_uni01B7" = -19;
"@MMK_R_uni01EF" = -19;
"@MMK_R_uni0409" = -35;
"@MMK_R_uni0414.ss01" = -10;
"@MMK_R_uni041B.ss01" = -23;
"@MMK_R_uni0427" = -19;
"@MMK_R_uni0431.loclSRB" = -28;
"@MMK_R_uni0434" = -45;
"@MMK_R_uni0442" = -11;
"@MMK_R_uni048D" = -25;
"@MMK_R_uni04BC" = -4;
"@MMK_R_uni04BD" = -19;
"@MMK_R_uni0510" = -5;
"@MMK_R_uni0511" = -5;
"@MMK_R_v" = -8;
"@MMK_R_x" = -34;
"@MMK_R_x.sc" = -10;
};
"@MMK_L_R" = {
"@MMK_R_J" = -10;
"@MMK_R_J.ss01" = -30;
"@MMK_R_T" = -10;
"@MMK_R_X" = -20;
"@MMK_R_Y" = -10;
"@MMK_R_a" = -5;
"@MMK_R_a.sc" = -10;
"@MMK_R_backslash" = -20;
"@MMK_R_degree" = 15;
"@MMK_R_five.osf" = -5;
"@MMK_R_four" = -20;
"@MMK_R_j.sc.ss01" = 5;
"@MMK_R_plus" = -1;
"@MMK_R_question" = -5;
"@MMK_R_questiondown" = -10;
"@MMK_R_seven.osf" = 5;
"@MMK_R_t" = 5;
"@MMK_R_t.sc" = 10;
"@MMK_R_three" = -8;
"@MMK_R_three.osf" = -15;
"@MMK_R_underscore" = 18;
"@MMK_R_uni02BB" = 5;
};
"@MMK_L_T" = {
"@MMK_R_A" = -35;
"@MMK_R_A.ss01" = -14;
"@MMK_R_J" = -10;
"@MMK_R_J.ss01" = -10;
"@MMK_R_T" = 10;
"@MMK_R_U" = -14;
"@MMK_R_V" = -5;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -5;
"@MMK_R_a" = -29;
"@MMK_R_a.sc" = -56;
"@MMK_R_a.sc.ss01" = -24;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 30;
"@MMK_R_at" = -10;
"@MMK_R_b.sc" = -8;
"@MMK_R_backslash" = 30;
"@MMK_R_braceright.case" = 5;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -55;
"@MMK_R_c.sc" = -31;
"@MMK_R_colon" = -10;
"@MMK_R_comma" = -31;
"@MMK_R_degree" = 40;
"@MMK_R_dollar" = -11;
"@MMK_R_e.sc.ss01" = -26;
"@MMK_R_eight" = -10;
"@MMK_R_exclam" = 20;
"@MMK_R_exclamdown" = -20;
"@MMK_R_f.sc.ss01" = -16;
"@MMK_R_five" = -6;
"@MMK_R_five.osf" = -18;
"@MMK_R_four" = -88;
"@MMK_R_four.osf" = -90;
"@MMK_R_guillemotright" = -12;
"@MMK_R_guillemotright.case" = -15;
"@MMK_R_i" = -14;
"@MMK_R_i.sc.ss01" = -8;
"@MMK_R_j" = 22;
"@MMK_R_j.sc" = -6;
"@MMK_R_j.sc.ss01" = -15;
"@MMK_R_nine.osf" = -14;
"@MMK_R_one" = 40;
"@MMK_R_one.osf" = 15;
"@MMK_R_paragraph" = 30;
"@MMK_R_parenleft" = -19;
"@MMK_R_periodcentered.case" = -16;
"@MMK_R_plus" = -32;
"@MMK_R_question" = 7;
"@MMK_R_questiondown" = -60;
"@MMK_R_quotedbl" = 5;
"@MMK_R_quoteright" = 28;
"@MMK_R_s" = -39;
"@MMK_R_s.sc" = -23;
"@MMK_R_seven" = 20;
"@MMK_R_seven.osf" = -17;
"@MMK_R_slash" = -20;
"@MMK_R_t" = 2;
"@MMK_R_t.sc" = 7;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = -10;
"@MMK_R_trademark" = 50;
"@MMK_R_two" = 15;
"@MMK_R_two.osf" = -21;
"@MMK_R_u" = -14;
"@MMK_R_u.sc" = -11;
"@MMK_R_uni01EF" = -47;
"@MMK_R_uni02BB" = 28;
"@MMK_R_uni0409" = -36;
"@MMK_R_uni0414.ss01" = -37;
"@MMK_R_uni041B.ss01" = -27;
"@MMK_R_uni0427" = -15;
"@MMK_R_uni0431.loclSRB" = -20;
"@MMK_R_uni0434" = -68;
"@MMK_R_uni0442" = -23;
"@MMK_R_uni044A.ss01" = -38;
"@MMK_R_uni045B" = 28;
"@MMK_R_uni048D" = -34;
"@MMK_R_uni04BC" = -30;
"@MMK_R_uni04BD" = -108;
"@MMK_R_uni0510" = -4;
"@MMK_R_uni0511" = -53;
"@MMK_R_v" = -34;
"@MMK_R_x" = -34;
"@MMK_R_x.sc" = -3;
"@MMK_R_y.sc.ss01" = -15;
"@MMK_R_z" = -10;
"@MMK_R_z.sc" = -11;
"@MMK_R_zero" = -20;
"@MMK_R_zero.osf" = -30;
};
"@MMK_L_T.ss01" = {
"@MMK_R_A" = -40;
"@MMK_R_A.ss01" = -10;
"@MMK_R_J.ss01" = -8;
"@MMK_R_V" = 18;
"@MMK_R_X" = -12;
"@MMK_R_Y" = 20;
"@MMK_R_a" = -30;
"@MMK_R_a.sc" = -54;
"@MMK_R_a.sc.ss01" = -39;
"@MMK_R_ampersand" = -30;
"@MMK_R_asterisk" = 40;
"@MMK_R_at" = -10;
"@MMK_R_b.sc" = -14;
"@MMK_R_backslash" = 20;
"@MMK_R_braceright.case" = 5;
"@MMK_R_bracketright" = 7;
"@MMK_R_c" = -55;
"@MMK_R_c.sc" = -36;
"@MMK_R_colon" = -10;
"@MMK_R_comma" = -31;
"@MMK_R_dagger" = -10;
"@MMK_R_degree" = 30;
"@MMK_R_e.sc.ss01" = -32;
"@MMK_R_eight" = -5;
"@MMK_R_exclam" = 20;
"@MMK_R_exclamdown" = -20;
"@MMK_R_f.sc.ss01" = -31;
"@MMK_R_five" = 8;
"@MMK_R_four" = -80;
"@MMK_R_four.osf" = -86;
"@MMK_R_guillemotright" = -12;
"@MMK_R_guillemotright.case" = -18;
"@MMK_R_i" = -10;
"@MMK_R_i.sc.ss01" = -8;
"@MMK_R_j" = -10;
"@MMK_R_j.sc" = -10;
"@MMK_R_j.sc.ss01" = -18;
"@MMK_R_nine.osf" = -18;
"@MMK_R_one" = 40;
"@MMK_R_one.osf" = 22;
"@MMK_R_paragraph" = 45;
"@MMK_R_parenleft" = -15;
"@MMK_R_periodcentered.case" = -36;
"@MMK_R_plus" = -32;
"@MMK_R_question" = 30;
"@MMK_R_questiondown" = -53;
"@MMK_R_quotedbl" = 15;
"@MMK_R_quoteright" = 38;
"@MMK_R_s" = -32;
"@MMK_R_s.sc" = -25;
"@MMK_R_seven" = 30;
"@MMK_R_seven.osf" = 2;
"@MMK_R_slash" = -20;
"@MMK_R_t.sc" = 5;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = -11;
"@MMK_R_trademark" = 50;
"@MMK_R_two" = 20;
"@MMK_R_two.osf" = -15;
"@MMK_R_u" = -19;
"@MMK_R_u.sc" = -10;
"@MMK_R_underscore" = -8;
"@MMK_R_uni01EF" = -30;
"@MMK_R_uni02BB" = 35;
"@MMK_R_uni0409" = -15;
"@MMK_R_uni0414.ss01" = -20;
"@MMK_R_uni041B.ss01" = -13;
"@MMK_R_uni0431.loclSRB" = -20;
"@MMK_R_uni0434" = -35;
"@MMK_R_uni0440.ss01" = -42;
"@MMK_R_uni044A.ss01" = -45;
"@MMK_R_uni048D" = -25;
"@MMK_R_uni0493" = -2;
"@MMK_R_uni04BD" = -74;
"@MMK_R_uni0510" = -10;
"@MMK_R_uni0511" = -33;
"@MMK_R_x" = -4;
"@MMK_R_x.sc" = -5;
"@MMK_R_y.sc" = 2;
"@MMK_R_y.sc.ss01" = -15;
"@MMK_R_z" = -20;
"@MMK_R_z.sc" = -10;
"@MMK_R_zero" = -15;
"@MMK_R_zero.osf" = -35;
};
"@MMK_L_Thorn" = {
"@MMK_R_A" = -30;
"@MMK_R_I.ss01" = -15;
"@MMK_R_J" = -40;
"@MMK_R_J.ss01" = -68;
"@MMK_R_T" = -25;
"@MMK_R_T.ss01" = -18;
"@MMK_R_V" = -10;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -30;
"@MMK_R_Z" = -19;
"@MMK_R_a" = -10;
"@MMK_R_a.sc" = -30;
"@MMK_R_backslash" = -40;
"@MMK_R_comma" = -24;
"@MMK_R_e.sc.ss01" = -10;
"@MMK_R_five" = -10;
"@MMK_R_four.osf" = -30;
"@MMK_R_j" = -10;
"@MMK_R_j.sc" = -10;
"@MMK_R_j.sc.ss01" = -20;
"@MMK_R_one" = -20;
"@MMK_R_periodcentered.case" = 10;
"@MMK_R_question" = -30;
"@MMK_R_questiondown" = -25;
"@MMK_R_slash" = -30;
"@MMK_R_t" = 5;
"@MMK_R_three" = -20;
"@MMK_R_three.osf" = -23;
"@MMK_R_trademark" = -2;
"@MMK_R_two" = -25;
"@MMK_R_underscore" = -30;
"@MMK_R_x" = -10;
"@MMK_R_x.sc" = -20;
"@MMK_R_y.sc" = -20;
};
"@MMK_L_Uhorn" = {
"@MMK_R_A" = -15;
"@MMK_R_J.ss01" = -19;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -8;
"@MMK_R_a" = -5;
"@MMK_R_a.sc" = -10;
"@MMK_R_a.sc.ss01" = -5;
"@MMK_R_ampersand" = -5;
"@MMK_R_asterisk" = 25;
"@MMK_R_b" = 6;
"@MMK_R_b.sc" = -5;
"@MMK_R_backslash" = 82;
"@MMK_R_braceright.case" = 20;
"@MMK_R_bracketright" = 20;
"@MMK_R_c" = -5;
"@MMK_R_c.sc" = -5;
"@MMK_R_colon" = -5;
"@MMK_R_comma" = -6;
"@MMK_R_dagger" = -20;
"@MMK_R_degree" = 7;
"@MMK_R_e.sc.ss01" = -5;
"@MMK_R_eight" = -5;
"@MMK_R_exclam" = 12;
"@MMK_R_exclamdown" = -5;
"@MMK_R_f.sc.ss01" = -5;
"@MMK_R_four" = -5;
"@MMK_R_four.osf" = -21;
"@MMK_R_guillemotright.case" = -5;
"@MMK_R_i" = -5;
"@MMK_R_i.sc.ss01" = -5;
"@MMK_R_j" = 6;
"@MMK_R_j.sc" = -5;
"@MMK_R_j.sc.ss01" = -5;
"@MMK_R_nine.osf" = -5;
"@MMK_R_one" = 25;
"@MMK_R_paragraph" = 7;
"@MMK_R_parenright.case" = 70;
"@MMK_R_periodcentered.case" = -5;
"@MMK_R_plus" = -5;
"@MMK_R_question" = 10;
"@MMK_R_questiondown" = -12;
"@MMK_R_quoteright" = 12;
"@MMK_R_s" = -5;
"@MMK_R_s.sc" = -5;
"@MMK_R_seven" = 20;
"@MMK_R_slash" = -7;
"@MMK_R_t.sc" = -5;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = 45;
"@MMK_R_two" = 2;
"@MMK_R_two.osf" = -5;
"@MMK_R_u" = -5;
"@MMK_R_u.sc" = -5;
"@MMK_R_underscore" = -7;
"@MMK_R_v" = -5;
"@MMK_R_x" = -5;
"@MMK_R_y.sc.ss01" = -5;
"@MMK_R_z" = -5;
"@MMK_R_z.sc" = -5;
"@MMK_R_zero" = -5;
"@MMK_R_zero.osf" = -5;
};
"@MMK_L_V" = {
"@MMK_R_A" = -36;
"@MMK_R_A.ss01" = -20;
"@MMK_R_B" = -15;
"@MMK_R_J" = -15;
"@MMK_R_J.ss01" = -25;
"@MMK_R_T" = -5;
"@MMK_R_T.ss01" = 18;
"@MMK_R_X" = -22;
"@MMK_R_Y" = -19;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -55;
"@MMK_R_a.sc" = -51;
"@MMK_R_a.sc.ss01" = -39;
"@MMK_R_ampersand" = -28;
"@MMK_R_asterisk" = 34;
"@MMK_R_at" = -21;
"@MMK_R_b.sc" = -12;
"@MMK_R_backslash" = 30;
"@MMK_R_braceright.case" = 7;
"@MMK_R_bracketright" = 22;
"@MMK_R_c" = -55;
"@MMK_R_c.sc" = -37;
"@MMK_R_colon" = -22;
"@MMK_R_comma" = -36;
"@MMK_R_dagger" = -20;
"@MMK_R_degree" = 28;
"@MMK_R_dollar" = -15;
"@MMK_R_e.sc.ss01" = -46;
"@MMK_R_eight" = -16;
"@MMK_R_exclam" = 10;
"@MMK_R_exclamdown" = -30;
"@MMK_R_f.sc.ss01" = -51;
"@MMK_R_five" = -7;
"@MMK_R_five.osf" = -17;
"@MMK_R_four" = -72;
"@MMK_R_four.osf" = -100;
"@MMK_R_guillemotright" = -12;
"@MMK_R_guillemotright.case" = -34;
"@MMK_R_i" = -35;
"@MMK_R_i.sc.ss01" = -25;
"@MMK_R_j" = -20;
"@MMK_R_j.sc" = -31;
"@MMK_R_j.sc.ss01" = -40;
"@MMK_R_nine" = -6;
"@MMK_R_nine.osf" = -27;
"@MMK_R_one" = 30;
"@MMK_R_paragraph" = 25;
"@MMK_R_parenright" = 5;
"@MMK_R_periodcentered.case" = -42;
"@MMK_R_plus" = -22;
"@MMK_R_questiondown" = -73;
"@MMK_R_quoteright" = 35;
"@MMK_R_s" = -57;
"@MMK_R_s.sc" = -42;
"@MMK_R_seven" = 10;
"@MMK_R_seven.osf" = -20;
"@MMK_R_slash" = -40;
"@MMK_R_t" = -2;
"@MMK_R_t.sc" = -7;
"@MMK_R_three" = 2;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = 40;
"@MMK_R_two.osf" = -21;
"@MMK_R_u" = -31;
"@MMK_R_u.sc" = -21;
"@MMK_R_underscore" = -10;
"@MMK_R_uni01B7" = -4;
"@MMK_R_uni01EF" = -48;
"@MMK_R_uni02BB" = 23;
"@MMK_R_uni0409" = -22;
"@MMK_R_uni0414.ss01" = -23;
"@MMK_R_uni041B.ss01" = -23;
"@MMK_R_uni0431.loclSRB" = -21;
"@MMK_R_uni0434" = -35;
"@MMK_R_uni0442" = -20;
"@MMK_R_uni045B" = 17;
"@MMK_R_uni048D" = -35;
"@MMK_R_uni04BC" = -28;
"@MMK_R_uni04BD" = -57;
"@MMK_R_uni0510" = -21;
"@MMK_R_uni0511" = -54;
"@MMK_R_uni1E9E" = -20;
"@MMK_R_v" = -16;
"@MMK_R_x" = -34;
"@MMK_R_x.sc" = -20;
"@MMK_R_y.sc.ss01" = -25;
"@MMK_R_z" = -27;
"@MMK_R_z.sc" = -20;
"@MMK_R_zero" = -25;
"@MMK_R_zero.osf" = -37;
};
"@MMK_L_X" = {
"@MMK_R_A" = -32;
"@MMK_R_A.ss01" = -15;
"@MMK_R_B" = -24;
"@MMK_R_T" = -30;
"@MMK_R_T.ss01" = -12;
"@MMK_R_U" = -10;
"@MMK_R_V" = -22;
"@MMK_R_X" = -23;
"@MMK_R_Y" = -30;
"@MMK_R_Y.ss01" = -19;
"@MMK_R_Z" = -10;
"@MMK_R_a" = -16;
"@MMK_R_a.sc" = -21;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = -10;
"@MMK_R_at" = -25;
"@MMK_R_b.sc" = -6;
"@MMK_R_braceright.case" = 2;
"@MMK_R_bracketright" = 2;
"@MMK_R_c" = -30;
"@MMK_R_c.sc" = -31;
"@MMK_R_colon" = -6;
"@MMK_R_degree" = -20;
"@MMK_R_dollar" = -14;
"@MMK_R_e.sc.ss01" = -27;
"@MMK_R_eight" = -21;
"@MMK_R_exclamdown" = -10;
"@MMK_R_f.sc.ss01" = -10;
"@MMK_R_five.osf" = -10;
"@MMK_R_four" = -52;
"@MMK_R_four.osf" = -18;
"@MMK_R_guillemotright" = -5;
"@MMK_R_guillemotright.case" = -45;
"@MMK_R_i" = -10;
"@MMK_R_j.sc" = 10;
"@MMK_R_j.sc.ss01" = 10;
"@MMK_R_nine" = -16;
"@MMK_R_nine.osf" = -25;
"@MMK_R_one" = 10;
"@MMK_R_one.osf" = -16;
"@MMK_R_parenleft" = -11;
"@MMK_R_periodcentered.case" = -46;
"@MMK_R_plus" = -17;
"@MMK_R_question" = -30;
"@MMK_R_questiondown" = 2;
"@MMK_R_quoteright" = 8;
"@MMK_R_s" = -20;
"@MMK_R_s.sc" = -10;
"@MMK_R_seven" = -10;
"@MMK_R_seven.osf" = -60;
"@MMK_R_slash" = 18;
"@MMK_R_t" = -22;
"@MMK_R_t.sc" = -32;
"@MMK_R_trademark" = 30;
"@MMK_R_u" = -26;
"@MMK_R_u.sc" = -24;
"@MMK_R_underscore" = 48;
"@MMK_R_uni01B7" = -53;
"@MMK_R_uni01EF" = -36;
"@MMK_R_uni02BB" = 3;
"@MMK_R_uni0409" = -11;
"@MMK_R_uni0427" = -36;
"@MMK_R_uni0431.loclSRB" = -26;
"@MMK_R_uni0434" = -15;
"@MMK_R_uni0442" = -50;
"@MMK_R_uni048D" = -35;
"@MMK_R_uni04BC" = -55;
"@MMK_R_uni04BD" = -76;
"@MMK_R_uni0510" = -15;
"@MMK_R_uni0511" = -43;
"@MMK_R_v" = -25;
"@MMK_R_v.sc" = -15;
"@MMK_R_x" = -35;
"@MMK_R_x.sc" = -25;
"@MMK_R_y.sc" = -20;
"@MMK_R_y.sc.ss01" = -35;
"@MMK_R_z" = -12;
"@MMK_R_z.sc" = -8;
"@MMK_R_zero" = -32;
"@MMK_R_zero.osf" = -27;
};
"@MMK_L_Y" = {
"@MMK_R_A" = -41;
"@MMK_R_A.ss01" = -26;
"@MMK_R_B" = -15;
"@MMK_R_J" = -10;
"@MMK_R_J.ss01" = -20;
"@MMK_R_T" = -5;
"@MMK_R_T.ss01" = 20;
"@MMK_R_U" = -10;
"@MMK_R_V" = -19;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -2;
"@MMK_R_a" = -65;
"@MMK_R_a.sc" = -67;
"@MMK_R_a.sc.ss01" = -44;
"@MMK_R_ampersand" = -50;
"@MMK_R_asterisk" = 20;
"@MMK_R_at" = -30;
"@MMK_R_b.sc" = -20;
"@MMK_R_backslash" = 30;
"@MMK_R_braceright.case" = 7;
"@MMK_R_bracketright" = 25;
"@MMK_R_c" = -60;
"@MMK_R_c.sc" = -61;
"@MMK_R_colon" = -36;
"@MMK_R_comma" = -36;
"@MMK_R_dagger" = -20;
"@MMK_R_degree" = 20;
"@MMK_R_dollar" = -15;
"@MMK_R_e.sc.ss01" = -72;
"@MMK_R_eight" = -21;
"@MMK_R_exclam" = 20;
"@MMK_R_exclamdown" = -40;
"@MMK_R_f.sc.ss01" = -61;
"@MMK_R_five" = -17;
"@MMK_R_five.osf" = -27;
"@MMK_R_four" = -92;
"@MMK_R_four.osf" = -103;
"@MMK_R_guillemotright" = -15;
"@MMK_R_guillemotright.case" = -45;
"@MMK_R_i" = -39;
"@MMK_R_i.sc.ss01" = -20;
"@MMK_R_j" = 20;
"@MMK_R_j.sc" = -41;
"@MMK_R_j.sc.ss01" = -60;
"@MMK_R_nine" = -16;
"@MMK_R_nine.osf" = -45;
"@MMK_R_one" = 32;
"@MMK_R_paragraph" = 25;
"@MMK_R_parenleft" = -15;
"@MMK_R_parenright" = 4;
"@MMK_R_periodcentered.case" = -36;
"@MMK_R_plus" = -31;
"@MMK_R_questiondown" = -83;
"@MMK_R_quoteright" = 28;
"@MMK_R_s" = -67;
"@MMK_R_s.sc" = -47;
"@MMK_R_section" = -20;
"@MMK_R_seven" = 20;
"@MMK_R_seven.osf" = -25;
"@MMK_R_slash" = -20;
"@MMK_R_t" = -20;
"@MMK_R_t.sc" = -10;
"@MMK_R_three" = 5;
"@MMK_R_three.osf" = -30;
"@MMK_R_trademark" = 50;
"@MMK_R_two" = -10;
"@MMK_R_two.osf" = -35;
"@MMK_R_u" = -35;
"@MMK_R_u.sc" = -21;
"@MMK_R_underscore" = -8;
"@MMK_R_uni01EF" = -55;
"@MMK_R_uni02BB" = 15;
"@MMK_R_uni0409" = -29;
"@MMK_R_uni0414.ss01" = -23;
"@MMK_R_uni041B.ss01" = -23;
"@MMK_R_uni0427" = -15;
"@MMK_R_uni0431.loclSRB" = -19;
"@MMK_R_uni0434" = -57;
"@MMK_R_uni0442" = -22;
"@MMK_R_uni045B" = 14;
"@MMK_R_uni048D" = -35;
"@MMK_R_uni04BC" = -24;
"@MMK_R_uni04BD" = -85;
"@MMK_R_uni0510" = -11;
"@MMK_R_uni0511" = -76;
"@MMK_R_v" = -41;
"@MMK_R_v.sc" = -8;
"@MMK_R_x" = -50;
"@MMK_R_x.sc" = -30;
"@MMK_R_y.sc" = -10;
"@MMK_R_y.sc.ss01" = -40;
"@MMK_R_z" = -32;
"@MMK_R_z.sc" = -20;
"@MMK_R_zero" = -32;
"@MMK_R_zero.osf" = -42;
};
"@MMK_L_Z" = {
"@MMK_R_T.ss01" = 10;
"@MMK_R_X" = -10;
"@MMK_R_Y.ss01" = -8;
"@MMK_R_a" = 1;
"@MMK_R_a.sc" = 5;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 10;
"@MMK_R_at" = -9;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -15;
"@MMK_R_c.sc" = -11;
"@MMK_R_colon" = 2;
"@MMK_R_comma" = 20;
"@MMK_R_e.sc.ss01" = -8;
"@MMK_R_eight" = -4;
"@MMK_R_exclamdown" = 2;
"@MMK_R_five" = -4;
"@MMK_R_five.osf" = -8;
"@MMK_R_four" = -38;
"@MMK_R_four.osf" = -20;
"@MMK_R_guillemotright.case" = -15;
"@MMK_R_i.sc.ss01" = -8;
"@MMK_R_j.sc" = 15;
"@MMK_R_j.sc.ss01" = 7;
"@MMK_R_nine.osf" = -15;
"@MMK_R_one" = 20;
"@MMK_R_one.osf" = -8;
"@MMK_R_periodcentered.case" = -8;
"@MMK_R_plus" = -15;
"@MMK_R_question" = 2;
"@MMK_R_s.sc" = -15;
"@MMK_R_seven.osf" = -20;
"@MMK_R_slash" = 8;
"@MMK_R_t" = -8;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = 30;
"@MMK_R_u" = -8;
"@MMK_R_u.sc" = -19;
"@MMK_R_underscore" = 30;
"@MMK_R_v" = -15;
"@MMK_R_v.sc" = -15;
"@MMK_R_x.sc" = 5;
"@MMK_R_y.sc" = -5;
"@MMK_R_y.sc.ss01" = -27;
"@MMK_R_z.sc" = -8;
"@MMK_R_zero" = -21;
"@MMK_R_zero.osf" = -15;
};
"@MMK_L_a" = {
"@MMK_R_asterisk" = -28;
"@MMK_R_backslash" = -68;
"@MMK_R_c" = 2;
"@MMK_R_degree" = -21;
"@MMK_R_nine" = -15;
"@MMK_R_one" = -23;
"@MMK_R_one.osf" = -10;
"@MMK_R_paragraph" = -25;
"@MMK_R_percent" = -29;
"@MMK_R_question" = -48;
"@MMK_R_quoteright" = -8;
"@MMK_R_seven" = -23;
"@MMK_R_three.osf" = -18;
"@MMK_R_trademark" = -28;
"@MMK_R_two" = -5;
"@MMK_R_uni02BB" = -13;
"@MMK_R_uni0427" = -57;
"@MMK_R_uni0431.loclSRB" = -5;
"@MMK_R_uni0442" = -9;
"@MMK_R_uni048D" = -13;
"@MMK_R_uni04BC" = -54;
"@MMK_R_uni04BD" = -4;
"@MMK_R_v" = -10;
};
"@MMK_L_a.sc.ss01" = {
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -57;
"@MMK_R_degree" = -28;
"@MMK_R_one" = -2;
"@MMK_R_one.osf" = -8;
"@MMK_R_paragraph" = -8;
"@MMK_R_question" = -40;
"@MMK_R_question.sc" = -13;
"@MMK_R_quotedblleft.sc" = -8;
"@MMK_R_quotedblright.sc" = -15;
"@MMK_R_quoteright" = -15;
"@MMK_R_seven" = -10;
"@MMK_R_seven.osf" = -8;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = -2;
"@MMK_R_uni02BB" = -13;
};
"@MMK_L_ae.sc" = {
"@MMK_R_ampersand" = -8;
"@MMK_R_ampersand.sc" = -8;
"@MMK_R_backslash" = -48;
"@MMK_R_c.sc" = -4;
"@MMK_R_colon" = -8;
"@MMK_R_comma" = 5;
"@MMK_R_eight" = -8;
"@MMK_R_exclamdown" = -8;
"@MMK_R_four" = -15;
"@MMK_R_nine" = -15;
"@MMK_R_one.osf" = 2;
"@MMK_R_question.sc" = -8;
"@MMK_R_seven" = 2;
"@MMK_R_slash" = 10;
"@MMK_R_three" = -11;
"@MMK_R_underscore" = 28;
"@MMK_R_v.sc" = -8;
"@MMK_R_x.sc" = -8;
"@MMK_R_y.sc" = -8;
};
"@MMK_L_ampersand.sc" = {
"@MMK_R_a.sc" = 10;
"@MMK_R_asterisk" = -22;
"@MMK_R_backslash" = -70;
"@MMK_R_comma" = 8;
"@MMK_R_j.sc" = 35;
"@MMK_R_j.sc.ss01" = 15;
"@MMK_R_paragraph" = -57;
"@MMK_R_percent" = -38;
"@MMK_R_question" = -20;
"@MMK_R_question.sc" = -15;
"@MMK_R_quotedbl" = -30;
"@MMK_R_quoteright" = -15;
"@MMK_R_slash" = 38;
"@MMK_R_t.sc" = -10;
"@MMK_R_underscore" = 38;
"@MMK_R_uni02BB" = -20;
"@MMK_R_v.sc" = -10;
"@MMK_R_y.sc" = -30;
};
"@MMK_L_at" = {
"@MMK_R_A" = -10;
"@MMK_R_I.ss01" = -5;
"@MMK_R_J" = -15;
"@MMK_R_J.ss01" = -30;
"@MMK_R_T" = -10;
"@MMK_R_T.ss01" = -10;
"@MMK_R_V" = -21;
"@MMK_R_X" = -25;
"@MMK_R_Y" = -30;
"@MMK_R_Y.ss01" = -5;
"@MMK_R_Z" = -9;
"@MMK_R_a.sc" = -10;
"@MMK_R_backslash" = -20;
"@MMK_R_comma" = -20;
"@MMK_R_degree" = 10;
"@MMK_R_four.osf" = -20;
"@MMK_R_j" = 80;
"@MMK_R_j.sc" = -10;
"@MMK_R_j.sc.ss01" = -20;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one" = -10;
"@MMK_R_parenright" = 15;
"@MMK_R_parenright.case" = 8;
"@MMK_R_periodcentered.case" = 8;
"@MMK_R_plus" = 8;
"@MMK_R_question" = -30;
"@MMK_R_questiondown" = -20;
"@MMK_R_quotedbl" = -19;
"@MMK_R_quoteright" = -15;
"@MMK_R_slash" = -20;
"@MMK_R_t" = 5;
"@MMK_R_three" = -11;
"@MMK_R_three.osf" = -4;
"@MMK_R_trademark" = 5;
"@MMK_R_two" = -10;
"@MMK_R_underscore" = -30;
"@MMK_R_uni01B7" = -20;
"@MMK_R_uni01EF" = -19;
"@MMK_R_uni02BB" = -15;
"@MMK_R_uni0409" = -20;
"@MMK_R_uni0427" = -15;
"@MMK_R_uni0434" = -16;
"@MMK_R_uni0442" = -15;
"@MMK_R_uni048D" = -14;
"@MMK_R_uni04BD" = -19;
"@MMK_R_uni0511" = -15;
"@MMK_R_v.sc" = -10;
"@MMK_R_x" = -12;
"@MMK_R_x.sc" = -5;
"@MMK_R_y.sc" = -10;
"@MMK_R_z.sc" = -8;
};
"@MMK_L_b" = {
"@MMK_R_A" = -7;
"@MMK_R_J.ss01" = -33;
"@MMK_R_T" = -84;
"@MMK_R_T.ss01" = -55;
"@MMK_R_U" = -23;
"@MMK_R_V" = -40;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -34;
"@MMK_R_a" = -3;
"@MMK_R_asterisk" = -18;
"@MMK_R_backslash" = -68;
"@MMK_R_comma" = -15;
"@MMK_R_degree" = -16;
"@MMK_R_nine" = -10;
"@MMK_R_one" = -28;
"@MMK_R_one.osf" = -5;
"@MMK_R_paragraph" = -24;
"@MMK_R_percent" = -28;
"@MMK_R_plus" = 10;
"@MMK_R_question" = -48;
"@MMK_R_questiondown" = -10;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quoteright" = -3;
"@MMK_R_seven" = -28;
"@MMK_R_three" = -24;
"@MMK_R_three.osf" = -20;
"@MMK_R_trademark" = -30;
"@MMK_R_two" = -10;
"@MMK_R_two.osf" = -7;
"@MMK_R_underscore" = -28;
"@MMK_R_uni01B7" = -24;
"@MMK_R_uni01EF" = -4;
"@MMK_R_uni02BB" = -13;
"@MMK_R_uni0409" = -8;
"@MMK_R_uni0414.ss01" = -8;
"@MMK_R_uni0427" = -26;
"@MMK_R_uni0434" = -3;
"@MMK_R_uni0442" = -20;
"@MMK_R_uni044A.ss01" = -33;
"@MMK_R_uni048D" = -16;
"@MMK_R_uni04BC" = -38;
"@MMK_R_uni04BD" = -19;
"@MMK_R_uni0511" = -11;
"@MMK_R_v" = -15;
"@MMK_R_x" = -19;
"@MMK_R_z" = -9;
};
"@MMK_L_b.sc" = {
"@MMK_R_backslash" = -58;
"@MMK_R_comma" = 10;
"@MMK_R_one" = -10;
"@MMK_R_one.osf" = -8;
"@MMK_R_question" = -30;
"@MMK_R_t.sc" = -10;
"@MMK_R_v.sc" = -5;
"@MMK_R_x.sc" = -10;
"@MMK_R_y.sc" = -15;
};
"@MMK_L_braceleft.case" = {
"@MMK_R_A" = 30;
"@MMK_R_J.ss01" = 15;
"@MMK_R_T" = 5;
"@MMK_R_T.ss01" = 5;
"@MMK_R_V" = 7;
"@MMK_R_X" = 2;
"@MMK_R_Y" = 7;
"@MMK_R_backslash" = 35;
"@MMK_R_exclam" = 2;
"@MMK_R_exclamdown" = 5;
"@MMK_R_florin" = 62;
"@MMK_R_four" = -20;
"@MMK_R_four.osf" = -15;
"@MMK_R_one" = 5;
"@MMK_R_parenright" = 5;
"@MMK_R_questiondown.sc" = -2;
"@MMK_R_quotedbl" = 2;
"@MMK_R_seven" = 5;
"@MMK_R_slash" = 35;
"@MMK_R_sterling" = 2;
"@MMK_R_trademark" = 25;
"@MMK_R_underscore" = 25;
"@MMK_R_yen" = 30;
};
"@MMK_L_bracketleft" = {
"@MMK_R_J.ss01" = 5;
"@MMK_R_T" = 20;
"@MMK_R_T.ss01" = 7;
"@MMK_R_V" = 22;
"@MMK_R_X" = 2;
"@MMK_R_Y" = 25;
"@MMK_R_Y.ss01" = -19;
"@MMK_R_a" = -11;
"@MMK_R_asterisk" = 2;
"@MMK_R_backslash" = 30;
"@MMK_R_exclam" = 2;
"@MMK_R_exclamdown" = 2;
"@MMK_R_florin" = 85;
"@MMK_R_four" = -12;
"@MMK_R_four.osf" = -8;
"@MMK_R_j" = 100;
"@MMK_R_j.sc.ss01" = 7;
"@MMK_R_one" = 15;
"@MMK_R_one.osf" = 7;
"@MMK_R_paragraph" = 2;
"@MMK_R_parenright" = 5;
"@MMK_R_plus" = -10;
"@MMK_R_question" = 5;
"@MMK_R_quotedbl" = 5;
"@MMK_R_seven" = 20;
"@MMK_R_slash" = 35;
"@MMK_R_t.sc" = 5;
"@MMK_R_three" = 2;
"@MMK_R_three.osf" = 2;
"@MMK_R_trademark" = 45;
"@MMK_R_two" = 2;
"@MMK_R_underscore" = 25;
"@MMK_R_uni01B7" = -11;
"@MMK_R_uni01EF" = -17;
"@MMK_R_uni0409" = -12;
"@MMK_R_uni0427" = -11;
"@MMK_R_uni0434" = -20;
"@MMK_R_uni0442" = -8;
"@MMK_R_uni044A.ss01" = -19;
"@MMK_R_uni045B" = 23;
"@MMK_R_uni0462.ss01" = -23;
"@MMK_R_uni048D" = -31;
"@MMK_R_uni04BC" = -34;
"@MMK_R_uni04BD" = -29;
"@MMK_R_uni0511" = -20;
"@MMK_R_uni20B9" = 15;
"@MMK_R_v.sc" = 7;
"@MMK_R_x.sc" = 2;
"@MMK_R_y.sc" = 10;
"@MMK_R_yen" = 10;
};
"@MMK_L_bracketright" = {
"@MMK_R_J.ss01" = -15;
"@MMK_R_T" = -19;
"@MMK_R_T.ss01" = -19;
"@MMK_R_X" = -23;
"@MMK_R_Y" = -11;
"@MMK_R_uni01B7" = -15;
"@MMK_R_uni01EF" = -11;
"@MMK_R_uni0409" = -11;
"@MMK_R_uni0427" = -17;
"@MMK_R_uni0434" = -14;
"@MMK_R_uni044A.ss01" = -19;
"@MMK_R_uni0462.ss01" = -23;
"@MMK_R_uni04BC" = -23;
"@MMK_R_uni04BD" = -21;
"@MMK_R_uni0511" = -11;
};
"@MMK_L_c.sc" = {
"@MMK_R_a.sc" = -18;
"@MMK_R_ampersand" = -20;
"@MMK_R_ampersand.sc" = -8;
"@MMK_R_asterisk" = 18;
"@MMK_R_at" = -8;
"@MMK_R_backslash" = -48;
"@MMK_R_c.sc" = -15;
"@MMK_R_degree" = 12;
"@MMK_R_eight" = -14;
"@MMK_R_exclamdown" = -10;
"@MMK_R_five" = -2;
"@MMK_R_five.osf" = -7;
"@MMK_R_four" = -25;
"@MMK_R_four.osf" = -24;
"@MMK_R_nine" = -8;
"@MMK_R_nine.osf" = -9;
"@MMK_R_one" = -8;
"@MMK_R_one.osf" = 2;
"@MMK_R_plus" = -12;
"@MMK_R_question" = -30;
"@MMK_R_question.sc" = 5;
"@MMK_R_questiondown.sc" = -8;
"@MMK_R_quotedblleft.sc" = -2;
"@MMK_R_quoteright" = 14;
"@MMK_R_s.sc" = -4;
"@MMK_R_three" = -14;
"@MMK_R_three.osf" = -16;
"@MMK_R_trademark" = -10;
"@MMK_R_two" = -8;
"@MMK_R_uni02BB" = 20;
"@MMK_R_v.sc" = -8;
"@MMK_R_x.sc" = -18;
"@MMK_R_y.sc" = -15;
"@MMK_R_zero" = -19;
"@MMK_R_zero.osf" = -16;
};
"@MMK_L_colon" = {
"@MMK_R_A" = 10;
"@MMK_R_J" = 38;
"@MMK_R_J.ss01" = 8;
"@MMK_R_T" = -10;
"@MMK_R_T.ss01" = -10;
"@MMK_R_V" = -22;
"@MMK_R_X" = -6;
"@MMK_R_Y" = -36;
"@MMK_R_backslash" = -17;
"@MMK_R_four.osf" = 2;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_j.sc" = 30;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one.osf" = 20;
"@MMK_R_question" = -10;
"@MMK_R_question.sc" = 2;
"@MMK_R_quotedbl" = 10;
"@MMK_R_seven" = 8;
"@MMK_R_seven.osf" = 20;
"@MMK_R_slash" = 45;
"@MMK_R_t" = 5;
"@MMK_R_t.sc" = 20;
"@MMK_R_two.osf" = 10;
"@MMK_R_underscore" = 10;
"@MMK_R_uni048D" = 7;
"@MMK_R_v" = 8;
"@MMK_R_x" = -10;
"@MMK_R_x.sc" = -2;
"@MMK_R_y.sc" = -6;
"@MMK_R_yen" = -40;
};
"@MMK_L_comma" = {
"@MMK_R_A" = 34;
"@MMK_R_J" = 58;
"@MMK_R_J.ss01" = 8;
"@MMK_R_T" = -31;
"@MMK_R_T.ss01" = -31;
"@MMK_R_U" = -9;
"@MMK_R_V" = -36;
"@MMK_R_Y" = -36;
"@MMK_R_Y.ss01" = -10;
"@MMK_R_Z" = 18;
"@MMK_R_a" = 10;
"@MMK_R_a.sc" = 20;
"@MMK_R_asterisk" = -32;
"@MMK_R_at" = -20;
"@MMK_R_backslash" = -98;
"@MMK_R_c" = -15;
"@MMK_R_c.sc" = -5;
"@MMK_R_currency" = -10;
"@MMK_R_degree" = -62;
"@MMK_R_dollar" = 10;
"@MMK_R_eight" = 10;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown" = 2;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_four" = -13;
"@MMK_R_four.osf" = -3;
"@MMK_R_guillemotright" = 2;
"@MMK_R_guillemotright.case" = 2;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_j" = 10;
"@MMK_R_j.sc" = 55;
"@MMK_R_one" = -12;
"@MMK_R_one.osf" = -10;
"@MMK_R_paragraph" = -122;
"@MMK_R_percent" = -62;
"@MMK_R_periodcentered.case" = -15;
"@MMK_R_plus" = -6;
"@MMK_R_question" = -52;
"@MMK_R_question.sc" = -40;
"@MMK_R_questiondown" = 10;
"@MMK_R_questiondown.sc" = -23;
"@MMK_R_quotedbl" = -55;
"@MMK_R_quotedbl.sc" = -20;
"@MMK_R_quotedblleft.sc" = -18;
"@MMK_R_quotedblright.sc" = -18;
"@MMK_R_quoteright" = -17;
"@MMK_R_seven" = -12;
"@MMK_R_seven.osf" = -38;
"@MMK_R_slash" = 103;
"@MMK_R_t" = -8;
"@MMK_R_t.sc" = -14;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = 4;
"@MMK_R_trademark" = -40;
"@MMK_R_two" = 10;
"@MMK_R_two.osf" = 8;
"@MMK_R_u" = -15;
"@MMK_R_u.sc" = -15;
"@MMK_R_underscore" = 10;
"@MMK_R_uni02BB" = -17;
"@MMK_R_uni0409" = 26;
"@MMK_R_uni0427" = -51;
"@MMK_R_uni0434" = 20;
"@MMK_R_uni0442" = -37;
"@MMK_R_uni04BC" = -65;
"@MMK_R_uni04BD" = -24;
"@MMK_R_uni20B9" = -10;
"@MMK_R_v" = -34;
"@MMK_R_v.sc" = -22;
"@MMK_R_y.sc" = -26;
"@MMK_R_yen" = -30;
"@MMK_R_zero" = -11;
"@MMK_R_zero.osf" = -14;
};
"@MMK_L_currency" = {
"@MMK_R_asterisk" = 8;
"@MMK_R_comma" = -10;
"@MMK_R_five.osf" = 8;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one.osf" = 20;
"@MMK_R_plus" = 8;
"@MMK_R_questiondown" = -8;
"@MMK_R_seven" = -15;
"@MMK_R_seven.osf" = 12;
"@MMK_R_two" = -9;
"@MMK_R_two.osf" = 6;
"@MMK_R_underscore" = -8;
};
"@MMK_L_d" = {
"@MMK_R_t" = 2;
"@MMK_R_uni04BD" = -4;
};
"@MMK_L_d.sc" = {
"@MMK_R_a.sc" = -10;
"@MMK_R_asterisk" = -2;
"@MMK_R_backslash" = -63;
"@MMK_R_comma" = -5;
"@MMK_R_degree" = -2;
"@MMK_R_four.osf" = -2;
"@MMK_R_j.sc" = -15;
"@MMK_R_nine" = -4;
"@MMK_R_one" = -12;
"@MMK_R_one.osf" = -8;
"@MMK_R_paragraph" = -2;
"@MMK_R_plus" = 18;
"@MMK_R_question" = -40;
"@MMK_R_question.sc" = -10;
"@MMK_R_questiondown.sc" = -10;
"@MMK_R_quotedblleft.sc" = 8;
"@MMK_R_quotedblright.sc" = 8;
"@MMK_R_quoteright" = -8;
"@MMK_R_seven" = -19;
"@MMK_R_seven.osf" = -8;
"@MMK_R_slash" = 60;
"@MMK_R_t.sc" = -10;
"@MMK_R_three" = -10;
"@MMK_R_three.osf" = -10;
"@MMK_R_two" = -4;
"@MMK_R_two.osf" = -7;
"@MMK_R_underscore" = -10;
"@MMK_R_uni02BB" = -8;
"@MMK_R_v.sc" = -21;
"@MMK_R_x.sc" = -25;
"@MMK_R_y.sc" = -30;
"@MMK_R_z.sc" = -9;
};
"@MMK_L_dagger" = {
"@MMK_R_J" = 10;
"@MMK_R_T.ss01" = -10;
"@MMK_R_V" = -20;
"@MMK_R_Y" = -20;
"@MMK_R_t" = 40;
"@MMK_R_v" = 20;
"@MMK_R_x" = -10;
};
"@MMK_L_dcaron" = {
"@MMK_R_b" = 45;
"@MMK_R_i" = 5;
"@MMK_R_t" = 29;
"@MMK_R_u" = 5;
"@MMK_R_v" = 5;
"@MMK_R_x" = 5;
"@MMK_R_z" = 5;
};
"@MMK_L_degree" = {
"@MMK_R_A" = -92;
"@MMK_R_J" = -10;
"@MMK_R_J.ss01" = -10;
"@MMK_R_T" = 40;
"@MMK_R_T.ss01" = 30;
"@MMK_R_V" = 28;
"@MMK_R_X" = -20;
"@MMK_R_Y" = 20;
"@MMK_R_a.sc" = -87;
"@MMK_R_a.sc.ss01" = -28;
"@MMK_R_asterisk" = 30;
"@MMK_R_at" = 10;
"@MMK_R_backslash" = 52;
"@MMK_R_c" = -16;
"@MMK_R_c.sc" = -2;
"@MMK_R_comma" = -62;
"@MMK_R_dollar" = 20;
"@MMK_R_f.sc.ss01" = -5;
"@MMK_R_five" = 8;
"@MMK_R_four" = -40;
"@MMK_R_four.osf" = -60;
"@MMK_R_nine" = 38;
"@MMK_R_nine.osf" = 5;
"@MMK_R_one" = 42;
"@MMK_R_one.osf" = 60;
"@MMK_R_percent" = 22;
"@MMK_R_question" = 20;
"@MMK_R_question.sc" = 8;
"@MMK_R_questiondown" = -65;
"@MMK_R_questiondown.sc" = -30;
"@MMK_R_quotedbl" = 20;
"@MMK_R_s" = -2;
"@MMK_R_seven" = 45;
"@MMK_R_seven.osf" = 55;
"@MMK_R_slash" = -58;
"@MMK_R_t" = 20;
"@MMK_R_t.sc" = 40;
"@MMK_R_three" = 16;
"@MMK_R_three.osf" = 32;
"@MMK_R_two" = 30;
"@MMK_R_two.osf" = 38;
"@MMK_R_v" = 38;
"@MMK_R_v.sc" = 17;
"@MMK_R_x" = 10;
"@MMK_R_x.sc" = 2;
"@MMK_R_y.sc" = 17;
"@MMK_R_z.sc" = 5;
"@MMK_R_zero" = 4;
"@MMK_R_zero.osf" = -16;
};
"@MMK_L_dollar" = {
"@MMK_R_J.ss01" = -30;
"@MMK_R_T" = -10;
"@MMK_R_T.ss01" = -9;
"@MMK_R_X" = -14;
"@MMK_R_Y" = -15;
"@MMK_R_asterisk" = -20;
"@MMK_R_backslash" = -10;
"@MMK_R_colon" = -5;
"@MMK_R_comma" = 20;
"@MMK_R_degree" = -15;
"@MMK_R_exclamdown" = -1;
"@MMK_R_four" = 10;
"@MMK_R_four.osf" = 5;
"@MMK_R_j.sc.ss01" = -25;
"@MMK_R_nine" = -10;
"@MMK_R_one" = -10;
"@MMK_R_one.osf" = -10;
"@MMK_R_plus" = 18;
"@MMK_R_question" = -20;
"@MMK_R_questiondown" = -10;
"@MMK_R_quotedbl" = -30;
"@MMK_R_quoteright" = -10;
"@MMK_R_seven" = -10;
"@MMK_R_seven.osf" = -19;
"@MMK_R_t.sc" = -12;
"@MMK_R_three" = -8;
"@MMK_R_three.osf" = -25;
"@MMK_R_two.osf" = -10;
"@MMK_R_underscore" = -20;
"@MMK_R_uni01EF" = -4;
"@MMK_R_uni02BB" = -25;
"@MMK_R_uni0409" = -19;
"@MMK_R_uni0427" = -21;
"@MMK_R_uni0431.loclSRB" = 2;
"@MMK_R_uni0442" = -11;
"@MMK_R_uni048D" = -15;
"@MMK_R_uni04BC" = -31;
"@MMK_R_uni04BD" = -20;
"@MMK_R_v" = -10;
"@MMK_R_v.sc" = -10;
"@MMK_R_x" = -10;
"@MMK_R_x.sc" = -10;
"@MMK_R_y.sc" = -20;
};
"@MMK_L_dong" = {
"@MMK_R_asterisk" = 28;
"@MMK_R_backslash" = 20;
"@MMK_R_braceright.case" = 2;
"@MMK_R_bracketright" = 7;
"@MMK_R_exclam" = 5;
"@MMK_R_four" = -8;
"@MMK_R_nine" = 15;
"@MMK_R_one" = 50;
"@MMK_R_one.osf" = 50;
"@MMK_R_parenright" = 2;
"@MMK_R_question" = 28;
"@MMK_R_quotedbl" = 10;
"@MMK_R_quoteright" = 5;
"@MMK_R_seven" = 50;
"@MMK_R_seven.osf" = 28;
"@MMK_R_three" = 10;
"@MMK_R_two" = 33;
"@MMK_R_two.osf" = 8;
};
"@MMK_L_e" = {
"@MMK_R_T" = -98;
"@MMK_R_V" = -20;
"@MMK_R_X" = -36;
"@MMK_R_Y" = -50;
"@MMK_R_a" = -15;
"@MMK_R_asterisk" = -20;
"@MMK_R_backslash" = -68;
"@MMK_R_degree" = -15;
"@MMK_R_four.osf" = -10;
"@MMK_R_nine" = -10;
"@MMK_R_one" = -28;
"@MMK_R_one.osf" = -5;
"@MMK_R_paragraph" = -20;
"@MMK_R_percent" = -8;
"@MMK_R_plus" = 10;
"@MMK_R_question" = -48;
"@MMK_R_questiondown" = -10;
"@MMK_R_quotedbl" = -25;
"@MMK_R_quoteright" = -3;
"@MMK_R_seven" = -29;
"@MMK_R_three" = -20;
"@MMK_R_three.osf" = -20;
"@MMK_R_trademark" = -30;
"@MMK_R_two" = -10;
"@MMK_R_two.osf" = -6;
"@MMK_R_underscore" = -6;
"@MMK_R_uni01EF" = -15;
"@MMK_R_uni02BB" = -13;
"@MMK_R_uni0409" = -19;
"@MMK_R_uni0427" = -23;
"@MMK_R_uni0434" = -11;
"@MMK_R_uni0442" = -23;
"@MMK_R_uni048D" = -19;
"@MMK_R_uni04BC" = -20;
"@MMK_R_uni04BD" = -10;
"@MMK_R_v" = -10;
"@MMK_R_x" = -15;
"@MMK_R_z" = -5;
};
"@MMK_L_e.sc.ss01" = {
"@MMK_R_ampersand" = -11;
"@MMK_R_ampersand.sc" = -8;
"@MMK_R_asterisk" = 10;
"@MMK_R_at" = -8;
"@MMK_R_backslash" = -63;
"@MMK_R_degree" = 2;
"@MMK_R_eight" = -10;
"@MMK_R_exclam" = -5;
"@MMK_R_exclamdown" = -8;
"@MMK_R_five" = -8;
"@MMK_R_four" = -20;
"@MMK_R_four.osf" = -8;
"@MMK_R_guillemotright" = -10;
"@MMK_R_guillemotright.sc" = -10;
"@MMK_R_nine" = -15;
"@MMK_R_nine.osf" = -2;
"@MMK_R_one.osf" = -15;
"@MMK_R_plus" = -10;
"@MMK_R_question" = -8;
"@MMK_R_questiondown.sc" = -18;
"@MMK_R_quotedblleft.sc" = -10;
"@MMK_R_quotedblright.sc" = -10;
"@MMK_R_slash" = 20;
"@MMK_R_three" = -15;
"@MMK_R_three.osf" = -15;
"@MMK_R_underscore" = 20;
"@MMK_R_zero" = -20;
"@MMK_R_zero.osf" = -11;
};
"@MMK_L_eth" = {
"@MMK_R_asterisk" = 10;
"@MMK_R_backslash" = -10;
"@MMK_R_comma" = -19;
"@MMK_R_dagger" = 20;
"@MMK_R_degree" = 20;
"@MMK_R_five.osf" = 8;
"@MMK_R_four.osf" = -10;
"@MMK_R_nine.osf" = 28;
"@MMK_R_question" = -8;
"@MMK_R_questiondown" = -8;
"@MMK_R_quoteright" = 10;
"@MMK_R_seven.osf" = 8;
"@MMK_R_three" = -8;
"@MMK_R_trademark" = 28;
"@MMK_R_underscore" = -20;
"@MMK_R_zero" = 8;
};
"@MMK_L_exclam" = {
"@MMK_R_J" = 24;
"@MMK_R_J.ss01" = -15;
"@MMK_R_T" = 20;
"@MMK_R_T.ss01" = 20;
"@MMK_R_V" = 10;
"@MMK_R_Y" = 20;
"@MMK_R_a.sc" = 10;
"@MMK_R_asterisk" = 6;
"@MMK_R_braceright.case" = 2;
"@MMK_R_bracketright" = 2;
"@MMK_R_comma" = 2;
"@MMK_R_four.osf" = 10;
"@MMK_R_j.sc" = 12;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_one" = 10;
"@MMK_R_one.osf" = 20;
"@MMK_R_quotedbl" = 2;
"@MMK_R_quoteright" = 2;
"@MMK_R_seven" = 8;
"@MMK_R_seven.osf" = 18;
"@MMK_R_t.sc" = 20;
"@MMK_R_trademark" = 5;
"@MMK_R_two.osf" = 10;
"@MMK_R_uni02BB" = 2;
"@MMK_R_v.sc" = 2;
"@MMK_R_y.sc" = 2;
"@MMK_R_yen" = 7;
};
"@MMK_L_exclam.sc" = {
"@MMK_R_asterisk" = 20;
"@MMK_R_backslash" = -23;
"@MMK_R_comma" = 2;
"@MMK_R_guillemotright.sc" = 10;
"@MMK_R_j.sc" = 5;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_paragraph" = 20;
"@MMK_R_quotedbl" = 5;
"@MMK_R_quotedbl.sc" = 2;
"@MMK_R_quotedblleft.sc" = 2;
"@MMK_R_quotedblright.sc" = 2;
"@MMK_R_quoteright" = 2;
"@MMK_R_slash" = 25;
"@MMK_R_t.sc" = 5;
"@MMK_R_uni02BB" = 2;
"@MMK_R_v.sc" = 2;
"@MMK_R_y.sc" = 5;
"@MMK_R_yen" = -20;
};
"@MMK_L_exclamdown" = {
"@MMK_R_A" = 10;
"@MMK_R_J" = 10;
"@MMK_R_J.ss01" = 20;
"@MMK_R_T" = -20;
"@MMK_R_T.ss01" = -20;
"@MMK_R_V" = -30;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -40;
"@MMK_R_a.sc" = 10;
"@MMK_R_backslash" = -55;
"@MMK_R_braceright.case" = 5;
"@MMK_R_bracketright" = 2;
"@MMK_R_comma" = 2;
"@MMK_R_florin" = 100;
"@MMK_R_four.osf" = 20;
"@MMK_R_j" = 65;
"@MMK_R_j.sc" = 20;
"@MMK_R_j.sc.ss01" = 10;
"@MMK_R_one" = -20;
"@MMK_R_one.osf" = 10;
"@MMK_R_parenright.case" = 2;
"@MMK_R_question" = -2;
"@MMK_R_quoteright" = 2;
"@MMK_R_slash" = 40;
"@MMK_R_t" = 4;
"@MMK_R_t.sc" = 5;
"@MMK_R_trademark" = -2;
"@MMK_R_underscore" = 7;
"@MMK_R_uni02BB" = 2;
"@MMK_R_v.sc" = -10;
"@MMK_R_y.sc" = -10;
"@MMK_R_yen" = -20;
};
"@MMK_L_exclamdown.sc" = {
"@MMK_R_a.sc" = 2;
"@MMK_R_asterisk" = 18;
"@MMK_R_backslash" = -23;
"@MMK_R_comma" = 2;
"@MMK_R_guillemotright.sc" = 10;
"@MMK_R_j.sc" = 5;
"@MMK_R_j.sc.ss01" = 2;
"@MMK_R_paragraph" = 15;
"@MMK_R_question.sc" = 2;
"@MMK_R_quotedbl" = 5;
"@MMK_R_quotedbl.sc" = 2;
"@MMK_R_quotedblleft.sc" = 2;
"@MMK_R_quotedblright.sc" = 2;
"@MMK_R_quoteright" = 2;
"@MMK_R_slash" = 28;
"@MMK_R_t.sc" = 2;
"@MMK_R_trademark" = -10;
"@MMK_R_underscore" = 5;
"@MMK_R_uni02BB" = 2;
"@MMK_R_yen" = -20;
};
"@MMK_L_f" = {
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -12;
"@MMK_R_asterisk" = 53;
"@MMK_R_backslash" = 64;
"@MMK_R_bracketright" = 48;
"@MMK_R_c" = -9;
"@MMK_R_colon" = 25;
"@MMK_R_comma" = -10;
"@MMK_R_dagger" = 20;
"@MMK_R_degree" = 38;
"@MMK_R_eight" = 15;
"@MMK_R_exclam" = 2;
"@MMK_R_five" = 15;
"@MMK_R_five.osf" = 11;
"@MMK_R_four" = -28;
"@MMK_R_four.osf" = -20;
"@MMK_R_guillemotright" = -2;
"@MMK_R_i" = 80;
"@MMK_R_j" = 42;
"@MMK_R_nine" = 31;
"@MMK_R_nine.osf" = 30;
"@MMK_R_one" = 53;
"@MMK_R_one.osf" = 48;
"@MMK_R_paragraph" = 45;
"@MMK_R_parenright" = 27;
"@MMK_R_percent" = 18;
"@MMK_R_plus" = -10;
"@MMK_R_question" = 28;
"@MMK_R_questiondown" = -12;
"@MMK_R_quoteright" = 78;
"@MMK_R_seven" = 45;
"@MMK_R_seven.osf" = 45;
"@MMK_R_slash" = -30;
"@MMK_R_three" = 25;
"@MMK_R_three.osf" = 10;
"@MMK_R_trademark" = 80;
"@MMK_R_two" = 18;
"@MMK_R_two.osf" = 25;
"@MMK_R_underscore" = -15;
"@MMK_R_uni02BB" = 55;
"@MMK_R_v" = 10;
"@MMK_R_zero" = 15;
};
"@MMK_L_f.sc" = {
"@MMK_R_a.sc" = -33;
"@MMK_R_ampersand" = -28;
"@MMK_R_ampersand.sc" = -18;
"@MMK_R_asterisk" = 35;
"@MMK_R_at" = -15;
"@MMK_R_backslash" = -35;
"@MMK_R_c.sc" = -9;
"@MMK_R_comma" = -10;
"@MMK_R_degree" = 15;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown" = -8;
"@MMK_R_five" = -2;
"@MMK_R_five.osf" = 2;
"@MMK_R_four" = -15;
"@MMK_R_four.osf" = -50;
"@MMK_R_j.sc" = -15;
"@MMK_R_nine" = 12;
"@MMK_R_nine.osf" = 5;
"@MMK_R_one" = 5;
"@MMK_R_one.osf" = 15;
"@MMK_R_paragraph" = 12;
"@MMK_R_plus" = 13;
"@MMK_R_question" = 20;
"@MMK_R_question.sc" = 5;
"@MMK_R_questiondown" = -33;
"@MMK_R_questiondown.sc" = -25;
"@MMK_R_quotedblleft.sc" = 10;
"@MMK_R_quotedblright.sc" = 20;
"@MMK_R_quoteright" = 28;
"@MMK_R_s.sc" = -4;
"@MMK_R_seven" = 7;
"@MMK_R_seven.osf" = 15;
"@MMK_R_slash" = -18;
"@MMK_R_t.sc" = 5;
"@MMK_R_three" = -8;
"@MMK_R_three.osf" = 2;
"@MMK_R_trademark" = 8;
"@MMK_R_two" = -13;
"@MMK_R_two.osf" = 10;
"@MMK_R_underscore" = -10;
"@MMK_R_uni02BB" = 28;
"@MMK_R_x.sc" = -18;
"@MMK_R_zero" = -10;
"@MMK_R_zero.osf" = -2;
};
"@MMK_L_five" = {
"@MMK_R_J" = -10;
"@MMK_R_J.ss01" = -42;
"@MMK_R_T" = -10;
"@MMK_R_V" = -6;
"@MMK_R_X" = -11;
"@MMK_R_Y" = -9;
"@MMK_R_a.sc" = 1;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -10;
"@MMK_R_c.sc" = 8;
"@MMK_R_degree" = -15;
"@MMK_R_five" = -5;
"@MMK_R_j.sc" = -2;
"@MMK_R_j.sc.ss01" = -12;
"@MMK_R_percent" = -10;
"@MMK_R_seven" = -14;
"@MMK_R_three" = -5;
"@MMK_R_two" = -5;
"@MMK_R_v" = -7;
"@MMK_R_x" = -7;
"@MMK_R_x.sc" = -2;
};
"@MMK_L_five.osf" = {
"@MMK_R_A" = 4;
"@MMK_R_J" = 15;
"@MMK_R_T" = -8;
"@MMK_R_V" = -12;
"@MMK_R_Y" = -15;
"@MMK_R_a" = 15;
"@MMK_R_a.sc" = 8;
"@MMK_R_at" = -6;
"@MMK_R_backslash" = -38;
"@MMK_R_comma" = 10;
"@MMK_R_dollar" = -4;
"@MMK_R_florin" = 10;
"@MMK_R_j" = 20;
"@MMK_R_j.sc" = 20;
"@MMK_R_nine.osf" = -4;
"@MMK_R_seven.osf" = -18;
"@MMK_R_slash" = 40;
"@MMK_R_three.osf" = -10;
"@MMK_R_underscore" = 8;
"@MMK_R_v.sc" = 2;
"@MMK_R_yen" = -10;
};
"@MMK_L_florin" = {
"@MMK_R_asterisk" = 52;
"@MMK_R_backslash" = 70;
"@MMK_R_braceright.case" = 7;
"@MMK_R_bracketright" = 38;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -60;
"@MMK_R_exclam" = 5;
"@MMK_R_exclam.sc" = -20;
"@MMK_R_exclamdown.sc" = -20;
"@MMK_R_five.osf" = -10;
"@MMK_R_four" = -32;
"@MMK_R_four.osf" = -60;
"@MMK_R_guillemotright.sc" = -20;
"@MMK_R_one" = 60;
"@MMK_R_one.osf" = 20;
"@MMK_R_parenright" = 12;
"@MMK_R_parenright.case" = 2;
"@MMK_R_plus" = -30;
"@MMK_R_question" = 10;
"@MMK_R_questiondown" = -60;
"@MMK_R_questiondown.sc" = -40;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quoteright" = 20;
"@MMK_R_seven" = 43;
"@MMK_R_seven.osf" = 23;
"@MMK_R_slash" = -10;
"@MMK_R_three" = 30;
"@MMK_R_two" = 15;
"@MMK_R_two.osf" = 13;
"@MMK_R_underscore" = -20;
"@MMK_R_zero.osf" = -20;
};
"@MMK_L_four" = {
"@MMK_R_J" = 2;
"@MMK_R_J.ss01" = -8;
"@MMK_R_T" = -51;
"@MMK_R_T.ss01" = -51;
"@MMK_R_V" = -52;
"@MMK_R_X" = -7;
"@MMK_R_Y" = -86;
"@MMK_R_Y.ss01" = -10;
"@MMK_R_Z" = -8;
"@MMK_R_a" = 29;
"@MMK_R_a.sc" = 20;
"@MMK_R_ampersand" = 20;
"@MMK_R_asterisk" = -20;
"@MMK_R_at" = 10;
"@MMK_R_backslash" = -50;
"@MMK_R_c" = 12;
"@MMK_R_c.sc" = 10;
"@MMK_R_colon" = 6;
"@MMK_R_comma" = 20;
"@MMK_R_currency" = 10;
"@MMK_R_degree" = -30;
"@MMK_R_dollar" = -8;
"@MMK_R_e.sc.ss01" = 10;
"@MMK_R_eight" = 10;
"@MMK_R_five" = -4;
"@MMK_R_florin" = 20;
"@MMK_R_j.sc" = -5;
"@MMK_R_j.sc.ss01" = -18;
"@MMK_R_nine" = -8;
"@MMK_R_one" = -25;
"@MMK_R_paragraph" = -15;
"@MMK_R_percent" = -30;
"@MMK_R_plus" = 10;
"@MMK_R_question" = -52;
"@MMK_R_questiondown" = 10;
"@MMK_R_quotedbl" = -30;
"@MMK_R_quoteright" = -10;
"@MMK_R_section" = 19;
"@MMK_R_seven" = -50;
"@MMK_R_slash" = 28;
"@MMK_R_sterling" = 10;
"@MMK_R_t" = 1;
"@MMK_R_t.sc" = -2;
"@MMK_R_three" = -15;
"@MMK_R_trademark" = -20;
"@MMK_R_two" = -4;
"@MMK_R_underscore" = 20;
"@MMK_R_uni02BB" = -22;
"@MMK_R_uni0510" = 20;
"@MMK_R_v" = -15;
"@MMK_R_v.sc" = 5;
"@MMK_R_x" = -12;
"@MMK_R_x.sc" = 5;
"@MMK_R_y.sc" = -5;
"@MMK_R_yen" = -10;
"@MMK_R_z.sc" = 8;
};
"@MMK_L_four.osf" = {
"@MMK_R_A" = 19;
"@MMK_R_J" = 37;
"@MMK_R_J.ss01" = 5;
"@MMK_R_T" = -33;
"@MMK_R_T.ss01" = -55;
"@MMK_R_U" = -4;
"@MMK_R_V" = -56;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -65;
"@MMK_R_Y.ss01" = -15;
"@MMK_R_Z" = 12;
"@MMK_R_a" = 28;
"@MMK_R_a.sc" = 30;
"@MMK_R_ampersand" = 10;
"@MMK_R_asterisk" = -20;
"@MMK_R_at" = -10;
"@MMK_R_backslash" = -58;
"@MMK_R_c" = 4;
"@MMK_R_c.sc" = 8;
"@MMK_R_colon" = 9;
"@MMK_R_comma" = 26;
"@MMK_R_currency" = 20;
"@MMK_R_degree" = -40;
"@MMK_R_dollar" = -6;
"@MMK_R_e.sc.ss01" = 8;
"@MMK_R_exclam" = 7;
"@MMK_R_exclamdown" = 20;
"@MMK_R_five.osf" = -4;
"@MMK_R_florin" = 60;
"@MMK_R_four.osf" = 2;
"@MMK_R_guillemotright" = 10;
"@MMK_R_j" = 15;
"@MMK_R_j.sc" = 42;
"@MMK_R_j.sc.ss01" = 7;
"@MMK_R_nine.osf" = -8;
"@MMK_R_one.osf" = -15;
"@MMK_R_paragraph" = -26;
"@MMK_R_percent" = -30;
"@MMK_R_plus" = 2;
"@MMK_R_question" = -55;
"@MMK_R_quotedbl" = -38;
"@MMK_R_quoteright" = -30;
"@MMK_R_s" = 10;
"@MMK_R_seven.osf" = -53;
"@MMK_R_slash" = 40;
"@MMK_R_sterling" = 10;
"@MMK_R_t.sc" = -12;
"@MMK_R_three.osf" = -11;
"@MMK_R_trademark" = -28;
"@MMK_R_two.osf" = 5;
"@MMK_R_underscore" = 17;
"@MMK_R_uni02BB" = -22;
"@MMK_R_v" = -20;
"@MMK_R_v.sc" = 4;
"@MMK_R_x" = 10;
"@MMK_R_x.sc" = 20;
"@MMK_R_y.sc" = -5;
"@MMK_R_yen" = -20;
"@MMK_R_z" = 10;
"@MMK_R_z.sc" = 15;
"@MMK_R_zero" = -4;
};
"@MMK_L_g" = {
"@MMK_R_T" = -92;
"@MMK_R_U" = -15;
"@MMK_R_V" = -5;
"@MMK_R_X" = -44;
"@MMK_R_Y" = -53;
"@MMK_R_backslash" = -68;
"@MMK_R_dollar" = -19;
"@MMK_R_one" = -8;
"@MMK_R_one.osf" = -8;
"@MMK_R_question" = 10;
"@MMK_R_uni01B7" = -23;
"@MMK_R_uni01EF" = -11;
"@MMK_R_uni0427" = -45;
"@MMK_R_uni048D" = -8;
"@MMK_R_uni04BC" = -24;
"@MMK_R_uni0511" = -11;
};
"@MMK_L_g.sc" = {
"@MMK_R_backslash" = -48;
"@MMK_R_question" = -30;
"@MMK_R_seven" = -8;
};
"@MMK_L_guillemotleft" = {
"@MMK_R_A" = 15;
"@MMK_R_J" = 30;
"@MMK_R_T" = -12;
"@MMK_R_T.ss01" = -12;
"@MMK_R_V" = -12;
"@MMK_R_X" = -5;
"@MMK_R_Y" = -15;
"@MMK_R_a.sc" = 8;
"@MMK_R_asterisk" = 12;
"@MMK_R_backslash" = -58;
"@MMK_R_comma" = 2;
"@MMK_R_five" = 8;
"@MMK_R_four" = 8;
"@MMK_R_j.sc" = 30;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_one" = -2;
"@MMK_R_one.osf" = 2;
"@MMK_R_plus" = -10;
"@MMK_R_question" = -10;
"@MMK_R_question.sc" = 5;
"@MMK_R_questiondown" = 8;
"@MMK_R_slash" = 11;
"@MMK_R_t" = 2;
"@MMK_R_t.sc" = 12;
"@MMK_R_three.osf" = -10;
"@MMK_R_two.osf" = 10;
"@MMK_R_underscore" = 10;
"@MMK_R_v.sc" = -10;
"@MMK_R_x.sc" = -10;
"@MMK_R_y.sc" = -15;
};
"@MMK_L_guillemotleft.case" = {
"@MMK_R_A" = -14;
"@MMK_R_J.ss01" = -24;
"@MMK_R_T" = -15;
"@MMK_R_T.ss01" = -18;
"@MMK_R_V" = -34;
"@MMK_R_X" = -45;
"@MMK_R_Y" = -45;
"@MMK_R_Z" = -8;
"@MMK_R_asterisk" = 18;
"@MMK_R_backslash" = -10;
"@MMK_R_comma" = 2;
"@MMK_R_florin" = -15;
"@MMK_R_periodcentered.case" = -8;
"@MMK_R_plus" = -10;
"@MMK_R_trademark" = -10;
"@MMK_R_underscore" = 8;
"@MMK_R_yen" = -15;
};
"@MMK_L_guillemotleft.sc" = {
"@MMK_R_a.sc" = -10;
"@MMK_R_asterisk" = 18;
"@MMK_R_backslash" = -23;
"@MMK_R_colon" = 2;
"@MMK_R_comma" = 2;
"@MMK_R_exclam.sc" = 10;
"@MMK_R_exclamdown.sc" = 10;
"@MMK_R_j.sc" = 10;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_plus" = -10;
"@MMK_R_question" = -38;
"@MMK_R_question.sc" = 10;
"@MMK_R_quotedbl" = 2;
"@MMK_R_quotedbl.sc" = 2;
"@MMK_R_quotedblleft.sc" = 2;
"@MMK_R_quotedblright.sc" = 2;
"@MMK_R_quoteright" = 2;
"@MMK_R_slash" = 23;
"@MMK_R_t.sc" = 10;
"@MMK_R_trademark" = -10;
"@MMK_R_uni02BB" = 2;
"@MMK_R_v.sc" = -10;
"@MMK_R_x.sc" = -20;
"@MMK_R_y.sc" = -20;
"@MMK_R_yen" = -20;
};
"@MMK_L_h.sc" = {
"@MMK_R_backslash" = -53;
};
"@MMK_L_i.sc.ss01" = {
"@MMK_R_backslash" = -53;
"@MMK_R_four" = -8;
};
"@MMK_L_iacute_j.loclNLD.sc" = {
"@MMK_R_a.sc" = -15;
"@MMK_R_backslash" = -53;
"@MMK_R_comma" = -15;
"@MMK_R_four.osf" = -10;
"@MMK_R_questiondown" = -10;
"@MMK_R_slash" = -10;
"@MMK_R_three" = -8;
"@MMK_R_three.osf" = -15;
"@MMK_R_two" = -8;
"@MMK_R_underscore" = -10;
"@MMK_R_x.sc" = -10;
"@MMK_R_y.sc" = -10;
};
"@MMK_L_k" = {
"@MMK_R_T" = -31;
"@MMK_R_V" = -11;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -20;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -5;
"@MMK_R_backslash" = -40;
"@MMK_R_bracketleft" = -11;
"@MMK_R_c" = -21;
"@MMK_R_comma" = 10;
"@MMK_R_eight" = -7;
"@MMK_R_five.osf" = 5;
"@MMK_R_four" = -30;
"@MMK_R_i" = -8;
"@MMK_R_nine" = 10;
"@MMK_R_nine.osf" = -10;
"@MMK_R_one" = 5;
"@MMK_R_one.osf" = 20;
"@MMK_R_plus" = -22;
"@MMK_R_question" = 5;
"@MMK_R_s" = -16;
"@MMK_R_seven" = -5;
"@MMK_R_seven.osf" = 8;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = 12;
"@MMK_R_two" = 15;
"@MMK_R_two.osf" = 18;
"@MMK_R_u" = -10;
"@MMK_R_underscore" = 65;
"@MMK_R_uni01EF" = -23;
"@MMK_R_uni02BB" = 2;
"@MMK_R_uni0409" = 2;
"@MMK_R_uni0427" = -19;
"@MMK_R_uni0431.loclSRB" = -21;
"@MMK_R_uni0434" = 5;
"@MMK_R_uni048D" = -23;
"@MMK_R_uni04BC" = -15;
"@MMK_R_uni04BD" = -40;
"@MMK_R_uni0511" = -29;
"@MMK_R_v" = -27;
"@MMK_R_x" = -20;
"@MMK_R_z" = -11;
"@MMK_R_zero" = -10;
"@MMK_R_zero.osf" = -12;
};
"@MMK_L_k.sc" = {
"@MMK_R_a.sc" = -27;
"@MMK_R_ampersand" = -20;
"@MMK_R_ampersand.sc" = -20;
"@MMK_R_asterisk" = 12;
"@MMK_R_at" = -10;
"@MMK_R_backslash" = -28;
"@MMK_R_bracketright" = 5;
"@MMK_R_c.sc" = -25;
"@MMK_R_colon" = -9;
"@MMK_R_comma" = 8;
"@MMK_R_degree" = 10;
"@MMK_R_eight" = -2;
"@MMK_R_four" = -35;
"@MMK_R_four.osf" = -15;
"@MMK_R_guillemotright.sc" = -10;
"@MMK_R_nine.osf" = -12;
"@MMK_R_one" = 5;
"@MMK_R_one.osf" = 5;
"@MMK_R_paragraph" = 5;
"@MMK_R_parenright" = -10;
"@MMK_R_plus" = -32;
"@MMK_R_question" = 7;
"@MMK_R_question.sc" = -20;
"@MMK_R_questiondown" = -8;
"@MMK_R_questiondown.sc" = -20;
"@MMK_R_quotedblleft.sc" = -20;
"@MMK_R_quotedblright.sc" = -10;
"@MMK_R_quoteright" = 18;
"@MMK_R_s.sc" = -15;
"@MMK_R_seven" = 2;
"@MMK_R_seven.osf" = 2;
"@MMK_R_t.sc" = -40;
"@MMK_R_three" = -5;
"@MMK_R_three.osf" = 2;
"@MMK_R_trademark" = 7;
"@MMK_R_two" = 5;
"@MMK_R_u.sc" = -10;
"@MMK_R_underscore" = 50;
"@MMK_R_v.sc" = -40;
"@MMK_R_x.sc" = -37;
"@MMK_R_y.sc" = -47;
"@MMK_R_zero" = -20;
"@MMK_R_zero.osf" = -19;
};
"@MMK_L_l.sc" = {
"@MMK_R_a.sc" = 2;
"@MMK_R_asterisk" = -42;
"@MMK_R_backslash" = -88;
"@MMK_R_c.sc" = -14;
"@MMK_R_colon" = 20;
"@MMK_R_comma" = 20;
"@MMK_R_degree" = -35;
"@MMK_R_eight" = -5;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_five" = 2;
"@MMK_R_five.osf" = 1;
"@MMK_R_four" = -30;
"@MMK_R_four.osf" = -10;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_nine" = -8;
"@MMK_R_nine.osf" = -9;
"@MMK_R_one" = -20;
"@MMK_R_one.osf" = -20;
"@MMK_R_paragraph" = -45;
"@MMK_R_plus" = -10;
"@MMK_R_question" = -65;
"@MMK_R_question.sc" = -58;
"@MMK_R_questiondown" = 5;
"@MMK_R_questiondown.sc" = -8;
"@MMK_R_quotedblleft.sc" = -21;
"@MMK_R_quotedblright.sc" = -26;
"@MMK_R_quoteright" = -42;
"@MMK_R_s.sc" = -8;
"@MMK_R_seven" = -40;
"@MMK_R_seven.osf" = -25;
"@MMK_R_slash" = 28;
"@MMK_R_t.sc" = -65;
"@MMK_R_three" = 5;
"@MMK_R_trademark" = -27;
"@MMK_R_two" = 10;
"@MMK_R_two.osf" = 10;
"@MMK_R_u.sc" = -13;
"@MMK_R_underscore" = 55;
"@MMK_R_uni02BB" = -25;
"@MMK_R_v.sc" = -53;
"@MMK_R_x.sc" = -10;
"@MMK_R_y.sc" = -74;
"@MMK_R_zero" = -18;
"@MMK_R_zero.osf" = -8;
};
"@MMK_L_l.ss01" = {
"@MMK_R_asterisk" = -25;
"@MMK_R_backslash" = -42;
"@MMK_R_c" = -10;
"@MMK_R_colon" = 18;
"@MMK_R_comma" = 28;
"@MMK_R_degree" = -20;
"@MMK_R_eight" = 8;
"@MMK_R_five" = 4;
"@MMK_R_five.osf" = 18;
"@MMK_R_four.osf" = 20;
"@MMK_R_one" = -20;
"@MMK_R_one.osf" = -16;
"@MMK_R_paragraph" = -5;
"@MMK_R_question" = -20;
"@MMK_R_questiondown" = 8;
"@MMK_R_quoteright" = -10;
"@MMK_R_seven" = -15;
"@MMK_R_seven.osf" = -5;
"@MMK_R_slash" = 30;
"@MMK_R_t" = -5;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = 8;
"@MMK_R_two" = 18;
"@MMK_R_two.osf" = 15;
"@MMK_R_underscore" = 68;
"@MMK_R_uni02BB" = -10;
"@MMK_R_v" = -25;
"@MMK_R_x" = 8;
"@MMK_R_zero" = 5;
};
"@MMK_L_m.sc.ss01" = {
"@MMK_R_asterisk" = -8;
"@MMK_R_backslash" = -53;
"@MMK_R_degree" = -20;
"@MMK_R_one" = -2;
"@MMK_R_paragraph" = -10;
"@MMK_R_question" = -25;
"@MMK_R_question.sc" = -8;
"@MMK_R_quotedblleft.sc" = -8;
"@MMK_R_quotedblright.sc" = -11;
"@MMK_R_quoteright" = -8;
"@MMK_R_seven" = -8;
"@MMK_R_trademark" = -2;
"@MMK_R_uni02BB" = -8;
};
"@MMK_L_nine.osf" = {
"@MMK_R_A" = 8;
"@MMK_R_J" = 1;
"@MMK_R_J.ss01" = -20;
"@MMK_R_T" = -20;
"@MMK_R_T.ss01" = -16;
"@MMK_R_V" = -22;
"@MMK_R_X" = -6;
"@MMK_R_Y" = -30;
"@MMK_R_Y.ss01" = -10;
"@MMK_R_a" = 8;
"@MMK_R_a.sc" = 5;
"@MMK_R_backslash" = -38;
"@MMK_R_comma" = 10;
"@MMK_R_currency" = 8;
"@MMK_R_degree" = -20;
"@MMK_R_j.sc.ss01" = -5;
"@MMK_R_paragraph" = -2;
"@MMK_R_percent" = -10;
"@MMK_R_plus" = 10;
"@MMK_R_question" = -30;
"@MMK_R_slash" = 20;
"@MMK_R_t" = 10;
"@MMK_R_uni02BB" = -8;
"@MMK_R_v.sc" = -5;
"@MMK_R_y.sc" = -5;
"@MMK_R_yen" = -4;
};
"@MMK_L_ohorn" = {
"@MMK_R_asterisk" = 40;
"@MMK_R_bracketright" = 7;
"@MMK_R_comma" = -15;
"@MMK_R_degree" = 30;
"@MMK_R_nine" = 2;
"@MMK_R_one" = 5;
"@MMK_R_one.osf" = 7;
"@MMK_R_paragraph" = 30;
"@MMK_R_plus" = 10;
"@MMK_R_question" = 40;
"@MMK_R_questiondown" = -8;
"@MMK_R_quoteright" = 30;
"@MMK_R_seven" = 20;
"@MMK_R_seven.osf" = 5;
"@MMK_R_t" = 2;
"@MMK_R_three" = -19;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = 30;
"@MMK_R_two" = -3;
"@MMK_R_two.osf" = -4;
"@MMK_R_underscore" = -28;
"@MMK_R_uni02BB" = 20;
"@MMK_R_v" = -11;
"@MMK_R_x" = -15;
"@MMK_R_z" = -9;
};
"@MMK_L_one" = {
"@MMK_R_j.sc.ss01" = -2;
};
"@MMK_L_one.osf" = {
"@MMK_R_J.ss01" = -15;
"@MMK_R_T" = -15;
"@MMK_R_V" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_backslash" = -8;
};
"@MMK_L_p.sc" = {
"@MMK_R_a.sc" = -45;
"@MMK_R_ampersand" = -20;
"@MMK_R_ampersand.sc" = -10;
"@MMK_R_backslash" = -53;
"@MMK_R_comma" = -30;
"@MMK_R_five" = -2;
"@MMK_R_five.osf" = -2;
"@MMK_R_four" = -2;
"@MMK_R_four.osf" = -42;
"@MMK_R_guillemotright" = -10;
"@MMK_R_j.sc" = -34;
"@MMK_R_nine.osf" = 2;
"@MMK_R_one" = -2;
"@MMK_R_one.osf" = -8;
"@MMK_R_question" = -40;
"@MMK_R_questiondown" = -48;
"@MMK_R_questiondown.sc" = -25;
"@MMK_R_seven" = -23;
"@MMK_R_seven.osf" = 2;
"@MMK_R_slash" = -30;
"@MMK_R_three" = -29;
"@MMK_R_three.osf" = -20;
"@MMK_R_two" = -22;
"@MMK_R_underscore" = -10;
"@MMK_R_uni02BB" = 2;
"@MMK_R_x.sc" = -25;
"@MMK_R_y.sc" = -10;
"@MMK_R_z.sc" = -18;
};
"@MMK_L_parenleft" = {
"@MMK_R_J.ss01" = -11;
"@MMK_R_T" = -15;
"@MMK_R_backslash" = 35;
"@MMK_R_braceright.case" = 5;
"@MMK_R_bracketright" = 5;
"@MMK_R_florin" = 68;
"@MMK_R_four" = -20;
"@MMK_R_four.osf" = -18;
"@MMK_R_j" = 82;
"@MMK_R_one" = 10;
"@MMK_R_slash" = 32;
"@MMK_R_trademark" = 25;
"@MMK_R_underscore" = 2;
"@MMK_R_uni01B7" = -6;
"@MMK_R_uni01EF" = -22;
"@MMK_R_uni0409" = -1;
"@MMK_R_uni0427" = -11;
"@MMK_R_uni0434" = -12;
"@MMK_R_uni0442" = -26;
"@MMK_R_uni0462.ss01" = -15;
"@MMK_R_uni048D" = -28;
"@MMK_R_uni04BC" = -22;
"@MMK_R_uni04BD" = -41;
"@MMK_R_uni0511" = -23;
"@MMK_R_yen" = 10;
};
"@MMK_L_parenleft.case" = {
"@MMK_R_backslash" = 40;
"@MMK_R_exclamdown" = 2;
"@MMK_R_florin" = 52;
"@MMK_R_four" = -18;
"@MMK_R_four.osf" = -11;
"@MMK_R_slash" = 35;
"@MMK_R_underscore" = 10;
};
"@MMK_L_parenright" = {
"@MMK_R_T" = -38;
"@MMK_R_uni0427" = -34;
};
"@MMK_L_percent" = {
"@MMK_R_a" = 15;
"@MMK_R_ampersand.sc" = 27;
"@MMK_R_asterisk" = -50;
"@MMK_R_backslash" = -38;
"@MMK_R_c" = 22;
"@MMK_R_comma" = 30;
"@MMK_R_degree" = -28;
"@MMK_R_eight" = 20;
"@MMK_R_five" = 20;
"@MMK_R_four" = 34;
"@MMK_R_four.osf" = 30;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one" = -20;
"@MMK_R_one.osf" = -20;
"@MMK_R_parenright" = -20;
"@MMK_R_percent" = -119;
"@MMK_R_plus" = 20;
"@MMK_R_question" = -58;
"@MMK_R_question.sc" = -30;
"@MMK_R_quotedbl" = -28;
"@MMK_R_quoteright" = -20;
"@MMK_R_seven" = -18;
"@MMK_R_seven.osf" = -8;
"@MMK_R_slash" = 1;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = -11;
"@MMK_R_two" = 10;
"@MMK_R_two.osf" = 8;
"@MMK_R_uni02BB" = -20;
"@MMK_R_zero.osf" = 10;
};
"@MMK_L_periodcentered.case" = {
"@MMK_R_A" = -36;
"@MMK_R_I.ss01" = -5;
"@MMK_R_J" = -33;
"@MMK_R_J.ss01" = -37;
"@MMK_R_T" = -16;
"@MMK_R_T.ss01" = -36;
"@MMK_R_V" = -42;
"@MMK_R_X" = -46;
"@MMK_R_Y" = -36;
"@MMK_R_at" = 8;
"@MMK_R_backslash" = -45;
"@MMK_R_comma" = -15;
"@MMK_R_five.osf" = 8;
"@MMK_R_four.osf" = -10;
"@MMK_R_guillemotright.case" = -8;
"@MMK_R_one" = -15;
"@MMK_R_question" = -40;
"@MMK_R_questiondown" = -30;
"@MMK_R_questiondown.sc" = -15;
"@MMK_R_seven" = -4;
"@MMK_R_three" = -25;
"@MMK_R_two" = -30;
"@MMK_R_zero.osf" = 8;
};
"@MMK_L_plus" = {
"@MMK_R_A" = -15;
"@MMK_R_J" = -20;
"@MMK_R_J.ss01" = -35;
"@MMK_R_T" = -32;
"@MMK_R_T.ss01" = -32;
"@MMK_R_V" = -22;
"@MMK_R_X" = -17;
"@MMK_R_Y" = -31;
"@MMK_R_Y.ss01" = -8;
"@MMK_R_a.sc" = -15;
"@MMK_R_asterisk" = -10;
"@MMK_R_at" = 8;
"@MMK_R_backslash" = -65;
"@MMK_R_c" = 10;
"@MMK_R_c.sc" = 18;
"@MMK_R_comma" = -6;
"@MMK_R_currency" = 8;
"@MMK_R_dollar" = -18;
"@MMK_R_four" = 8;
"@MMK_R_guillemotright" = -10;
"@MMK_R_guillemotright.case" = -10;
"@MMK_R_guillemotright.sc" = -10;
"@MMK_R_j.sc" = -20;
"@MMK_R_j.sc.ss01" = -30;
"@MMK_R_nine.osf" = 12;
"@MMK_R_one" = -17;
"@MMK_R_paragraph" = -88;
"@MMK_R_percent" = -38;
"@MMK_R_plus" = 2;
"@MMK_R_question" = -40;
"@MMK_R_question.sc" = -36;
"@MMK_R_questiondown.sc" = -8;
"@MMK_R_quotedbl.sc" = 2;
"@MMK_R_quotedblleft.sc" = 2;
"@MMK_R_quotedblright.sc" = 2;
"@MMK_R_section" = 10;
"@MMK_R_seven" = -10;
"@MMK_R_seven.osf" = 5;
"@MMK_R_t" = 10;
"@MMK_R_t.sc" = -2;
"@MMK_R_three" = -20;
"@MMK_R_three.osf" = -10;
"@MMK_R_trademark" = -20;
"@MMK_R_two" = -12;
"@MMK_R_two.osf" = -2;
"@MMK_R_uni01B7" = -15;
"@MMK_R_uni01EF" = -19;
"@MMK_R_uni0409" = -20;
"@MMK_R_uni0414.ss01" = -15;
"@MMK_R_uni0427" = -24;
"@MMK_R_uni0434" = -11;
"@MMK_R_uni0442" = -23;
"@MMK_R_uni044A.ss01" = -38;
"@MMK_R_uni0462.ss01" = -27;
"@MMK_R_uni048D" = -19;
"@MMK_R_uni04BC" = -22;
"@MMK_R_uni04BD" = -6;
"@MMK_R_v" = -12;
"@MMK_R_v.sc" = -17;
"@MMK_R_x" = -22;
"@MMK_R_x.sc" = -17;
"@MMK_R_y.sc" = -17;
"@MMK_R_yen" = -22;
"@MMK_R_z" = -14;
"@MMK_R_zero" = 8;
"@MMK_R_zero.osf" = 8;
};
"@MMK_L_question" = {
"@MMK_R_A" = -42;
"@MMK_R_A.ss01" = -10;
"@MMK_R_J" = -27;
"@MMK_R_J.ss01" = -45;
"@MMK_R_V" = -12;
"@MMK_R_X" = -17;
"@MMK_R_Y" = -12;
"@MMK_R_Z" = -10;
"@MMK_R_a.sc" = -20;
"@MMK_R_a.sc.ss01" = -10;
"@MMK_R_ampersand" = -23;
"@MMK_R_asterisk" = 15;
"@MMK_R_at" = -2;
"@MMK_R_bracketleft" = -19;
"@MMK_R_c" = -10;
"@MMK_R_comma" = -50;
"@MMK_R_degree" = 10;
"@MMK_R_eight" = -10;
"@MMK_R_exclam" = -8;
"@MMK_R_exclamdown" = -8;
"@MMK_R_four" = -50;
"@MMK_R_four.osf" = -50;
"@MMK_R_guillemotright" = 10;
"@MMK_R_guillemotright.case" = 2;
"@MMK_R_j.sc" = -2;
"@MMK_R_nine" = 10;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one.osf" = 20;
"@MMK_R_question" = -32;
"@MMK_R_questiondown" = -110;
"@MMK_R_quoteright" = 22;
"@MMK_R_s.sc" = 8;
"@MMK_R_seven.osf" = 10;
"@MMK_R_slash" = -30;
"@MMK_R_t.sc" = 30;
"@MMK_R_three" = -15;
"@MMK_R_underscore" = -21;
"@MMK_R_uni02BB" = 22;
"@MMK_R_v" = 10;
"@MMK_R_v.sc" = 48;
"@MMK_R_x.sc" = 20;
"@MMK_R_y.sc" = 48;
"@MMK_R_yen" = -15;
"@MMK_R_zero.osf" = -2;
};
"@MMK_L_question.sc" = {
"@MMK_R_a.sc" = -50;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_ampersand" = -30;
"@MMK_R_ampersand.sc" = -8;
"@MMK_R_backslash" = -28;
"@MMK_R_braceright.case" = -2;
"@MMK_R_c.sc" = -10;
"@MMK_R_comma" = -40;
"@MMK_R_degree" = -8;
"@MMK_R_f.sc.ss01" = -8;
"@MMK_R_guillemotright.sc" = 23;
"@MMK_R_j.sc" = -10;
"@MMK_R_j.sc.ss01" = -10;
"@MMK_R_plus" = -12;
"@MMK_R_question.sc" = -32;
"@MMK_R_questiondown.sc" = -95;
"@MMK_R_quotedbl.sc" = 10;
"@MMK_R_quoteright" = 15;
"@MMK_R_slash" = -30;
"@MMK_R_t.sc" = 5;
"@MMK_R_underscore" = -18;
"@MMK_R_uni02BB" = 15;
"@MMK_R_v.sc" = 5;
"@MMK_R_x.sc" = -20;
"@MMK_R_yen" = -20;
};
"@MMK_L_questiondown" = {
"@MMK_R_A" = 10;
"@MMK_R_J.ss01" = 60;
"@MMK_R_T" = -57;
"@MMK_R_T.ss01" = -57;
"@MMK_R_U" = -35;
"@MMK_R_V" = -67;
"@MMK_R_X" = 5;
"@MMK_R_Y" = -77;
"@MMK_R_Y.ss01" = -10;
"@MMK_R_a" = -18;
"@MMK_R_a.sc" = 10;
"@MMK_R_ampersand" = -18;
"@MMK_R_asterisk" = -82;
"@MMK_R_at" = -52;
"@MMK_R_backslash" = -98;
"@MMK_R_braceright.case" = 5;
"@MMK_R_bracketright" = 5;
"@MMK_R_c" = -32;
"@MMK_R_c.sc" = -40;
"@MMK_R_colon" = -2;
"@MMK_R_comma" = 2;
"@MMK_R_currency" = -23;
"@MMK_R_degree" = -55;
"@MMK_R_eight" = -42;
"@MMK_R_exclam" = -2;
"@MMK_R_five.osf" = 2;
"@MMK_R_florin" = 90;
"@MMK_R_four" = -42;
"@MMK_R_guillemotright" = -10;
"@MMK_R_guillemotright.case" = -12;
"@MMK_R_guillemotright.sc" = -38;
"@MMK_R_i" = -15;
"@MMK_R_j" = 70;
"@MMK_R_j.sc" = 18;
"@MMK_R_j.sc.ss01" = 60;
"@MMK_R_one" = -42;
"@MMK_R_one.osf" = -30;
"@MMK_R_paragraph" = -87;
"@MMK_R_percent" = -60;
"@MMK_R_periodcentered.case" = -10;
"@MMK_R_plus" = -40;
"@MMK_R_question" = -132;
"@MMK_R_questiondown" = -30;
"@MMK_R_quotedbl" = -30;
"@MMK_R_quoteright" = -20;
"@MMK_R_s" = -8;
"@MMK_R_section" = 2;
"@MMK_R_seven" = -42;
"@MMK_R_seven.osf" = -22;
"@MMK_R_slash" = 40;
"@MMK_R_sterling" = 5;
"@MMK_R_t" = -15;
"@MMK_R_t.sc" = -42;
"@MMK_R_three.osf" = 20;
"@MMK_R_trademark" = -35;
"@MMK_R_u" = -50;
"@MMK_R_u.sc" = -30;
"@MMK_R_underscore" = 50;
"@MMK_R_uni02BB" = -22;
"@MMK_R_uni0510" = -22;
"@MMK_R_uni20B9" = -20;
"@MMK_R_v" = -45;
"@MMK_R_v.sc" = -40;
"@MMK_R_x" = 5;
"@MMK_R_x.sc" = 5;
"@MMK_R_y.sc" = -55;
"@MMK_R_yen" = -50;
"@MMK_R_zero" = -45;
"@MMK_R_zero.osf" = -32;
};
"@MMK_L_questiondown.sc" = {
"@MMK_R_a.sc" = 30;
"@MMK_R_ampersand" = 10;
"@MMK_R_asterisk" = -70;
"@MMK_R_backslash" = -58;
"@MMK_R_c.sc" = -8;
"@MMK_R_colon" = 2;
"@MMK_R_comma" = 45;
"@MMK_R_degree" = -30;
"@MMK_R_e.sc.ss01" = 10;
"@MMK_R_guillemotright.sc" = 10;
"@MMK_R_j.sc" = 50;
"@MMK_R_paragraph" = -40;
"@MMK_R_percent" = -60;
"@MMK_R_periodcentered.case" = -15;
"@MMK_R_plus" = -33;
"@MMK_R_question.sc" = -95;
"@MMK_R_quotedbl" = -40;
"@MMK_R_quotedbl.sc" = -28;
"@MMK_R_quotedblleft.sc" = -25;
"@MMK_R_quotedblright.sc" = -25;
"@MMK_R_quoteright" = -30;
"@MMK_R_s.sc" = 10;
"@MMK_R_slash" = 20;
"@MMK_R_t.sc" = -30;
"@MMK_R_trademark" = -50;
"@MMK_R_underscore" = 35;
"@MMK_R_uni02BB" = -30;
"@MMK_R_v.sc" = -40;
"@MMK_R_y.sc" = -50;
"@MMK_R_yen" = -20;
"@MMK_R_z.sc" = 10;
};
"@MMK_L_quotedbl" = {
"@MMK_R_A" = -44;
"@MMK_R_T" = 5;
"@MMK_R_T.ss01" = 15;
"@MMK_R_ampersand" = -25;
"@MMK_R_asterisk" = 20;
"@MMK_R_backslash" = 60;
"@MMK_R_braceright.case" = 2;
"@MMK_R_bracketright" = 5;
"@MMK_R_colon" = 10;
"@MMK_R_comma" = -55;
"@MMK_R_currency" = -20;
"@MMK_R_degree" = 20;
"@MMK_R_eight" = 4;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = 5;
"@MMK_R_exclamdown.sc" = 5;
"@MMK_R_five" = 8;
"@MMK_R_five.osf" = -2;
"@MMK_R_florin" = -10;
"@MMK_R_four" = -40;
"@MMK_R_four.osf" = -18;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_nine" = 45;
"@MMK_R_nine.osf" = 25;
"@MMK_R_one" = 48;
"@MMK_R_one.osf" = 78;
"@MMK_R_paragraph" = 50;
"@MMK_R_percent" = 28;
"@MMK_R_question" = 35;
"@MMK_R_question.sc" = 45;
"@MMK_R_questiondown" = -49;
"@MMK_R_questiondown.sc" = -38;
"@MMK_R_quotedbl" = 45;
"@MMK_R_seven" = 53;
"@MMK_R_seven.osf" = 40;
"@MMK_R_slash" = -60;
"@MMK_R_three" = 18;
"@MMK_R_three.osf" = 30;
"@MMK_R_trademark" = 38;
"@MMK_R_two" = 25;
"@MMK_R_two.osf" = 55;
"@MMK_R_underscore" = -8;
"@MMK_R_uni0409" = -41;
"@MMK_R_uni0414.ss01" = -15;
"@MMK_R_uni045B" = 30;
"@MMK_R_uni20B9" = 30;
"@MMK_R_yen" = 20;
"@MMK_R_zero" = 8;
"@MMK_R_zero.osf" = -6;
};
"@MMK_L_quotedbl.sc" = {
"@MMK_R_asterisk" = 20;
"@MMK_R_backslash" = 30;
"@MMK_R_comma" = -20;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_paragraph" = 30;
"@MMK_R_plus" = 2;
"@MMK_R_question.sc" = 30;
"@MMK_R_questiondown.sc" = -35;
"@MMK_R_quotedbl.sc" = 30;
"@MMK_R_slash" = -20;
};
"@MMK_L_quotedblleft.sc" = {
"@MMK_R_a.sc" = -32;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_asterisk" = 18;
"@MMK_R_backslash" = 28;
"@MMK_R_c.sc" = 8;
"@MMK_R_comma" = -20;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_paragraph" = 30;
"@MMK_R_plus" = 2;
"@MMK_R_question.sc" = 23;
"@MMK_R_questiondown.sc" = -33;
"@MMK_R_s.sc" = 10;
"@MMK_R_slash" = -8;
"@MMK_R_t.sc" = 35;
"@MMK_R_v.sc" = 8;
"@MMK_R_x.sc" = -12;
};
"@MMK_L_quotedblright.sc" = {
"@MMK_R_a.sc" = -32;
"@MMK_R_a.sc.ss01" = -15;
"@MMK_R_asterisk" = 18;
"@MMK_R_backslash" = 28;
"@MMK_R_c.sc" = 8;
"@MMK_R_comma" = -20;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_paragraph" = 30;
"@MMK_R_plus" = 2;
"@MMK_R_question.sc" = 30;
"@MMK_R_questiondown.sc" = -33;
"@MMK_R_s.sc" = 10;
"@MMK_R_slash" = -28;
"@MMK_R_t.sc" = 44;
"@MMK_R_v.sc" = 24;
"@MMK_R_x.sc" = 5;
"@MMK_R_y.sc" = 14;
};
"@MMK_L_quoteright" = {
"@MMK_R_A" = -32;
"@MMK_R_A.ss01" = -15;
"@MMK_R_J" = -1;
"@MMK_R_J.ss01" = -2;
"@MMK_R_T" = 28;
"@MMK_R_T.ss01" = 38;
"@MMK_R_V" = 35;
"@MMK_R_X" = 8;
"@MMK_R_Y" = 28;
"@MMK_R_a" = -10;
"@MMK_R_a.sc" = -32;
"@MMK_R_a.sc.ss01" = -15;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_backslash" = 55;
"@MMK_R_c" = -28;
"@MMK_R_c.sc" = -8;
"@MMK_R_comma" = -17;
"@MMK_R_dollar" = 10;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown" = 2;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_f.sc.ss01" = -10;
"@MMK_R_four" = -56;
"@MMK_R_four.osf" = -48;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_nine" = 10;
"@MMK_R_one" = 48;
"@MMK_R_one.osf" = 48;
"@MMK_R_paragraph" = 38;
"@MMK_R_percent" = 40;
"@MMK_R_question" = 38;
"@MMK_R_question.sc" = 30;
"@MMK_R_questiondown" = -30;
"@MMK_R_questiondown.sc" = -35;
"@MMK_R_quoteright" = 25;
"@MMK_R_s" = -16;
"@MMK_R_section" = 10;
"@MMK_R_seven" = 28;
"@MMK_R_seven.osf" = 20;
"@MMK_R_slash" = -55;
"@MMK_R_t" = 2;
"@MMK_R_t.sc" = 38;
"@MMK_R_three" = 18;
"@MMK_R_three.osf" = 10;
"@MMK_R_trademark" = 32;
"@MMK_R_two" = 20;
"@MMK_R_two.osf" = 10;
"@MMK_R_uni01EF" = -19;
"@MMK_R_uni02BB" = 25;
"@MMK_R_uni0409" = -49;
"@MMK_R_uni0414.ss01" = -15;
"@MMK_R_uni041B.ss01" = -6;
"@MMK_R_uni0427" = 4;
"@MMK_R_uni0434" = -55;
"@MMK_R_uni045B" = 29;
"@MMK_R_uni0492" = -6;
"@MMK_R_uni04BC" = -15;
"@MMK_R_uni04BD" = -23;
"@MMK_R_uni0511" = -23;
"@MMK_R_v" = 18;
"@MMK_R_v.sc" = 28;
"@MMK_R_x.sc" = 8;
"@MMK_R_y.sc" = 30;
"@MMK_R_yen" = 5;
"@MMK_R_zero.osf" = -10;
};
"@MMK_L_r" = {
"@MMK_R_A" = -38;
"@MMK_R_A.ss01" = -15;
"@MMK_R_B" = -15;
"@MMK_R_T" = -45;
"@MMK_R_U" = -23;
"@MMK_R_V" = -28;
"@MMK_R_X" = -43;
"@MMK_R_Y" = -41;
"@MMK_R_a" = -9;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 30;
"@MMK_R_at" = -26;
"@MMK_R_b" = -8;
"@MMK_R_backslash" = -20;
"@MMK_R_bracketleft" = -19;
"@MMK_R_bracketright" = -15;
"@MMK_R_c" = -13;
"@MMK_R_colon" = 2;
"@MMK_R_comma" = -10;
"@MMK_R_dagger" = 30;
"@MMK_R_degree" = 29;
"@MMK_R_dollar" = -19;
"@MMK_R_eight" = 1;
"@MMK_R_five" = 1;
"@MMK_R_five.osf" = 5;
"@MMK_R_four" = -30;
"@MMK_R_four.osf" = -40;
"@MMK_R_guillemotright" = 2;
"@MMK_R_i" = -8;
"@MMK_R_nine" = 5;
"@MMK_R_nine.osf" = 21;
"@MMK_R_one" = -10;
"@MMK_R_one.osf" = 15;
"@MMK_R_paragraph" = 30;
"@MMK_R_parenleft" = -15;
"@MMK_R_parenright" = -11;
"@MMK_R_plus" = -11;
"@MMK_R_question" = 5;
"@MMK_R_questiondown" = -38;
"@MMK_R_quoteright" = 32;
"@MMK_R_s" = -4;
"@MMK_R_section" = 10;
"@MMK_R_seven" = 21;
"@MMK_R_seven.osf" = 30;
"@MMK_R_slash" = -40;
"@MMK_R_t" = 15;
"@MMK_R_three" = -8;
"@MMK_R_three.osf" = -5;
"@MMK_R_two" = 2;
"@MMK_R_two.osf" = 10;
"@MMK_R_underscore" = -12;
"@MMK_R_uni01B7" = -23;
"@MMK_R_uni01EF" = -27;
"@MMK_R_uni02BB" = 32;
"@MMK_R_uni0409" = -41;
"@MMK_R_uni0414.ss01" = -45;
"@MMK_R_uni0427" = -19;
"@MMK_R_uni0431.loclSRB" = -28;
"@MMK_R_uni0434" = -36;
"@MMK_R_uni048D" = -15;
"@MMK_R_uni04BC" = -15;
"@MMK_R_uni04BD" = -36;
"@MMK_R_uni0511" = -38;
"@MMK_R_v" = 15;
"@MMK_R_x" = -8;
"@MMK_R_zero" = 2;
"@MMK_R_zero.osf" = -11;
};
"@MMK_L_r.sc" = {
"@MMK_R_backslash" = -53;
"@MMK_R_exclam" = -5;
"@MMK_R_four" = -2;
"@MMK_R_j.sc" = -10;
"@MMK_R_one" = -2;
"@MMK_R_question" = -45;
"@MMK_R_questiondown" = -20;
"@MMK_R_questiondown.sc" = -5;
"@MMK_R_seven" = -8;
"@MMK_R_t.sc" = -10;
"@MMK_R_three.osf" = -18;
"@MMK_R_underscore" = 28;
"@MMK_R_x.sc" = -20;
"@MMK_R_y.sc" = -10;
};
"@MMK_L_s" = {
"@MMK_R_backslash" = -60;
"@MMK_R_degree" = -14;
"@MMK_R_nine" = -5;
"@MMK_R_nine.osf" = -5;
"@MMK_R_one" = -8;
"@MMK_R_paragraph" = -24;
"@MMK_R_question" = -18;
"@MMK_R_seven" = -28;
"@MMK_R_three" = -10;
"@MMK_R_three.osf" = -19;
"@MMK_R_trademark" = -18;
"@MMK_R_two" = -10;
"@MMK_R_uni048D" = -4;
"@MMK_R_uni04BD" = -7;
"@MMK_R_v" = -10;
"@MMK_R_x" = -10;
};
"@MMK_L_s.sc" = {
"@MMK_R_ampersand" = 10;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -53;
"@MMK_R_comma" = 10;
"@MMK_R_nine" = -8;
"@MMK_R_plus" = 10;
"@MMK_R_question" = -8;
"@MMK_R_question.sc" = -10;
"@MMK_R_questiondown" = -10;
"@MMK_R_quotedblleft.sc" = -10;
"@MMK_R_seven" = -8;
"@MMK_R_t.sc" = -10;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = -2;
"@MMK_R_x.sc" = -14;
"@MMK_R_y.sc" = -15;
};
"@MMK_L_section" = {
"@MMK_R_J" = 8;
"@MMK_R_a" = 8;
"@MMK_R_b" = 8;
"@MMK_R_c" = 8;
"@MMK_R_eight" = 10;
"@MMK_R_four" = 18;
"@MMK_R_i" = 8;
"@MMK_R_j" = 8;
"@MMK_R_plus" = 20;
"@MMK_R_quoteright" = 10;
"@MMK_R_s" = 8;
"@MMK_R_seven" = 8;
"@MMK_R_slash" = 25;
"@MMK_R_t" = 8;
"@MMK_R_u" = 8;
"@MMK_R_underscore" = 8;
"@MMK_R_uni02BB" = 10;
"@MMK_R_v" = 8;
"@MMK_R_x" = 8;
"@MMK_R_z" = 8;
};
"@MMK_L_seven" = {
"@MMK_R_A" = -66;
"@MMK_R_A.ss01" = -19;
"@MMK_R_J" = -28;
"@MMK_R_J.ss01" = -18;
"@MMK_R_T.ss01" = 10;
"@MMK_R_V" = 5;
"@MMK_R_X" = -4;
"@MMK_R_Y" = 7;
"@MMK_R_Z" = -8;
"@MMK_R_a" = -39;
"@MMK_R_a.sc" = -42;
"@MMK_R_a.sc.ss01" = -10;
"@MMK_R_ampersand" = -35;
"@MMK_R_asterisk" = 28;
"@MMK_R_at" = -19;
"@MMK_R_backslash" = 10;
"@MMK_R_braceright.case" = -3;
"@MMK_R_bracketright" = -3;
"@MMK_R_c" = -50;
"@MMK_R_c.sc" = -20;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -53;
"@MMK_R_currency" = -20;
"@MMK_R_degree" = 4;
"@MMK_R_dollar" = -8;
"@MMK_R_eight" = -19;
"@MMK_R_exclamdown" = -28;
"@MMK_R_f.sc.ss01" = -2;
"@MMK_R_five" = -19;
"@MMK_R_florin" = -20;
"@MMK_R_four" = -65;
"@MMK_R_guillemotright" = -18;
"@MMK_R_guillemotright.case" = -18;
"@MMK_R_i" = -26;
"@MMK_R_j" = -21;
"@MMK_R_j.sc" = -18;
"@MMK_R_j.sc.ss01" = -18;
"@MMK_R_one" = 10;
"@MMK_R_paragraph" = 28;
"@MMK_R_parenright.case" = -15;
"@MMK_R_percent" = 2;
"@MMK_R_periodcentered.case" = -30;
"@MMK_R_plus" = -50;
"@MMK_R_question" = 15;
"@MMK_R_questiondown" = -65;
"@MMK_R_quotedbl" = 30;
"@MMK_R_quoteright" = 20;
"@MMK_R_s" = -30;
"@MMK_R_s.sc" = -8;
"@MMK_R_section" = -10;
"@MMK_R_slash" = -43;
"@MMK_R_sterling" = -14;
"@MMK_R_t" = -15;
"@MMK_R_t.sc" = 12;
"@MMK_R_three" = -9;
"@MMK_R_trademark" = 40;
"@MMK_R_u" = -28;
"@MMK_R_underscore" = -30;
"@MMK_R_uni02BB" = 10;
"@MMK_R_uni0510" = -4;
"@MMK_R_v" = -5;
"@MMK_R_v.sc" = 10;
"@MMK_R_x" = -23;
"@MMK_R_x.sc" = 2;
"@MMK_R_y.sc" = 15;
"@MMK_R_yen" = 12;
"@MMK_R_z" = -30;
"@MMK_R_zero" = -20;
};
"@MMK_L_seven.osf" = {
"@MMK_R_A" = -44;
"@MMK_R_J" = -25;
"@MMK_R_J.ss01" = -35;
"@MMK_R_T" = 9;
"@MMK_R_T.ss01" = 10;
"@MMK_R_X" = -15;
"@MMK_R_Y" = -8;
"@MMK_R_Y.ss01" = -8;
"@MMK_R_Z" = -15;
"@MMK_R_a" = -14;
"@MMK_R_a.sc" = -36;
"@MMK_R_a.sc.ss01" = -8;
"@MMK_R_ampersand" = -31;
"@MMK_R_asterisk" = 40;
"@MMK_R_backslash" = -28;
"@MMK_R_braceright.case" = -15;
"@MMK_R_c" = -19;
"@MMK_R_c.sc" = -8;
"@MMK_R_colon" = -1;
"@MMK_R_comma" = -38;
"@MMK_R_degree" = 25;
"@MMK_R_f.sc.ss01" = -8;
"@MMK_R_five.osf" = -10;
"@MMK_R_florin" = -15;
"@MMK_R_four.osf" = -73;
"@MMK_R_guillemotright" = -8;
"@MMK_R_i" = -4;
"@MMK_R_j" = -8;
"@MMK_R_one.osf" = 10;
"@MMK_R_paragraph" = 20;
"@MMK_R_parenright.case" = -11;
"@MMK_R_percent" = 10;
"@MMK_R_plus" = -20;
"@MMK_R_question" = 10;
"@MMK_R_questiondown" = -38;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quoteright" = 10;
"@MMK_R_s" = -4;
"@MMK_R_seven.osf" = -8;
"@MMK_R_slash" = -20;
"@MMK_R_t" = 30;
"@MMK_R_t.sc" = 22;
"@MMK_R_three.osf" = -11;
"@MMK_R_trademark" = 30;
"@MMK_R_underscore" = -18;
"@MMK_R_uni02BB" = 20;
"@MMK_R_v" = 20;
"@MMK_R_v.sc" = 7;
"@MMK_R_x" = -4;
"@MMK_R_x.sc" = 2;
"@MMK_R_y.sc" = 10;
"@MMK_R_yen" = -8;
"@MMK_R_z" = -8;
"@MMK_R_z.sc" = 8;
"@MMK_R_zero.osf" = -15;
};
"@MMK_L_six" = {
"@MMK_R_A" = 8;
"@MMK_R_J.ss01" = -25;
"@MMK_R_T" = -10;
"@MMK_R_T.ss01" = -15;
"@MMK_R_V" = -10;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -15;
"@MMK_R_Y.ss01" = -8;
"@MMK_R_a.sc" = 10;
"@MMK_R_ampersand" = 10;
"@MMK_R_asterisk" = -15;
"@MMK_R_c" = 9;
"@MMK_R_comma" = 10;
"@MMK_R_currency" = 10;
"@MMK_R_degree" = -21;
"@MMK_R_j" = -8;
"@MMK_R_j.sc" = -8;
"@MMK_R_j.sc.ss01" = -20;
"@MMK_R_one.osf" = -4;
"@MMK_R_percent" = -20;
"@MMK_R_plus" = 5;
"@MMK_R_quotedbl" = -8;
"@MMK_R_section" = 20;
"@MMK_R_seven" = -8;
"@MMK_R_seven.osf" = -8;
"@MMK_R_slash" = 10;
"@MMK_R_t.sc" = -2;
"@MMK_R_three.osf" = -8;
"@MMK_R_uni02BB" = -10;
"@MMK_R_v" = -9;
"@MMK_R_v.sc" = -18;
"@MMK_R_x" = -15;
"@MMK_R_x.sc" = -2;
"@MMK_R_y.sc" = -2;
};
"@MMK_L_slash" = {
"@MMK_R_A" = -40;
"@MMK_R_A.ss01" = -10;
"@MMK_R_J" = -10;
"@MMK_R_J.ss01" = -10;
"@MMK_R_T" = 30;
"@MMK_R_T.ss01" = 30;
"@MMK_R_V" = 30;
"@MMK_R_Y" = 30;
"@MMK_R_a" = -68;
"@MMK_R_a.sc" = -73;
"@MMK_R_a.sc.ss01" = -63;
"@MMK_R_ampersand" = -38;
"@MMK_R_ampersand.sc" = -32;
"@MMK_R_at" = -20;
"@MMK_R_b.sc" = -53;
"@MMK_R_backslash" = 30;
"@MMK_R_braceright.case" = 35;
"@MMK_R_bracketright" = 30;
"@MMK_R_c" = -68;
"@MMK_R_c.sc" = -63;
"@MMK_R_colon" = -15;
"@MMK_R_comma" = -98;
"@MMK_R_degree" = 48;
"@MMK_R_dollar" = -20;
"@MMK_R_e.sc.ss01" = -58;
"@MMK_R_eight" = -22;
"@MMK_R_exclam.sc" = -23;
"@MMK_R_exclamdown" = -65;
"@MMK_R_exclamdown.sc" = -23;
"@MMK_R_f.sc.ss01" = -63;
"@MMK_R_five.osf" = -30;
"@MMK_R_four" = -68;
"@MMK_R_four.osf" = -80;
"@MMK_R_guillemotright" = -53;
"@MMK_R_guillemotright.case" = -8;
"@MMK_R_guillemotright.sc" = -23;
"@MMK_R_i" = -68;
"@MMK_R_i.sc.ss01" = -45;
"@MMK_R_j" = 2;
"@MMK_R_j.sc" = -28;
"@MMK_R_j.sc.ss01" = -40;
"@MMK_R_nine.osf" = -30;
"@MMK_R_one" = 30;
"@MMK_R_parenright" = 32;
"@MMK_R_parenright.case" = 35;
"@MMK_R_periodcentered.case" = -20;
"@MMK_R_plus" = -67;
"@MMK_R_question.sc" = -23;
"@MMK_R_questiondown" = -75;
"@MMK_R_questiondown.sc" = -58;
"@MMK_R_quotedbl" = 60;
"@MMK_R_quotedbl.sc" = 30;
"@MMK_R_quotedblleft.sc" = 8;
"@MMK_R_quotedblright.sc" = 28;
"@MMK_R_quoteright" = 55;
"@MMK_R_s" = -68;
"@MMK_R_s.sc" = -63;
"@MMK_R_section" = -20;
"@MMK_R_seven" = 15;
"@MMK_R_slash" = -65;
"@MMK_R_sterling" = -10;
"@MMK_R_t" = -28;
"@MMK_R_t.sc" = -10;
"@MMK_R_three.osf" = -30;
"@MMK_R_trademark" = 48;
"@MMK_R_two.osf" = -22;
"@MMK_R_u" = -68;
"@MMK_R_u.sc" = -53;
"@MMK_R_underscore" = -125;
"@MMK_R_uni02BB" = 53;
"@MMK_R_uni0510" = -20;
"@MMK_R_uni20B9" = 15;
"@MMK_R_v" = -30;
"@MMK_R_v.sc" = -15;
"@MMK_R_x" = -63;
"@MMK_R_x.sc" = -28;
"@MMK_R_y.sc" = -8;
"@MMK_R_y.sc.ss01" = -40;
"@MMK_R_yen" = 40;
"@MMK_R_z" = -68;
"@MMK_R_z.sc" = -53;
"@MMK_R_zero" = -20;
"@MMK_R_zero.osf" = -40;
};
"@MMK_L_sterling" = {
"@MMK_R_A" = -45;
"@MMK_R_A.ss01" = -25;
"@MMK_R_J" = -20;
"@MMK_R_J.ss01" = -35;
"@MMK_R_X" = -10;
"@MMK_R_Y" = 10;
"@MMK_R_a" = -40;
"@MMK_R_a.sc" = -67;
"@MMK_R_a.sc.ss01" = -43;
"@MMK_R_ampersand" = -40;
"@MMK_R_asterisk" = 30;
"@MMK_R_at" = -14;
"@MMK_R_b.sc" = -20;
"@MMK_R_backslash" = 18;
"@MMK_R_braceright.case" = 2;
"@MMK_R_bracketright" = 2;
"@MMK_R_c" = -30;
"@MMK_R_c.sc" = -34;
"@MMK_R_colon" = -30;
"@MMK_R_comma" = -2;
"@MMK_R_dagger" = -20;
"@MMK_R_dollar" = -10;
"@MMK_R_e.sc.ss01" = -60;
"@MMK_R_eight" = -34;
"@MMK_R_exclamdown" = -25;
"@MMK_R_f.sc.ss01" = -29;
"@MMK_R_five" = -12;
"@MMK_R_five.osf" = -20;
"@MMK_R_four" = -38;
"@MMK_R_four.osf" = -59;
"@MMK_R_guillemotright" = -12;
"@MMK_R_guillemotright.case" = -28;
"@MMK_R_guillemotright.sc" = -15;
"@MMK_R_i" = -20;
"@MMK_R_i.sc.ss01" = -15;
"@MMK_R_j" = -25;
"@MMK_R_j.sc" = -30;
"@MMK_R_j.sc.ss01" = -43;
"@MMK_R_nine" = -20;
"@MMK_R_nine.osf" = -35;
"@MMK_R_one" = 18;
"@MMK_R_paragraph" = 15;
"@MMK_R_periodcentered.case" = -10;
"@MMK_R_plus" = -30;
"@MMK_R_questiondown" = -23;
"@MMK_R_quoteright" = 2;
"@MMK_R_s" = -40;
"@MMK_R_s.sc" = -35;
"@MMK_R_section" = -10;
"@MMK_R_seven" = 8;
"@MMK_R_seven.osf" = -18;
"@MMK_R_slash" = 11;
"@MMK_R_t" = -20;
"@MMK_R_three" = -10;
"@MMK_R_three.osf" = -29;
"@MMK_R_trademark" = 35;
"@MMK_R_two" = -10;
"@MMK_R_two.osf" = -15;
"@MMK_R_u" = -28;
"@MMK_R_u.sc" = -20;
"@MMK_R_underscore" = 18;
"@MMK_R_uni02BB" = -2;
"@MMK_R_uni0409" = -15;
"@MMK_R_uni0414.ss01" = -55;
"@MMK_R_uni041B.ss01" = -8;
"@MMK_R_uni0431.loclSRB" = -25;
"@MMK_R_uni048D" = -29;
"@MMK_R_uni04BD" = -9;
"@MMK_R_uni0510" = -20;
"@MMK_R_v" = -20;
"@MMK_R_x" = -25;
"@MMK_R_x.sc" = -20;
"@MMK_R_y.sc" = -15;
"@MMK_R_y.sc.ss01" = -45;
"@MMK_R_z" = -40;
"@MMK_R_z.sc" = -20;
"@MMK_R_zero" = -38;
"@MMK_R_zero.osf" = -34;
};
"@MMK_L_t" = {
"@MMK_R_ampersand" = -9;
"@MMK_R_asterisk" = -18;
"@MMK_R_backslash" = -68;
"@MMK_R_c" = -19;
"@MMK_R_comma" = 10;
"@MMK_R_degree" = -5;
"@MMK_R_eight" = -6;
"@MMK_R_five" = -8;
"@MMK_R_four" = -33;
"@MMK_R_nine" = -15;
"@MMK_R_nine.osf" = -8;
"@MMK_R_one" = -21;
"@MMK_R_one.osf" = -8;
"@MMK_R_paragraph" = -20;
"@MMK_R_plus" = -10;
"@MMK_R_question" = -18;
"@MMK_R_section" = -11;
"@MMK_R_seven" = -25;
"@MMK_R_t" = -14;
"@MMK_R_three.osf" = -25;
"@MMK_R_trademark" = -28;
"@MMK_R_two" = -8;
"@MMK_R_underscore" = 35;
"@MMK_R_uni02BB" = -8;
"@MMK_R_v" = -10;
"@MMK_R_zero" = -18;
"@MMK_R_zero.osf" = -18;
};
"@MMK_L_t.sc" = {
"@MMK_R_a.sc" = -35;
"@MMK_R_ampersand" = -12;
"@MMK_R_ampersand.sc" = -10;
"@MMK_R_asterisk" = 63;
"@MMK_R_backslash" = -10;
"@MMK_R_bracketright" = 5;
"@MMK_R_c.sc" = -10;
"@MMK_R_colon" = 20;
"@MMK_R_comma" = -14;
"@MMK_R_degree" = 40;
"@MMK_R_eight" = 8;
"@MMK_R_exclam" = 20;
"@MMK_R_exclam.sc" = 5;
"@MMK_R_exclamdown" = 5;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_five" = 8;
"@MMK_R_four" = -26;
"@MMK_R_four.osf" = -40;
"@MMK_R_guillemotright" = 12;
"@MMK_R_guillemotright.sc" = 10;
"@MMK_R_j.sc" = -10;
"@MMK_R_nine" = 30;
"@MMK_R_nine.osf" = 15;
"@MMK_R_one" = 20;
"@MMK_R_one.osf" = 32;
"@MMK_R_paragraph" = 45;
"@MMK_R_plus" = -2;
"@MMK_R_question" = 22;
"@MMK_R_question.sc" = 25;
"@MMK_R_questiondown" = -50;
"@MMK_R_questiondown.sc" = -38;
"@MMK_R_quotedblleft.sc" = 35;
"@MMK_R_quotedblright.sc" = 44;
"@MMK_R_quoteright" = 38;
"@MMK_R_seven" = 22;
"@MMK_R_seven.osf" = 22;
"@MMK_R_slash" = -12;
"@MMK_R_t.sc" = 10;
"@MMK_R_three" = 2;
"@MMK_R_three.osf" = 5;
"@MMK_R_trademark" = 22;
"@MMK_R_two" = 12;
"@MMK_R_two.osf" = 29;
"@MMK_R_uni02BB" = 45;
"@MMK_R_v.sc" = -5;
"@MMK_R_x.sc" = -30;
"@MMK_R_y.sc" = -5;
"@MMK_R_zero" = -1;
};
"@MMK_L_thorn.sc" = {
"@MMK_R_a.sc" = -30;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -58;
"@MMK_R_comma" = -15;
"@MMK_R_degree" = -2;
"@MMK_R_five" = -2;
"@MMK_R_four.osf" = -5;
"@MMK_R_guillemotright" = -10;
"@MMK_R_j.sc" = -40;
"@MMK_R_nine" = -8;
"@MMK_R_one" = -7;
"@MMK_R_one.osf" = -18;
"@MMK_R_paragraph" = -12;
"@MMK_R_plus" = 5;
"@MMK_R_question" = -50;
"@MMK_R_question.sc" = -18;
"@MMK_R_questiondown" = -40;
"@MMK_R_questiondown.sc" = -10;
"@MMK_R_seven" = -33;
"@MMK_R_slash" = -20;
"@MMK_R_t.sc" = -25;
"@MMK_R_three" = -17;
"@MMK_R_three.osf" = -22;
"@MMK_R_two" = -10;
"@MMK_R_two.osf" = -10;
"@MMK_R_underscore" = -10;
"@MMK_R_v.sc" = -10;
"@MMK_R_x.sc" = -30;
"@MMK_R_y.sc" = -30;
"@MMK_R_z.sc" = -19;
};
"@MMK_L_three" = {
"@MMK_R_A" = 4;
"@MMK_R_J.ss01" = -26;
"@MMK_R_T" = -6;
"@MMK_R_V" = -10;
"@MMK_R_X" = -10;
"@MMK_R_Y" = -10;
"@MMK_R_a.sc" = -2;
"@MMK_R_degree" = -15;
"@MMK_R_five" = -10;
"@MMK_R_j" = -6;
"@MMK_R_j.sc" = 5;
"@MMK_R_j.sc.ss01" = -20;
"@MMK_R_percent" = -10;
"@MMK_R_quotedbl" = -10;
"@MMK_R_seven" = -13;
"@MMK_R_t.sc" = 8;
"@MMK_R_three" = -5;
"@MMK_R_two" = -5;
"@MMK_R_v" = -6;
"@MMK_R_v.sc" = 15;
"@MMK_R_x" = -12;
"@MMK_R_y.sc" = 8;
};
"@MMK_L_three.osf" = {
"@MMK_R_A" = 8;
"@MMK_R_J" = 12;
"@MMK_R_T" = -8;
"@MMK_R_V" = -6;
"@MMK_R_Y" = -15;
"@MMK_R_a" = 18;
"@MMK_R_at" = -6;
"@MMK_R_backslash" = -28;
"@MMK_R_comma" = 10;
"@MMK_R_currency" = 8;
"@MMK_R_florin" = 10;
"@MMK_R_four.osf" = 4;
"@MMK_R_j.sc" = 18;
"@MMK_R_j.sc.ss01" = 8;
"@MMK_R_question" = -20;
"@MMK_R_quoteright" = -10;
"@MMK_R_seven.osf" = -10;
"@MMK_R_slash" = 10;
"@MMK_R_three.osf" = -5;
"@MMK_R_underscore" = 10;
"@MMK_R_v" = 8;
};
"@MMK_L_trademark" = {
"@MMK_R_A" = -20;
"@MMK_R_J" = -20;
"@MMK_R_J.ss01" = -10;
"@MMK_R_a" = 28;
"@MMK_R_a.sc" = 5;
"@MMK_R_asterisk" = 20;
"@MMK_R_backslash" = 40;
"@MMK_R_c" = 28;
"@MMK_R_exclamdown" = 2;
"@MMK_R_four.osf" = -10;
"@MMK_R_nine" = 30;
"@MMK_R_nine.osf" = 30;
"@MMK_R_one.osf" = 30;
"@MMK_R_plus" = 10;
"@MMK_R_questiondown" = -15;
"@MMK_R_s" = 28;
"@MMK_R_s.sc" = 2;
"@MMK_R_seven" = 12;
"@MMK_R_seven.osf" = 30;
"@MMK_R_slash" = -45;
"@MMK_R_t" = 32;
"@MMK_R_t.sc" = 22;
"@MMK_R_three.osf" = 2;
"@MMK_R_two.osf" = 10;
"@MMK_R_v" = 15;
"@MMK_R_v.sc" = 10;
"@MMK_R_y.sc" = 5;
"@MMK_R_zero.osf" = 10;
};
"@MMK_L_two" = {
"@MMK_R_A" = 2;
"@MMK_R_J" = 12;
"@MMK_R_J.ss01" = 2;
"@MMK_R_T" = -8;
"@MMK_R_V" = -11;
"@MMK_R_Y" = -16;
"@MMK_R_a.sc" = 2;
"@MMK_R_ampersand" = -8;
"@MMK_R_backslash" = -8;
"@MMK_R_c" = -10;
"@MMK_R_comma" = 10;
"@MMK_R_four" = -23;
"@MMK_R_j.sc" = 5;
"@MMK_R_j.sc.ss01" = 12;
"@MMK_R_percent" = 10;
"@MMK_R_plus" = -8;
"@MMK_R_seven" = -4;
"@MMK_R_slash" = 10;
"@MMK_R_t.sc" = 20;
"@MMK_R_u" = -4;
"@MMK_R_underscore" = 30;
"@MMK_R_v" = 4;
"@MMK_R_v.sc" = 8;
"@MMK_R_x" = -8;
"@MMK_R_y.sc" = 10;
"@MMK_R_z" = -8;
"@MMK_R_z.sc" = 2;
"@MMK_R_zero" = -4;
};
"@MMK_L_two.osf" = {
"@MMK_R_A" = -5;
"@MMK_R_J" = 5;
"@MMK_R_J.ss01" = 2;
"@MMK_R_T" = -10;
"@MMK_R_T.ss01" = -14;
"@MMK_R_V" = -20;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -15;
"@MMK_R_Z" = -8;
"@MMK_R_a" = 6;
"@MMK_R_a.sc" = 5;
"@MMK_R_ampersand" = -11;
"@MMK_R_backslash" = -35;
"@MMK_R_colon" = 1;
"@MMK_R_comma" = 2;
"@MMK_R_currency" = 10;
"@MMK_R_degree" = -8;
"@MMK_R_florin" = 2;
"@MMK_R_four.osf" = -19;
"@MMK_R_j.sc" = 7;
"@MMK_R_j.sc.ss01" = 5;
"@MMK_R_percent" = -4;
"@MMK_R_question" = -20;
"@MMK_R_quoteright" = -10;
"@MMK_R_seven.osf" = -4;
"@MMK_R_slash" = 20;
"@MMK_R_sterling" = 10;
"@MMK_R_t" = 10;
"@MMK_R_three.osf" = -8;
"@MMK_R_underscore" = 22;
"@MMK_R_uni02BB" = -8;
"@MMK_R_x" = -8;
"@MMK_R_x.sc" = 2;
"@MMK_R_y.sc" = -2;
"@MMK_R_yen" = -8;
};
"@MMK_L_uhorn" = {
"@MMK_R_a" = -16;
"@MMK_R_asterisk" = 62;
"@MMK_R_b" = -10;
"@MMK_R_backslash" = 35;
"@MMK_R_bracketright" = 15;
"@MMK_R_c" = -20;
"@MMK_R_colon" = 2;
"@MMK_R_comma" = -20;
"@MMK_R_dagger" = 20;
"@MMK_R_degree" = 40;
"@MMK_R_eight" = -10;
"@MMK_R_exclam" = 15;
"@MMK_R_exclamdown" = -8;
"@MMK_R_five" = -8;
"@MMK_R_five.osf" = -15;
"@MMK_R_four" = -20;
"@MMK_R_four.osf" = -20;
"@MMK_R_guillemotright" = -13;
"@MMK_R_i" = -15;
"@MMK_R_j" = -13;
"@MMK_R_nine" = 15;
"@MMK_R_nine.osf" = -10;
"@MMK_R_one" = 25;
"@MMK_R_one.osf" = 25;
"@MMK_R_paragraph" = 32;
"@MMK_R_parenright" = 10;
"@MMK_R_plus" = -20;
"@MMK_R_question" = 80;
"@MMK_R_questiondown" = -20;
"@MMK_R_quoteright" = 52;
"@MMK_R_s" = -15;
"@MMK_R_section" = 7;
"@MMK_R_seven" = 45;
"@MMK_R_seven.osf" = 15;
"@MMK_R_slash" = -20;
"@MMK_R_t" = 10;
"@MMK_R_three.osf" = 2;
"@MMK_R_trademark" = 45;
"@MMK_R_two" = 22;
"@MMK_R_two.osf" = 5;
"@MMK_R_u" = -15;
"@MMK_R_underscore" = -20;
"@MMK_R_uni02BB" = 42;
"@MMK_R_v" = -15;
"@MMK_R_x" = -15;
"@MMK_R_z" = -15;
"@MMK_R_zero" = -13;
"@MMK_R_zero.osf" = -15;
};
"@MMK_L_uhorn.sc" = {
"@MMK_R_a.sc" = -11;
"@MMK_R_ampersand" = -15;
"@MMK_R_ampersand.sc" = -15;
"@MMK_R_asterisk" = 45;
"@MMK_R_at" = -15;
"@MMK_R_b.sc" = -15;
"@MMK_R_backslash" = 30;
"@MMK_R_bracketright" = 25;
"@MMK_R_colon" = -13;
"@MMK_R_comma" = -20;
"@MMK_R_degree" = 20;
"@MMK_R_eight" = -8;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = -2;
"@MMK_R_exclamdown" = -13;
"@MMK_R_exclamdown.sc" = -8;
"@MMK_R_five" = -5;
"@MMK_R_five.osf" = -15;
"@MMK_R_four" = -20;
"@MMK_R_four.osf" = -20;
"@MMK_R_guillemotright" = -15;
"@MMK_R_guillemotright.sc" = -15;
"@MMK_R_nine" = 8;
"@MMK_R_nine.osf" = -13;
"@MMK_R_one" = 22;
"@MMK_R_one.osf" = 20;
"@MMK_R_paragraph" = 22;
"@MMK_R_parenright" = 7;
"@MMK_R_plus" = -20;
"@MMK_R_question" = 38;
"@MMK_R_question.sc" = 12;
"@MMK_R_questiondown" = -20;
"@MMK_R_questiondown.sc" = -20;
"@MMK_R_quotedblleft.sc" = 2;
"@MMK_R_quotedblright.sc" = 10;
"@MMK_R_quoteright" = 20;
"@MMK_R_seven" = 20;
"@MMK_R_seven.osf" = 18;
"@MMK_R_slash" = -20;
"@MMK_R_three" = 18;
"@MMK_R_three.osf" = -2;
"@MMK_R_trademark" = 50;
"@MMK_R_two" = 20;
"@MMK_R_two.osf" = -8;
"@MMK_R_underscore" = -20;
"@MMK_R_uni02BB" = 15;
"@MMK_R_x.sc" = -8;
"@MMK_R_y.sc" = -8;
"@MMK_R_zero" = -15;
"@MMK_R_zero.osf" = -15;
};
"@MMK_L_underscore" = {
"@MMK_R_A" = 58;
"@MMK_R_B" = 30;
"@MMK_R_J" = 85;
"@MMK_R_J.ss01" = 88;
"@MMK_R_T.ss01" = -8;
"@MMK_R_U" = -10;
"@MMK_R_V" = -10;
"@MMK_R_X" = 48;
"@MMK_R_Y" = -8;
"@MMK_R_Y.ss01" = 2;
"@MMK_R_Z" = 20;
"@MMK_R_a" = -10;
"@MMK_R_a.sc" = 50;
"@MMK_R_asterisk" = -10;
"@MMK_R_at" = -30;
"@MMK_R_backslash" = -130;
"@MMK_R_braceright.case" = 25;
"@MMK_R_bracketright" = 25;
"@MMK_R_c" = -28;
"@MMK_R_c.sc" = -10;
"@MMK_R_colon" = 10;
"@MMK_R_comma" = 10;
"@MMK_R_currency" = -8;
"@MMK_R_dollar" = 20;
"@MMK_R_e.sc.ss01" = -10;
"@MMK_R_exclamdown" = 7;
"@MMK_R_exclamdown.sc" = 5;
"@MMK_R_five" = 10;
"@MMK_R_five.osf" = 48;
"@MMK_R_florin" = 100;
"@MMK_R_four" = -28;
"@MMK_R_four.osf" = 5;
"@MMK_R_guillemotright" = 10;
"@MMK_R_guillemotright.case" = 8;
"@MMK_R_j" = 105;
"@MMK_R_j.sc" = 50;
"@MMK_R_j.sc.ss01" = 68;
"@MMK_R_nine" = 10;
"@MMK_R_nine.osf" = 12;
"@MMK_R_one" = -9;
"@MMK_R_one.osf" = -2;
"@MMK_R_paragraph" = -79;
"@MMK_R_parenright" = 2;
"@MMK_R_parenright.case" = 10;
"@MMK_R_percent" = -28;
"@MMK_R_question" = -10;
"@MMK_R_question.sc" = -20;
"@MMK_R_quotedbl" = -8;
"@MMK_R_s" = 10;
"@MMK_R_s.sc" = 30;
"@MMK_R_section" = 28;
"@MMK_R_seven.osf" = -5;
"@MMK_R_slash" = 133;
"@MMK_R_sterling" = 18;
"@MMK_R_t" = -20;
"@MMK_R_three" = 28;
"@MMK_R_three.osf" = 60;
"@MMK_R_trademark" = -50;
"@MMK_R_two" = 35;
"@MMK_R_two.osf" = 28;
"@MMK_R_u" = -28;
"@MMK_R_u.sc" = -10;
"@MMK_R_uni0510" = -20;
"@MMK_R_v" = -12;
"@MMK_R_v.sc" = -10;
"@MMK_R_x" = 38;
"@MMK_R_x.sc" = 48;
"@MMK_R_y.sc" = -8;
"@MMK_R_yen" = -10;
"@MMK_R_z" = 30;
"@MMK_R_z.sc" = 20;
"@MMK_R_zero" = -20;
"@MMK_R_zero.osf" = -10;
};
"@MMK_L_uni01C6.sc" = {
"@MMK_R_at" = -8;
"@MMK_R_backslash" = -53;
"@MMK_R_c.sc" = -9;
"@MMK_R_comma" = 10;
"@MMK_R_degree" = 3;
"@MMK_R_four" = -15;
"@MMK_R_four.osf" = -15;
"@MMK_R_one.osf" = 2;
"@MMK_R_paragraph" = 10;
"@MMK_R_plus" = -15;
"@MMK_R_question.sc" = 10;
"@MMK_R_seven" = 2;
"@MMK_R_seven.osf" = 8;
"@MMK_R_slash" = 18;
"@MMK_R_three" = -5;
"@MMK_R_two" = 2;
"@MMK_R_underscore" = 30;
"@MMK_R_x.sc" = -10;
"@MMK_R_zero" = -4;
"@MMK_R_zero.osf" = -8;
};
"@MMK_L_uni01EF" = {
"@MMK_R_uni04BD" = -5;
};
"@MMK_L_uni02BB" = {
"@MMK_R_A" = -32;
"@MMK_R_A.ss01" = -15;
"@MMK_R_J" = -2;
"@MMK_R_J.ss01" = -5;
"@MMK_R_T" = 28;
"@MMK_R_T.ss01" = 35;
"@MMK_R_V" = 23;
"@MMK_R_X" = 3;
"@MMK_R_Y" = 15;
"@MMK_R_a" = -4;
"@MMK_R_a.sc" = -32;
"@MMK_R_a.sc.ss01" = -13;
"@MMK_R_ampersand" = -15;
"@MMK_R_asterisk" = 30;
"@MMK_R_backslash" = 55;
"@MMK_R_c" = -13;
"@MMK_R_c.sc" = -8;
"@MMK_R_comma" = -17;
"@MMK_R_dollar" = 10;
"@MMK_R_eight" = -5;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown" = 2;
"@MMK_R_exclamdown.sc" = 2;
"@MMK_R_five.osf" = -5;
"@MMK_R_four" = -38;
"@MMK_R_four.osf" = -38;
"@MMK_R_guillemotright.sc" = 2;
"@MMK_R_i" = 30;
"@MMK_R_nine" = 35;
"@MMK_R_nine.osf" = 38;
"@MMK_R_one" = 38;
"@MMK_R_one.osf" = 65;
"@MMK_R_paragraph" = 38;
"@MMK_R_percent" = 40;
"@MMK_R_question" = 38;
"@MMK_R_question.sc" = 30;
"@MMK_R_questiondown" = -30;
"@MMK_R_questiondown.sc" = -35;
"@MMK_R_quoteright" = 25;
"@MMK_R_s.sc" = 10;
"@MMK_R_section" = 10;
"@MMK_R_seven" = 45;
"@MMK_R_seven.osf" = 41;
"@MMK_R_slash" = -55;
"@MMK_R_t" = 15;
"@MMK_R_t.sc" = 45;
"@MMK_R_three" = 23;
"@MMK_R_three.osf" = 20;
"@MMK_R_trademark" = 23;
"@MMK_R_two" = 15;
"@MMK_R_two.osf" = 38;
"@MMK_R_uni02BB" = 25;
"@MMK_R_uni0409" = -41;
"@MMK_R_uni0414.ss01" = -19;
"@MMK_R_uni0434" = -30;
"@MMK_R_uni0442" = 2;
"@MMK_R_uni045B" = 17;
"@MMK_R_uni048D" = 2;
"@MMK_R_uni04BC" = 2;
"@MMK_R_uni04BD" = -21;
"@MMK_R_uni0511" = -20;
"@MMK_R_uni20B9" = 15;
"@MMK_R_v" = 34;
"@MMK_R_v.sc" = 28;
"@MMK_R_y.sc" = 20;
"@MMK_R_zero.osf" = -8;
};
"@MMK_L_uni0402" = {
"@MMK_R_T" = -61;
"@MMK_R_T.ss01" = -38;
"@MMK_R_U" = -40;
"@MMK_R_V" = -30;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -45;
"@MMK_R_at" = -20;
"@MMK_R_dollar" = -11;
"@MMK_R_question" = -39;
"@MMK_R_quotedbl" = -34;
"@MMK_R_quoteright" = -43;
"@MMK_R_uni02BB" = -42;
"@MMK_R_uni0427" = -20;
"@MMK_R_uni0431.loclSRB" = -4;
"@MMK_R_uni0434" = -11;
"@MMK_R_uni0442" = -17;
"@MMK_R_uni048D" = -9;
"@MMK_R_uni04BC" = -44;
"@MMK_R_uni04BD" = -17;
"@MMK_R_v" = -21;
};
"@MMK_L_uni0403" = {
"@MMK_R_A" = -132;
"@MMK_R_at" = -95;
"@MMK_R_b" = -8;
"@MMK_R_c" = -153;
"@MMK_R_comma" = -182;
"@MMK_R_i" = -120;
"@MMK_R_plus" = -202;
"@MMK_R_uni01EF" = -142;
"@MMK_R_uni0409" = -89;
"@MMK_R_uni0414.ss01" = -45;
"@MMK_R_uni0427" = -20;
"@MMK_R_uni0434" = -157;
"@MMK_R_uni0442" = -113;
"@MMK_R_uni04BC" = -110;
"@MMK_R_uni04BD" = -210;
"@MMK_R_uni0511" = -162;
"@MMK_R_v" = -120;
"@MMK_R_x" = -118;
};
"@MMK_L_uni0409" = {
"@MMK_R_A" = -5;
"@MMK_R_A.ss01" = -8;
"@MMK_R_J" = -2;
"@MMK_R_J.ss01" = -7;
"@MMK_R_T" = -65;
"@MMK_R_T.ss01" = -42;
"@MMK_R_V" = -31;
"@MMK_R_X" = -43;
"@MMK_R_Y" = -40;
"@MMK_R_comma" = -27;
"@MMK_R_dollar" = -19;
"@MMK_R_parenright" = -15;
"@MMK_R_question" = -39;
"@MMK_R_quotedbl" = -29;
"@MMK_R_quoteright" = -28;
"@MMK_R_uni01B7" = -20;
"@MMK_R_uni01EF" = -15;
"@MMK_R_uni02BB" = -27;
"@MMK_R_uni0409" = -26;
"@MMK_R_uni0427" = -7;
"@MMK_R_uni0434" = -15;
"@MMK_R_uni0442" = -24;
"@MMK_R_uni048D" = -16;
"@MMK_R_uni04BC" = -33;
"@MMK_R_uni04BD" = -15;
"@MMK_R_v" = -20;
"@MMK_R_x" = -17;
};
"@MMK_L_uni0414" = {
"@MMK_R_A" = 2;
"@MMK_R_T" = -24;
"@MMK_R_V" = -24;
"@MMK_R_Y" = -29;
"@MMK_R_bracketright" = 4;
"@MMK_R_c" = -15;
"@MMK_R_comma" = 4;
"@MMK_R_plus" = -24;
"@MMK_R_question" = -48;
"@MMK_R_quotedbl" = -20;
"@MMK_R_quoteright" = -20;
"@MMK_R_uni01EF" = -18;
"@MMK_R_uni02BB" = -20;
"@MMK_R_uni0427" = -21;
"@MMK_R_uni0442" = -30;
"@MMK_R_uni04BC" = -40;
"@MMK_R_uni04BD" = -47;
"@MMK_R_uni0511" = -15;
"@MMK_R_v" = -34;
"@MMK_R_x" = -23;
};
"@MMK_L_uni0414.ss01" = {
"@MMK_R_T" = -37;
"@MMK_R_T.ss01" = -27;
"@MMK_R_U" = -8;
"@MMK_R_V" = -23;
"@MMK_R_Y" = -23;
"@MMK_R_c" = -8;
"@MMK_R_j" = 45;
"@MMK_R_plus" = -15;
"@MMK_R_quotedbl" = -15;
"@MMK_R_quoteright" = -22;
"@MMK_R_uni02BB" = -19;
"@MMK_R_uni0427" = -32;
"@MMK_R_uni0442" = -22;
"@MMK_R_uni044A.ss01" = -32;
"@MMK_R_uni048D" = -14;
"@MMK_R_uni04BC" = -53;
"@MMK_R_uni04BD" = -17;
"@MMK_R_v" = -12;
};
"@MMK_L_uni0433" = {
"@MMK_R_A" = -39;
"@MMK_R_V" = -5;
"@MMK_R_X" = -34;
"@MMK_R_Y" = -21;
"@MMK_R_c" = -24;
"@MMK_R_comma" = -45;
"@MMK_R_parenright" = -5;
"@MMK_R_plus" = -23;
"@MMK_R_quoteright" = 18;
"@MMK_R_uni01B7" = -2;
"@MMK_R_uni01EF" = -15;
"@MMK_R_uni0409" = -41;
"@MMK_R_uni0414.ss01" = -22;
"@MMK_R_uni0427" = -10;
"@MMK_R_uni0431.loclSRB" = -23;
"@MMK_R_uni0434" = -32;
"@MMK_R_uni0442" = 12;
"@MMK_R_uni048D" = -11;
"@MMK_R_uni04BD" = -23;
"@MMK_R_uni0511" = -28;
"@MMK_R_v" = 2;
"@MMK_R_x" = -11;
};
"@MMK_L_uni0462" = {
"@MMK_R_T" = -62;
"@MMK_R_T.ss01" = -45;
"@MMK_R_V" = -27;
"@MMK_R_Y" = -22;
"@MMK_R_quoteright" = -28;
"@MMK_R_uni02BB" = -23;
"@MMK_R_uni0427" = -5;
"@MMK_R_uni048D" = -16;
"@MMK_R_uni04BD" = -4;
};
"@MMK_L_uni0463" = {
"@MMK_R_A.ss01" = -4;
"@MMK_R_T" = -16;
"@MMK_R_c" = -8;
"@MMK_R_colon" = -8;
"@MMK_R_parenleft" = -15;
"@MMK_R_question" = -57;
"@MMK_R_quotedbl" = -20;
"@MMK_R_quoteright" = -29;
"@MMK_R_u" = -2;
"@MMK_R_uni01EF" = -2;
"@MMK_R_uni02BB" = -38;
"@MMK_R_uni0431.loclSRB" = 2;
"@MMK_R_uni0434" = -8;
"@MMK_R_uni0442" = -40;
"@MMK_R_uni044A.ss01" = -38;
"@MMK_R_uni048D" = -37;
"@MMK_R_uni04BD" = -22;
"@MMK_R_v" = -26;
"@MMK_R_x" = -24;
};
"@MMK_L_uni04A6" = {
"@MMK_R_A.ss01" = -11;
"@MMK_R_T" = -82;
"@MMK_R_T.ss01" = -30;
"@MMK_R_U" = -20;
"@MMK_R_V" = -15;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -18;
"@MMK_R_Y.ss01" = -8;
"@MMK_R_at" = -24;
"@MMK_R_bracketright" = -11;
"@MMK_R_dollar" = -19;
"@MMK_R_question" = -66;
"@MMK_R_quotedbl" = -31;
"@MMK_R_quoteright" = -40;
"@MMK_R_uni01B7" = -24;
"@MMK_R_uni02BB" = -38;
"@MMK_R_uni0409" = -19;
"@MMK_R_uni0427" = -35;
"@MMK_R_uni0442" = -22;
"@MMK_R_uni048D" = -14;
"@MMK_R_uni04BC" = -32;
"@MMK_R_uni04BD" = -25;
"@MMK_R_x" = -15;
};
"@MMK_L_uni0510" = {
"@MMK_R_A.ss01" = -25;
"@MMK_R_J" = 10;
"@MMK_R_J.ss01" = -18;
"@MMK_R_T.ss01" = -2;
"@MMK_R_X" = -8;
"@MMK_R_Y" = -8;
"@MMK_R_Y.ss01" = -10;
"@MMK_R_a" = -4;
"@MMK_R_at" = -15;
"@MMK_R_c" = -9;
"@MMK_R_c.sc" = -10;
"@MMK_R_comma" = 10;
"@MMK_R_e.sc.ss01" = -10;
"@MMK_R_eight" = -14;
"@MMK_R_five.osf" = -15;
"@MMK_R_four" = -40;
"@MMK_R_four.osf" = -15;
"@MMK_R_guillemotright.case" = -20;
"@MMK_R_j.sc" = 22;
"@MMK_R_j.sc.ss01" = -8;
"@MMK_R_nine" = -10;
"@MMK_R_nine.osf" = -14;
"@MMK_R_one.osf" = -5;
"@MMK_R_parenright" = -11;
"@MMK_R_periodcentered.case" = -30;
"@MMK_R_plus" = -10;
"@MMK_R_question" = -15;
"@MMK_R_questiondown" = 2;
"@MMK_R_s" = -10;
"@MMK_R_s.sc" = -8;
"@MMK_R_seven.osf" = -20;
"@MMK_R_slash" = 10;
"@MMK_R_t" = -15;
"@MMK_R_t.sc" = -5;
"@MMK_R_three" = 2;
"@MMK_R_three.osf" = -25;
"@MMK_R_two.osf" = -8;
"@MMK_R_u" = -9;
"@MMK_R_u.sc" = -8;
"@MMK_R_underscore" = 40;
"@MMK_R_uni02BB" = -9;
"@MMK_R_uni0431.loclSRB" = -19;
"@MMK_R_uni0442" = -5;
"@MMK_R_uni044A.ss01" = -9;
"@MMK_R_uni048D" = -28;
"@MMK_R_uni04BD" = -29;
"@MMK_R_uni0510" = -5;
"@MMK_R_v" = -14;
"@MMK_R_v.sc" = -10;
"@MMK_R_x" = -14;
"@MMK_R_y.sc.ss01" = -28;
"@MMK_R_z.sc" = -4;
"@MMK_R_zero" = -19;
"@MMK_R_zero.osf" = -16;
};
"@MMK_L_uni1EE9.sc.ss01" = {
"@MMK_R_asterisk" = 100;
"@MMK_R_backslash" = 100;
"@MMK_R_colon" = 20;
};
"@MMK_L_uni20AD" = {
"@MMK_R_backslash" = 40;
"@MMK_R_braceright.case" = 10;
"@MMK_R_bracketright" = 10;
"@MMK_R_comma" = 20;
"@MMK_R_exclam" = 5;
"@MMK_R_exclamdown" = 2;
"@MMK_R_four" = -18;
"@MMK_R_four.osf" = -5;
"@MMK_R_guillemotright.case" = -8;
"@MMK_R_guillemotright.sc" = -8;
"@MMK_R_nine" = 2;
"@MMK_R_one" = 30;
"@MMK_R_one.osf" = 10;
"@MMK_R_parenright" = 7;
"@MMK_R_parenright.case" = 2;
"@MMK_R_plus" = -8;
"@MMK_R_question" = -8;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quoteright" = 5;
"@MMK_R_seven" = 5;
"@MMK_R_seven.osf" = -5;
"@MMK_R_slash" = 30;
"@MMK_R_three" = 5;
"@MMK_R_three.osf" = 2;
"@MMK_R_two" = 12;
"@MMK_R_underscore" = 60;
};
"@MMK_L_uni20B9" = {
"@MMK_R_comma" = -30;
"@MMK_R_eight" = -8;
"@MMK_R_four" = -60;
"@MMK_R_four.osf" = -39;
"@MMK_R_one" = 15;
"@MMK_R_one.osf" = 24;
"@MMK_R_questiondown" = -20;
"@MMK_R_questiondown.sc" = -20;
"@MMK_R_seven" = 8;
"@MMK_R_zero" = -20;
"@MMK_R_zero.osf" = -28;
};
"@MMK_L_uni20BA" = {
"@MMK_R_asterisk" = -35;
"@MMK_R_backslash" = -50;
"@MMK_R_braceright.case" = -22;
"@MMK_R_bracketright" = -22;
"@MMK_R_colon" = -20;
"@MMK_R_comma" = -20;
"@MMK_R_exclam" = -20;
"@MMK_R_exclam.sc" = -21;
"@MMK_R_guillemotright.sc" = -20;
"@MMK_R_one" = -40;
"@MMK_R_parenright" = -20;
"@MMK_R_parenright.case" = -20;
"@MMK_R_plus" = 8;
"@MMK_R_question" = -90;
"@MMK_R_question.sc" = -20;
"@MMK_R_questiondown" = -20;
"@MMK_R_quotedbl" = -20;
"@MMK_R_seven" = -55;
"@MMK_R_seven.osf" = -23;
"@MMK_R_three" = -20;
"@MMK_R_three.osf" = -28;
"@MMK_R_two" = -20;
"@MMK_R_two.osf" = -10;
"@MMK_R_underscore" = -20;
};
"@MMK_L_v" = {
"@MMK_R_A" = -26;
"@MMK_R_A.ss01" = -4;
"@MMK_R_T" = -50;
"@MMK_R_X" = -30;
"@MMK_R_Y" = -28;
"@MMK_R_a" = -16;
"@MMK_R_ampersand" = -22;
"@MMK_R_asterisk" = 45;
"@MMK_R_at" = -8;
"@MMK_R_backslash" = -20;
"@MMK_R_c" = -15;
"@MMK_R_colon" = 8;
"@MMK_R_comma" = -34;
"@MMK_R_dagger" = 20;
"@MMK_R_degree" = 38;
"@MMK_R_dollar" = -8;
"@MMK_R_eight" = 8;
"@MMK_R_five" = 8;
"@MMK_R_five.osf" = 11;
"@MMK_R_four" = -25;
"@MMK_R_four.osf" = -42;
"@MMK_R_j" = -15;
"@MMK_R_nine" = 30;
"@MMK_R_nine.osf" = 11;
"@MMK_R_one" = 7;
"@MMK_R_one.osf" = 30;
"@MMK_R_paragraph" = 30;
"@MMK_R_plus" = -12;
"@MMK_R_question" = 32;
"@MMK_R_questiondown" = -30;
"@MMK_R_quoteright" = 18;
"@MMK_R_s" = -6;
"@MMK_R_seven" = 15;
"@MMK_R_seven.osf" = 20;
"@MMK_R_slash" = -29;
"@MMK_R_t" = 15;
"@MMK_R_three" = -5;
"@MMK_R_three.osf" = -8;
"@MMK_R_two" = 7;
"@MMK_R_two.osf" = 10;
"@MMK_R_underscore" = -12;
"@MMK_R_uni01EF" = -14;
"@MMK_R_uni02BB" = 34;
"@MMK_R_uni0409" = -25;
"@MMK_R_uni0414.ss01" = -12;
"@MMK_R_uni0427" = -15;
"@MMK_R_uni0431.loclSRB" = -15;
"@MMK_R_uni0434" = -23;
"@MMK_R_uni0442" = 2;
"@MMK_R_uni048D" = -8;
"@MMK_R_uni04BC" = -15;
"@MMK_R_uni04BD" = -28;
"@MMK_R_uni0511" = -12;
"@MMK_R_v" = -5;
"@MMK_R_x" = -30;
"@MMK_R_z" = -10;
"@MMK_R_zero" = 8;
"@MMK_R_zero.osf" = -1;
};
"@MMK_L_v.sc" = {
"@MMK_R_a.sc" = -36;
"@MMK_R_ampersand" = -30;
"@MMK_R_ampersand.sc" = -20;
"@MMK_R_asterisk" = 48;
"@MMK_R_at" = -10;
"@MMK_R_backslash" = -8;
"@MMK_R_bracketright" = 7;
"@MMK_R_c.sc" = -21;
"@MMK_R_comma" = -32;
"@MMK_R_degree" = 17;
"@MMK_R_eight" = 4;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = 2;
"@MMK_R_exclamdown" = -10;
"@MMK_R_f.sc.ss01" = -20;
"@MMK_R_five" = 8;
"@MMK_R_five.osf" = -2;
"@MMK_R_four" = -12;
"@MMK_R_four.osf" = -27;
"@MMK_R_guillemotright" = -10;
"@MMK_R_guillemotright.sc" = -10;
"@MMK_R_j.sc" = -15;
"@MMK_R_nine" = 11;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one" = 7;
"@MMK_R_one.osf" = 15;
"@MMK_R_paragraph" = 22;
"@MMK_R_plus" = -17;
"@MMK_R_question" = 35;
"@MMK_R_question.sc" = 5;
"@MMK_R_questiondown" = -40;
"@MMK_R_questiondown.sc" = -40;
"@MMK_R_quotedblleft.sc" = 8;
"@MMK_R_quotedblright.sc" = 24;
"@MMK_R_quoteright" = 28;
"@MMK_R_s.sc" = -15;
"@MMK_R_seven" = 12;
"@MMK_R_seven.osf" = 15;
"@MMK_R_slash" = -30;
"@MMK_R_t.sc" = -5;
"@MMK_R_three" = -5;
"@MMK_R_three.osf" = 2;
"@MMK_R_trademark" = 20;
"@MMK_R_two" = 7;
"@MMK_R_two.osf" = 8;
"@MMK_R_underscore" = -10;
"@MMK_R_uni02BB" = 28;
"@MMK_R_x.sc" = -22;
"@MMK_R_y.sc" = -19;
"@MMK_R_z.sc" = -10;
"@MMK_R_zero" = -2;
"@MMK_R_zero.osf" = -10;
};
"@MMK_L_w.ss01" = {
"@MMK_R_backslash" = -50;
"@MMK_R_comma" = -15;
"@MMK_R_one" = -8;
"@MMK_R_three" = -10;
"@MMK_R_two" = -8;
"@MMK_R_underscore" = -28;
};
"@MMK_L_x" = {
"@MMK_R_T" = -49;
"@MMK_R_U" = -15;
"@MMK_R_V" = -21;
"@MMK_R_Y" = -30;
"@MMK_R_a" = -10;
"@MMK_R_ampersand" = -20;
"@MMK_R_asterisk" = 12;
"@MMK_R_at" = -5;
"@MMK_R_backslash" = -48;
"@MMK_R_c" = -19;
"@MMK_R_colon" = -10;
"@MMK_R_dagger" = -10;
"@MMK_R_degree" = 10;
"@MMK_R_dollar" = -11;
"@MMK_R_eight" = -2;
"@MMK_R_four" = -32;
"@MMK_R_j" = -2;
"@MMK_R_nine.osf" = -8;
"@MMK_R_one" = 5;
"@MMK_R_one.osf" = 12;
"@MMK_R_paragraph" = 2;
"@MMK_R_plus" = -22;
"@MMK_R_question" = 7;
"@MMK_R_s" = -10;
"@MMK_R_seven" = -8;
"@MMK_R_seven.osf" = 2;
"@MMK_R_slash" = 10;
"@MMK_R_two" = -3;
"@MMK_R_u" = -10;
"@MMK_R_underscore" = 38;
"@MMK_R_uni01B7" = -5;
"@MMK_R_uni01EF" = -30;
"@MMK_R_uni0427" = -25;
"@MMK_R_uni0431.loclSRB" = -23;
"@MMK_R_uni0442" = -11;
"@MMK_R_uni048D" = -16;
"@MMK_R_uni04BC" = -19;
"@MMK_R_uni04BD" = -30;
"@MMK_R_uni0511" = -26;
"@MMK_R_v" = -30;
"@MMK_R_z" = -10;
"@MMK_R_zero" = -10;
"@MMK_R_zero.osf" = -6;
};
"@MMK_L_x.sc" = {
"@MMK_R_a.sc" = -32;
"@MMK_R_ampersand" = -10;
"@MMK_R_ampersand.sc" = -8;
"@MMK_R_asterisk" = 30;
"@MMK_R_backslash" = -38;
"@MMK_R_bracketright" = 2;
"@MMK_R_c.sc" = -25;
"@MMK_R_colon" = -2;
"@MMK_R_degree" = 2;
"@MMK_R_eight" = -2;
"@MMK_R_five.osf" = 2;
"@MMK_R_four" = -12;
"@MMK_R_four.osf" = -5;
"@MMK_R_guillemotright" = -10;
"@MMK_R_guillemotright.sc" = -20;
"@MMK_R_one" = -1;
"@MMK_R_one.osf" = 2;
"@MMK_R_paragraph" = 2;
"@MMK_R_plus" = -17;
"@MMK_R_question" = 5;
"@MMK_R_question.sc" = -20;
"@MMK_R_questiondown" = 20;
"@MMK_R_questiondown.sc" = -20;
"@MMK_R_quotedblleft.sc" = -12;
"@MMK_R_quotedblright.sc" = 5;
"@MMK_R_quoteright" = 8;
"@MMK_R_s.sc" = -14;
"@MMK_R_seven" = 2;
"@MMK_R_seven.osf" = 10;
"@MMK_R_slash" = 28;
"@MMK_R_t.sc" = -30;
"@MMK_R_trademark" = 5;
"@MMK_R_two" = 2;
"@MMK_R_u.sc" = -10;
"@MMK_R_underscore" = 48;
"@MMK_R_v.sc" = -22;
"@MMK_R_y.sc" = -30;
"@MMK_R_z.sc" = -10;
"@MMK_R_zero" = -12;
"@MMK_R_zero.osf" = -12;
};
"@MMK_L_y.sc" = {
"@MMK_R_a.sc" = -41;
"@MMK_R_ampersand" = -30;
"@MMK_R_ampersand.sc" = -30;
"@MMK_R_asterisk" = 50;
"@MMK_R_at" = -10;
"@MMK_R_backslash" = -8;
"@MMK_R_bracketright" = 10;
"@MMK_R_c.sc" = -30;
"@MMK_R_colon" = -6;
"@MMK_R_comma" = -26;
"@MMK_R_degree" = 17;
"@MMK_R_exclam" = 2;
"@MMK_R_exclam.sc" = 5;
"@MMK_R_exclamdown" = -10;
"@MMK_R_five" = 8;
"@MMK_R_four" = -25;
"@MMK_R_four.osf" = -32;
"@MMK_R_guillemotright" = -15;
"@MMK_R_guillemotright.sc" = -20;
"@MMK_R_j.sc" = -10;
"@MMK_R_nine" = 6;
"@MMK_R_nine.osf" = 10;
"@MMK_R_one" = 10;
"@MMK_R_one.osf" = 17;
"@MMK_R_paragraph" = 10;
"@MMK_R_plus" = -17;
"@MMK_R_question" = 35;
"@MMK_R_questiondown" = -50;
"@MMK_R_questiondown.sc" = -52;
"@MMK_R_quotedblright.sc" = 14;
"@MMK_R_quoteright" = 30;
"@MMK_R_s.sc" = -15;
"@MMK_R_seven" = 15;
"@MMK_R_seven.osf" = 17;
"@MMK_R_slash" = -30;
"@MMK_R_t.sc" = -5;
"@MMK_R_three" = -5;
"@MMK_R_three.osf" = 2;
"@MMK_R_trademark" = 12;
"@MMK_R_two" = 12;
"@MMK_R_two.osf" = 10;
"@MMK_R_u.sc" = -10;
"@MMK_R_underscore" = -8;
"@MMK_R_uni02BB" = 20;
"@MMK_R_v.sc" = -19;
"@MMK_R_x.sc" = -30;
"@MMK_R_y.sc" = -5;
"@MMK_R_zero" = -10;
"@MMK_R_zero.osf" = -12;
};
"@MMK_L_yen" = {
"@MMK_R_backslash" = 50;
"@MMK_R_braceright.case" = 30;
"@MMK_R_bracketright" = 10;
"@MMK_R_colon" = -40;
"@MMK_R_comma" = -30;
"@MMK_R_eight" = -10;
"@MMK_R_exclam" = 7;
"@MMK_R_exclam.sc" = -20;
"@MMK_R_exclamdown" = -20;
"@MMK_R_exclamdown.sc" = -20;
"@MMK_R_five.osf" = -10;
"@MMK_R_four" = -10;
"@MMK_R_four.osf" = -20;
"@MMK_R_guillemotright.case" = -15;
"@MMK_R_guillemotright.sc" = -20;
"@MMK_R_one" = 30;
"@MMK_R_parenright" = 10;
"@MMK_R_plus" = -22;
"@MMK_R_question.sc" = -20;
"@MMK_R_questiondown" = -40;
"@MMK_R_questiondown.sc" = -20;
"@MMK_R_quotedbl" = 20;
"@MMK_R_quoteright" = 5;
"@MMK_R_seven" = 28;
"@MMK_R_slash" = -30;
"@MMK_R_three" = 10;
"@MMK_R_three.osf" = -10;
"@MMK_R_two.osf" = -12;
"@MMK_R_underscore" = -10;
"@MMK_R_zero" = -11;
"@MMK_R_zero.osf" = -30;
};
"@MMK_L_z" = {
"@MMK_R_ampersand" = -8;
"@MMK_R_asterisk" = 10;
"@MMK_R_backslash" = -65;
"@MMK_R_c" = -9;
"@MMK_R_comma" = 2;
"@MMK_R_four" = -15;
"@MMK_R_four.osf" = -19;
"@MMK_R_one" = -15;
"@MMK_R_one.osf" = 9;
"@MMK_R_plus" = -14;
"@MMK_R_seven.osf" = 2;
"@MMK_R_t" = 1;
"@MMK_R_three.osf" = -8;
"@MMK_R_two" = -8;
"@MMK_R_underscore" = 25;
"@MMK_R_v" = -10;
"@MMK_R_x" = -10;
"@MMK_R_zero.osf" = -8;
};
"@MMK_L_zero" = {
"@MMK_R_A" = -7;
"@MMK_R_I.ss01" = -10;
"@MMK_R_J" = -22;
"@MMK_R_J.ss01" = -50;
"@MMK_R_T" = -20;
"@MMK_R_T.ss01" = -15;
"@MMK_R_V" = -25;
"@MMK_R_X" = -32;
"@MMK_R_Y" = -32;
"@MMK_R_Z" = -21;
"@MMK_R_a.sc" = -11;
"@MMK_R_asterisk" = 8;
"@MMK_R_backslash" = -20;
"@MMK_R_comma" = -11;
"@MMK_R_degree" = 4;
"@MMK_R_j" = -8;
"@MMK_R_j.sc" = -11;
"@MMK_R_j.sc.ss01" = -30;
"@MMK_R_one" = -2;
"@MMK_R_plus" = 8;
"@MMK_R_question" = -20;
"@MMK_R_questiondown" = -30;
"@MMK_R_quotedbl" = 8;
"@MMK_R_seven" = -8;
"@MMK_R_slash" = -20;
"@MMK_R_t" = 10;
"@MMK_R_t.sc" = -1;
"@MMK_R_three" = -10;
"@MMK_R_two" = -2;
"@MMK_R_underscore" = -20;
"@MMK_R_v" = 8;
"@MMK_R_v.sc" = -2;
"@MMK_R_x" = -10;
"@MMK_R_x.sc" = -12;
"@MMK_R_y.sc" = -10;
"@MMK_R_yen" = -11;
"@MMK_R_z.sc" = -4;
};
"@MMK_L_zero.osf" = {
"@MMK_R_A" = -5;
"@MMK_R_J" = -15;
"@MMK_R_J.ss01" = -45;
"@MMK_R_T" = -30;
"@MMK_R_T.ss01" = -35;
"@MMK_R_V" = -37;
"@MMK_R_X" = -27;
"@MMK_R_Y" = -42;
"@MMK_R_Y.ss01" = -10;
"@MMK_R_Z" = -15;
"@MMK_R_a.sc" = -6;
"@MMK_R_asterisk" = -10;
"@MMK_R_backslash" = -48;
"@MMK_R_comma" = -14;
"@MMK_R_degree" = -16;
"@MMK_R_five.osf" = -1;
"@MMK_R_four.osf" = -10;
"@MMK_R_j" = -8;
"@MMK_R_j.sc.ss01" = -22;
"@MMK_R_paragraph" = -10;
"@MMK_R_percent" = -20;
"@MMK_R_periodcentered.case" = 8;
"@MMK_R_plus" = 8;
"@MMK_R_question" = -40;
"@MMK_R_questiondown" = -10;
"@MMK_R_quotedbl" = -6;
"@MMK_R_quoteright" = -10;
"@MMK_R_seven.osf" = -4;
"@MMK_R_sterling" = 10;
"@MMK_R_three.osf" = -15;
"@MMK_R_trademark" = -30;
"@MMK_R_two.osf" = -2;
"@MMK_R_underscore" = -10;
"@MMK_R_uni02BB" = -8;
"@MMK_R_uni20B9" = -8;
"@MMK_R_v" = -1;
"@MMK_R_v.sc" = -10;
"@MMK_R_x" = -6;
"@MMK_R_x.sc" = -12;
"@MMK_R_y.sc" = -12;
"@MMK_R_yen" = -30;
"@MMK_R_z" = -8;
"@MMK_R_z.sc" = -8;
};
"@MMK_L_zero.sinf" = {
"@MMK_R_five" = 20;
"@MMK_R_four" = 30;
"@MMK_R_one" = -20;
"@MMK_R_three" = 10;
"@MMK_R_two" = 10;
};
F = {
ibreve = 0;
icircumflex = 5;
idieresis = 0;
imacron = 0;
itilde = 0;
jcircumflex = 0;
uni0209 = 50;
uni020B = 0;
uni0211 = -5;
uni1E2F = 0;
};
F.ss01 = {
ibreve = 22;
icircumflex = 25;
idieresis = 5;
imacron = 5;
itilde = 7;
jcircumflex = 24;
};
Ohorn = {
backslash = -2;
backslash.case = -2;
};
Q = {
braceright = 5;
bracketright = 5;
parenright.case = 2;
slash = 37;
slash.case = 37;
underscore = 40;
uni2215 = 37;
};
T = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
T.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
Tbar = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
Tbar.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
Tcaron = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
Tcaron.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
V = {
i = -18;
i.loclTRK = -30;
ibreve = 40;
icircumflex = 32;
idieresis = 15;
igrave = 17;
ij = -25;
imacron = 15;
iogonek = -25;
itilde = 22;
j = 0;
jcircumflex = 27;
uni0209 = 78;
uni020B = 7;
uni0211 = 5;
uni0213 = -30;
uni1E2F = 32;
uni1ECB = -25;
};
W = {
i = -18;
i.loclTRK = -30;
ibreve = 40;
icircumflex = 32;
idieresis = 15;
igrave = 17;
ij = -25;
imacron = 15;
iogonek = -25;
itilde = 22;
j = 0;
jcircumflex = 27;
uni0209 = 78;
uni020B = 7;
uni0211 = 5;
uni0213 = -30;
uni1E2F = 32;
uni1ECB = -25;
};
Wacute = {
i = -18;
i.loclTRK = -30;
ibreve = 40;
icircumflex = 32;
idieresis = 15;
igrave = 17;
ij = -25;
imacron = 15;
iogonek = -25;
itilde = 22;
j = 0;
jcircumflex = 27;
uni0209 = 78;
uni020B = 7;
uni0211 = 5;
uni0213 = -30;
uni1E2F = 32;
uni1ECB = -25;
};
Wcircumflex = {
i = -18;
i.loclTRK = -30;
ibreve = 40;
icircumflex = 32;
idieresis = 15;
igrave = 17;
ij = -25;
imacron = 15;
iogonek = -25;
itilde = 22;
j = 0;
jcircumflex = 27;
uni0209 = 78;
uni020B = 7;
uni0211 = 5;
uni0213 = -30;
uni1E2F = 32;
uni1ECB = -25;
};
Wdieresis = {
i = -18;
i.loclTRK = -30;
ibreve = 40;
icircumflex = 32;
idieresis = 15;
igrave = 17;
ij = -25;
imacron = 15;
iogonek = -25;
itilde = 22;
j = 0;
jcircumflex = 27;
uni0209 = 78;
uni020B = 7;
uni0211 = 5;
uni0213 = -30;
uni1E2F = 32;
uni1ECB = -25;
};
Wgrave = {
i = -18;
i.loclTRK = -30;
ibreve = 40;
icircumflex = 32;
idieresis = 15;
igrave = 17;
ij = -25;
imacron = 15;
iogonek = -25;
itilde = 22;
j = 0;
jcircumflex = 27;
uni0209 = 78;
uni020B = 7;
uni0211 = 5;
uni0213 = -30;
uni1E2F = 32;
uni1ECB = -25;
};
Y = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
Yacute = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
Ycircumflex = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
Ydieresis = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
Ygrave = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
aogonek = {
j = 20;
jcircumflex = 20;
uni0237 = 20;
};
asciitilde = {
uni0414 = -5;
};
asterisk = {
icircumflex = 80;
itilde = 30;
uni0209 = 80;
uni020B = 30;
};
braceleft = {
uni0414 = 9;
};
bracketleft = {
uni0414 = 9;
};
bullet = {
uni0414 = -5;
};
dcaron = {
i = 47;
j = 45;
};
divide = {
uni0414 = -5;
};
eogonek = {
j = 30;
jcircumflex = 30;
uni0237 = 30;
};
exclamdown.sc = {
quotesingle.sc = 2;
};
f = {
hbar = 30;
ibreve = 80;
icircumflex = 45;
idieresis = 60;
igrave = 68;
imacron = 45;
itilde = 60;
jcircumflex = 42;
uni0209 = 128;
uni020B = 35;
uni0211 = 37;
uni1E2F = 60;
};
f.ss01 = {
hbar = 30;
ibreve = 80;
icircumflex = 45;
idieresis = 60;
igrave = 68;
imacron = 45;
itilde = 60;
jcircumflex = 42;
uni0209 = 128;
uni020B = 35;
uni0211 = 37;
uni1E2F = 60;
};
franc = {
ibreve = 0;
icircumflex = 5;
idieresis = 0;
imacron = 0;
itilde = 0;
jcircumflex = 0;
uni0209 = 50;
uni020B = 0;
uni0211 = -5;
uni1E2F = 0;
};
guillemotleft.sc = {
quotesingle.sc = 2;
};
guillemotright = {
uni0414 = -5;
};
guillemotright.sc = {
uni0414 = -5;
};
guilsinglleft.sc = {
quotesingle.sc = 2;
};
guilsinglright = {
uni0414 = -5;
};
guilsinglright.sc = {
uni0414 = -5;
};
hyphen = {
uni0414 = -5;
};
i = {
backslash = -50;
backslash.case = -50;
};
icircumflex = {
asterisk = 80;
ordfeminine = 80;
ordmasculine = 80;
question = 40;
};
iogonek = {
j = 70;
jcircumflex = 70;
uni0237 = 70;
};
j = {
backslash = -50;
backslash.case = -50;
};
lcaron = {
i = 47;
j = 45;
};
lira = {
ibreve = 22;
icircumflex = 25;
idieresis = 5;
imacron = 5;
itilde = 7;
jcircumflex = 24;
};
lslash = {
fi = 2;
fl = 2;
fl.ss01 = 2;
t = 2;
tbar = 2;
tcaron = 2;
uni0163 = 2;
uni021B = 2;
uni1E6D = 2;
uni1E6F = 2;
uni1E97 = 2;
};
minus = {
uni0414 = -5;
};
ordfeminine = {
icircumflex = 80;
itilde = 30;
uni0209 = 80;
uni020B = 30;
};
ordmasculine = {
icircumflex = 80;
itilde = 30;
uni0209 = 80;
uni020B = 30;
};
parenleft = {
uni0414 = 6;
};
periodcentered = {
uni0414 = -5;
};
plus = {
uni0414 = -5;
};
q = {
j = 50;
jcircumflex = 50;
uni0237 = 50;
};
q.sc = {
slash = 60;
slash.case = 60;
underscore = 50;
uni2215 = 60;
};
question.sc = {
quotesingle.sc = 10;
};
questiondown = {
y = -22;
};
quotedblleft = {
ibreve = 30;
igrave = 30;
uni0209 = 90;
};
quoteleft = {
ibreve = 30;
igrave = 30;
uni0209 = 90;
};
slash = {
eth = -48;
i = 5;
};
slash.case = {
eth = -48;
i = 5;
};
sterling = {
ibreve = 22;
icircumflex = 25;
idieresis = 5;
imacron = 5;
itilde = 7;
jcircumflex = 24;
};
tcaron = {
dotlessi = 10;
eng = 10;
i = 10;
i.loclTRK = 10;
iacute = 10;
ibreve = 10;
icircumflex = 10;
idieresis = 10;
igrave = 10;
ij = 10;
imacron = 10;
iogonek = 10;
itilde = 10;
j = 7;
jcircumflex = 7;
kgreenlandic = 10;
m = 10;
n = 10;
nacute = 10;
napostrophe = 10;
ncaron = 10;
ncommaaccent = 10;
ntilde = 10;
p = 10;
r = 10;
racute = 10;
rcaron = 10;
rcommaaccent = 10;
uni00B5 = 10;
uni01CC = 10;
uni0209 = 10;
uni020B = 10;
uni0211 = 10;
uni0213 = 10;
uni0237 = 7;
uni1E2F = 10;
uni1E43 = 10;
uni1E45 = 10;
uni1E47 = 10;
uni1E49 = 10;
uni1E5B = 10;
uni1E5F = 10;
uni1EC9 = 10;
uni1ECB = 10;
};
underscore = {
IJ.ss01 = 30;
dong = 0;
y = 20;
};
uni00AD = {
uni0414 = -5;
};
uni0162 = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
uni0162.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
uni0209 = {
asterisk = 40;
ordfeminine = 40;
ordmasculine = 40;
};
uni020B = {
asterisk = 30;
ordfeminine = 30;
ordmasculine = 30;
};
uni021A = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
uni021A.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
uni021B = {
j = 20;
jcircumflex = 20;
uni0237 = 20;
};
uni0232 = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
uni02BB = {
ibreve = 30;
igrave = 30;
uni0209 = 90;
};
uni04FD = {
uni0458 = 50;
uni0529 = 50;
};
uni0511 = {
asciitilde = -12;
bullet = -12;
divide = -12;
guillemotleft = -12;
guillemotleft.sc = -12;
guilsinglleft = -12;
guilsinglleft.sc = -12;
hyphen = -12;
logicalnot = -12;
minus = -12;
periodcentered = -12;
plus = -12;
quotedblleft = 13;
quotedblright = 10;
quoteleft = 13;
quoteright = 10;
radical = -12;
uni00AD = -12;
uni02BB = 13;
uni2010 = -12;
};
uni1E6C = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
uni1E6C.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
uni1E6E = {
ibreve = 33;
icircumflex = 30;
idieresis = 15;
igrave = 17;
imacron = 30;
itilde = 20;
jcircumflex = 22;
uni0209 = 83;
uni020B = 24;
uni0211 = 5;
uni1E2F = 32;
};
uni1E6E.ss01 = {
ibreve = 10;
icircumflex = 40;
idieresis = 25;
imacron = 25;
itilde = 27;
jcircumflex = 40;
};
uni1E8E = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
uni1EF4 = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
uni1EF6 = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
uni1EF8 = {
i = -29;
ibreve = 32;
icircumflex = 25;
idieresis = 17;
igrave = 30;
ij = -29;
imacron = 17;
iogonek = -29;
itilde = 17;
jcircumflex = 20;
};
uni2010 = {
uni0414 = -5;
};
uni2116 = {
icircumflex = 80;
itilde = 30;
uni0209 = 80;
uni020B = 30;
};
uni2116.ss01 = {
icircumflex = 80;
itilde = 30;
uni0209 = 80;
uni020B = 30;
};
uni2215 = {
eth = -48;
i = 5;
};
uogonek = {
j = 32;
jcircumflex = 32;
uni0237 = 32;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright 2011 The Montserrat Project Authors (https://github.com/JulietaUla/Montserrat)

Copyright 2021 - a fork with Greek (including Greek Extended) support, by Jorge Mendez";
}
);
},
{
key = familyNames;
values = (
{
language = ENG;
value = Montserrat;
}
);
},
{
key = manufacturers;
values = (
{
language = ENG;
value = "Julieta Ulanovsky";
}
);
},
{
key = designers;
values = (
{
language = ENG;
value = "Julieta Ulanovsky";
}
);
},
{
key = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
key = licenses;
values = (
{
language = ENG;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
}
);
},
{
key = manufacturerURL;
value = "http://www.zkysky.com.ar/";
},
{
key = designerURL;
value = "http://www.zkysky.com.ar/";
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 1000;
versionMajor = 7;
versionMinor = 200;
}
